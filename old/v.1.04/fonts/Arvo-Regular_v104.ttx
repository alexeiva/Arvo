<?xml version="1.0" encoding="UTF-8"?>
<ttFont sfntVersion="\x00\x01\x00\x00" ttLibVersion="3.0">

  <GlyphOrder>
    <!-- The 'id' attribute is only for humans; it is ignored when parsed. -->
    <GlyphID id="0" name=".notdef"/>
    <GlyphID id="1" name="nonmarkingreturn"/>
    <GlyphID id="2" name="A"/>
    <GlyphID id="3" name="B"/>
    <GlyphID id="4" name="C"/>
    <GlyphID id="5" name="D"/>
    <GlyphID id="6" name="E"/>
    <GlyphID id="7" name="F"/>
    <GlyphID id="8" name="G"/>
    <GlyphID id="9" name="H"/>
    <GlyphID id="10" name="I"/>
    <GlyphID id="11" name="J"/>
    <GlyphID id="12" name="K"/>
    <GlyphID id="13" name="L"/>
    <GlyphID id="14" name="M"/>
    <GlyphID id="15" name="N"/>
    <GlyphID id="16" name="O"/>
    <GlyphID id="17" name="P"/>
    <GlyphID id="18" name="Q"/>
    <GlyphID id="19" name="R"/>
    <GlyphID id="20" name="S"/>
    <GlyphID id="21" name="T"/>
    <GlyphID id="22" name="U"/>
    <GlyphID id="23" name="V"/>
    <GlyphID id="24" name="W"/>
    <GlyphID id="25" name="X"/>
    <GlyphID id="26" name="Y"/>
    <GlyphID id="27" name="Z"/>
    <GlyphID id="28" name="space"/>
    <GlyphID id="29" name="underscore"/>
    <GlyphID id="30" name="a"/>
    <GlyphID id="31" name="b"/>
    <GlyphID id="32" name="c"/>
    <GlyphID id="33" name="d"/>
    <GlyphID id="34" name="e"/>
    <GlyphID id="35" name="f"/>
    <GlyphID id="36" name="g"/>
    <GlyphID id="37" name="h"/>
    <GlyphID id="38" name="i"/>
    <GlyphID id="39" name="j"/>
    <GlyphID id="40" name="k"/>
    <GlyphID id="41" name="l"/>
    <GlyphID id="42" name="m"/>
    <GlyphID id="43" name="n"/>
    <GlyphID id="44" name="o"/>
    <GlyphID id="45" name="p"/>
    <GlyphID id="46" name="q"/>
    <GlyphID id="47" name="r"/>
    <GlyphID id="48" name="s"/>
    <GlyphID id="49" name="t"/>
    <GlyphID id="50" name="u"/>
    <GlyphID id="51" name="v"/>
    <GlyphID id="52" name="w"/>
    <GlyphID id="53" name="x"/>
    <GlyphID id="54" name="y"/>
    <GlyphID id="55" name="z"/>
    <GlyphID id="56" name="comma"/>
    <GlyphID id="57" name="hyphen"/>
    <GlyphID id="58" name="period"/>
    <GlyphID id="59" name="zero"/>
    <GlyphID id="60" name="one"/>
    <GlyphID id="61" name="two"/>
    <GlyphID id="62" name="three"/>
    <GlyphID id="63" name="four"/>
    <GlyphID id="64" name="five"/>
    <GlyphID id="65" name="six"/>
    <GlyphID id="66" name="seven"/>
    <GlyphID id="67" name="eight"/>
    <GlyphID id="68" name="nine"/>
    <GlyphID id="69" name="exclam"/>
    <GlyphID id="70" name="percent"/>
    <GlyphID id="71" name="ampersand"/>
    <GlyphID id="72" name="quotesingle"/>
    <GlyphID id="73" name="quotedbl"/>
    <GlyphID id="74" name="parenleft"/>
    <GlyphID id="75" name="parenright"/>
    <GlyphID id="76" name="asterisk"/>
    <GlyphID id="77" name="plus"/>
    <GlyphID id="78" name="slash"/>
    <GlyphID id="79" name="at"/>
    <GlyphID id="80" name="bracketleft"/>
    <GlyphID id="81" name="backslash"/>
    <GlyphID id="82" name="bracketright"/>
    <GlyphID id="83" name="bullet"/>
    <GlyphID id="84" name="paragraph"/>
    <GlyphID id="85" name="germandbls"/>
    <GlyphID id="86" name="registered"/>
    <GlyphID id="87" name="copyright"/>
    <GlyphID id="88" name="guillemotleft"/>
    <GlyphID id="89" name="guillemotright"/>
    <GlyphID id="90" name="ellipsis"/>
    <GlyphID id="91" name="endash"/>
    <GlyphID id="92" name="emdash"/>
    <GlyphID id="93" name="quotedblleft"/>
    <GlyphID id="94" name="quotedblright"/>
    <GlyphID id="95" name="quoteleft"/>
    <GlyphID id="96" name="quoteright"/>
    <GlyphID id="97" name="guilsinglleft"/>
    <GlyphID id="98" name="guilsinglright"/>
    <GlyphID id="99" name="plusminus"/>
    <GlyphID id="100" name="minus"/>
    <GlyphID id="101" name="numbersign"/>
    <GlyphID id="102" name="less"/>
    <GlyphID id="103" name="equal"/>
    <GlyphID id="104" name="greater"/>
    <GlyphID id="105" name="question"/>
    <GlyphID id="106" name="dollar"/>
    <GlyphID id="107" name="braceleft"/>
    <GlyphID id="108" name="bar"/>
    <GlyphID id="109" name="braceright"/>
    <GlyphID id="110" name="asciitilde"/>
    <GlyphID id="111" name="sterling"/>
    <GlyphID id="112" name="cent"/>
    <GlyphID id="113" name="multiply"/>
    <GlyphID id="114" name="colon"/>
    <GlyphID id="115" name="semicolon"/>
    <GlyphID id="116" name="circumflex"/>
    <GlyphID id="117" name="tilde"/>
    <GlyphID id="118" name="macron"/>
    <GlyphID id="119" name="breve"/>
    <GlyphID id="120" name="cedilla"/>
    <GlyphID id="121" name="hungarumlaut"/>
    <GlyphID id="122" name="ogonek"/>
    <GlyphID id="123" name="caron"/>
    <GlyphID id="124" name="degree"/>
    <GlyphID id="125" name="grave"/>
    <GlyphID id="126" name="acute"/>
    <GlyphID id="127" name="dieresis"/>
    <GlyphID id="128" name="ring"/>
    <GlyphID id="129" name="dotaccent"/>
    <GlyphID id="130" name="dotlessi"/>
    <GlyphID id="131" name="AE"/>
    <GlyphID id="132" name="ae"/>
    <GlyphID id="133" name="thorn"/>
    <GlyphID id="134" name="Thorn"/>
    <GlyphID id="135" name="onesuperior"/>
    <GlyphID id="136" name="twosuperior"/>
    <GlyphID id="137" name="threesuperior"/>
    <GlyphID id="138" name="ordmasculine"/>
    <GlyphID id="139" name="ordfeminine"/>
    <GlyphID id="140" name="currency"/>
    <GlyphID id="141" name="logicalnot"/>
    <GlyphID id="142" name="mu"/>
    <GlyphID id="143" name="periodcentered"/>
    <GlyphID id="144" name="exclamdown"/>
    <GlyphID id="145" name="questiondown"/>
    <GlyphID id="146" name="asciicircum"/>
    <GlyphID id="147" name="brokenbar"/>
    <GlyphID id="148" name="fraction"/>
    <GlyphID id="149" name="onequarter"/>
    <GlyphID id="150" name="onehalf"/>
    <GlyphID id="151" name="threequarters"/>
    <GlyphID id="152" name="Oslash"/>
    <GlyphID id="153" name="oslash"/>
    <GlyphID id="154" name="Eth"/>
    <GlyphID id="155" name="eth"/>
    <GlyphID id="156" name="adieresis"/>
    <GlyphID id="157" name="ccaron"/>
    <GlyphID id="158" name="otilde"/>
    <GlyphID id="159" name="odieresis"/>
    <GlyphID id="160" name="udieresis"/>
    <GlyphID id="161" name="scaron"/>
    <GlyphID id="162" name="zcaron"/>
    <GlyphID id="163" name="Adieresis"/>
    <GlyphID id="164" name="Ccaron"/>
    <GlyphID id="165" name="Odieresis"/>
    <GlyphID id="166" name="Otilde"/>
    <GlyphID id="167" name="Udieresis"/>
    <GlyphID id="168" name="Scaron"/>
    <GlyphID id="169" name="Zcaron"/>
    <GlyphID id="170" name="Agrave"/>
    <GlyphID id="171" name="Aacute"/>
    <GlyphID id="172" name="Acircumflex"/>
    <GlyphID id="173" name="Atilde"/>
    <GlyphID id="174" name="Aring"/>
    <GlyphID id="175" name="Ccedilla"/>
    <GlyphID id="176" name="Egrave"/>
    <GlyphID id="177" name="Eacute"/>
    <GlyphID id="178" name="Ecircumflex"/>
    <GlyphID id="179" name="Edieresis"/>
    <GlyphID id="180" name="Igrave"/>
    <GlyphID id="181" name="Iacute"/>
    <GlyphID id="182" name="Icircumflex"/>
    <GlyphID id="183" name="Idieresis"/>
    <GlyphID id="184" name="Ograve"/>
    <GlyphID id="185" name="Ntilde"/>
    <GlyphID id="186" name="Oacute"/>
    <GlyphID id="187" name="Ocircumflex"/>
    <GlyphID id="188" name="Ugrave"/>
    <GlyphID id="189" name="Uacute"/>
    <GlyphID id="190" name="Ucircumflex"/>
    <GlyphID id="191" name="Yacute"/>
    <GlyphID id="192" name="agrave"/>
    <GlyphID id="193" name="aacute"/>
    <GlyphID id="194" name="acircumflex"/>
    <GlyphID id="195" name="atilde"/>
    <GlyphID id="196" name="aring"/>
    <GlyphID id="197" name="ccedilla"/>
    <GlyphID id="198" name="egrave"/>
    <GlyphID id="199" name="eacute"/>
    <GlyphID id="200" name="ecircumflex"/>
    <GlyphID id="201" name="edieresis"/>
    <GlyphID id="202" name="igrave"/>
    <GlyphID id="203" name="iacute"/>
    <GlyphID id="204" name="icircumflex"/>
    <GlyphID id="205" name="idieresis"/>
    <GlyphID id="206" name="ograve"/>
    <GlyphID id="207" name="ntilde"/>
    <GlyphID id="208" name="oacute"/>
    <GlyphID id="209" name="ocircumflex"/>
    <GlyphID id="210" name="ugrave"/>
    <GlyphID id="211" name="uacute"/>
    <GlyphID id="212" name="ucircumflex"/>
    <GlyphID id="213" name="yacute"/>
    <GlyphID id="214" name="divisionslash"/>
    <GlyphID id="215" name="divide"/>
    <GlyphID id="216" name="yen"/>
    <GlyphID id="217" name="twoinferior"/>
    <GlyphID id="218" name="fourinferior"/>
    <GlyphID id="219" name="quotedblbase"/>
    <GlyphID id="220" name="foursuperior"/>
    <GlyphID id="221" name="section"/>
    <GlyphID id="222" name="Ydieresis"/>
    <GlyphID id="223" name="ydieresis"/>
  </GlyphOrder>

  <head>
    <!-- Most of this table will be recalculated by the compiler -->
    <tableVersion value="1.0"/>
    <fontRevision value="1.0"/>
    <checkSumAdjustment value="0x78702cb6"/>
    <magicNumber value="0x5f0f3cf5"/>
    <flags value="00000000 00001001"/>
    <unitsPerEm value="2048"/>
    <created value="Mon Oct 18 15:49:45 2010"/>
    <modified value="Mon Nov 15 16:00:31 2010"/>
    <xMin value="-203"/>
    <yMin value="-506"/>
    <xMax value="2550"/>
    <yMax value="1969"/>
    <macStyle value="00000000 00000000"/>
    <lowestRecPPEM value="9"/>
    <fontDirectionHint value="2"/>
    <indexToLocFormat value="0"/>
    <glyphDataFormat value="0"/>
  </head>

  <hhea>
    <tableVersion value="1.0"/>
    <ascent value="1968"/>
    <descent value="-506"/>
    <lineGap value="55"/>
    <advanceWidthMax value="2806"/>
    <minLeftSideBearing value="-203"/>
    <minRightSideBearing value="-156"/>
    <xMaxExtent value="2550"/>
    <caretSlopeRise value="1"/>
    <caretSlopeRun value="0"/>
    <caretOffset value="0"/>
    <reserved0 value="0"/>
    <reserved1 value="0"/>
    <reserved2 value="0"/>
    <reserved3 value="0"/>
    <metricDataFormat value="0"/>
    <numberOfHMetrics value="224"/>
  </hhea>

  <maxp>
    <!-- Most of this table will be recalculated by the compiler -->
    <tableVersion value="0x10000"/>
    <numGlyphs value="224"/>
    <maxPoints value="107"/>
    <maxContours value="5"/>
    <maxCompositePoints value="102"/>
    <maxCompositeContours value="4"/>
    <maxZones value="2"/>
    <maxTwilightPoints value="16"/>
    <maxStorage value="47"/>
    <maxFunctionDefs value="89"/>
    <maxInstructionDefs value="0"/>
    <maxStackElements value="476"/>
    <maxSizeOfInstructions value="1571"/>
    <maxComponentElements value="3"/>
    <maxComponentDepth value="1"/>
  </maxp>

  <OS_2>
    <!-- The fields 'usFirstCharIndex' and 'usLastCharIndex'
         will be recalculated by the compiler -->
    <version value="2"/>
    <xAvgCharWidth value="967"/>
    <usWeightClass value="400"/>
    <usWidthClass value="5"/>
    <fsType value="00000000 00000000"/>
    <ySubscriptXSize value="1434"/>
    <ySubscriptYSize value="1331"/>
    <ySubscriptXOffset value="0"/>
    <ySubscriptYOffset value="287"/>
    <ySuperscriptXSize value="1434"/>
    <ySuperscriptYSize value="1331"/>
    <ySuperscriptXOffset value="0"/>
    <ySuperscriptYOffset value="977"/>
    <yStrikeoutSize value="102"/>
    <yStrikeoutPosition value="512"/>
    <sFamilyClass value="0"/>
    <panose>
      <bFamilyType value="2"/>
      <bSerifStyle value="0"/>
      <bWeight value="0"/>
      <bProportion value="0"/>
      <bContrast value="0"/>
      <bStrokeVariation value="0"/>
      <bArmStyle value="0"/>
      <bLetterForm value="0"/>
      <bMidline value="0"/>
      <bXHeight value="0"/>
    </panose>
    <ulUnicodeRange1 value="10000000 00000000 00000000 10100111"/>
    <ulUnicodeRange2 value="00000000 00000000 00000000 01000001"/>
    <ulUnicodeRange3 value="00000000 00000000 00000000 00000000"/>
    <ulUnicodeRange4 value="00000000 00000000 00000000 00000000"/>
    <achVendID value="KORK"/>
    <fsSelection value="00000000 01000000"/>
    <usFirstCharIndex value="32"/>
    <usLastCharIndex value="8729"/>
    <sTypoAscender value="1556"/>
    <sTypoDescender value="-471"/>
    <sTypoLineGap value="110"/>
    <usWinAscent value="1968"/>
    <usWinDescent value="506"/>
    <ulCodePageRange1 value="00100000 00000000 00000001 00010001"/>
    <ulCodePageRange2 value="01000000 00000000 00000000 00000000"/>
    <sxHeight value="1036"/>
    <sCapHeight value="1516"/>
    <usDefaultChar value="0"/>
    <usBreakChar value="32"/>
    <usMaxContext value="0"/>
  </OS_2>

  <hmtx>
    <mtx name=".notdef" width="1141" lsb="102"/>
    <mtx name="A" width="1542" lsb="10"/>
    <mtx name="AE" width="1915" lsb="-2"/>
    <mtx name="Aacute" width="1542" lsb="10"/>
    <mtx name="Acircumflex" width="1542" lsb="10"/>
    <mtx name="Adieresis" width="1542" lsb="10"/>
    <mtx name="Agrave" width="1542" lsb="10"/>
    <mtx name="Aring" width="1542" lsb="10"/>
    <mtx name="Atilde" width="1542" lsb="10"/>
    <mtx name="B" width="1352" lsb="143"/>
    <mtx name="C" width="1509" lsb="72"/>
    <mtx name="Ccaron" width="1509" lsb="72"/>
    <mtx name="Ccedilla" width="1509" lsb="72"/>
    <mtx name="D" width="1507" lsb="143"/>
    <mtx name="E" width="1286" lsb="143"/>
    <mtx name="Eacute" width="1286" lsb="143"/>
    <mtx name="Ecircumflex" width="1286" lsb="143"/>
    <mtx name="Edieresis" width="1286" lsb="143"/>
    <mtx name="Egrave" width="1286" lsb="143"/>
    <mtx name="Eth" width="1516" lsb="127"/>
    <mtx name="F" width="1243" lsb="143"/>
    <mtx name="G" width="1683" lsb="72"/>
    <mtx name="H" width="1843" lsb="143"/>
    <mtx name="I" width="770" lsb="143"/>
    <mtx name="Iacute" width="770" lsb="143"/>
    <mtx name="Icircumflex" width="770" lsb="104"/>
    <mtx name="Idieresis" width="770" lsb="30"/>
    <mtx name="Igrave" width="770" lsb="86"/>
    <mtx name="J" width="682" lsb="102"/>
    <mtx name="K" width="1567" lsb="143"/>
    <mtx name="L" width="1296" lsb="143"/>
    <mtx name="M" width="2189" lsb="143"/>
    <mtx name="N" width="1624" lsb="143"/>
    <mtx name="Ntilde" width="1624" lsb="143"/>
    <mtx name="O" width="1597" lsb="72"/>
    <mtx name="Oacute" width="1597" lsb="72"/>
    <mtx name="Ocircumflex" width="1597" lsb="72"/>
    <mtx name="Odieresis" width="1597" lsb="72"/>
    <mtx name="Ograve" width="1597" lsb="72"/>
    <mtx name="Oslash" width="1593" lsb="67"/>
    <mtx name="Otilde" width="1597" lsb="72"/>
    <mtx name="P" width="1272" lsb="143"/>
    <mtx name="Q" width="1597" lsb="72"/>
    <mtx name="R" width="1458" lsb="143"/>
    <mtx name="S" width="1210" lsb="80"/>
    <mtx name="Scaron" width="1210" lsb="80"/>
    <mtx name="T" width="1434" lsb="41"/>
    <mtx name="Thorn" width="1323" lsb="104"/>
    <mtx name="U" width="1550" lsb="113"/>
    <mtx name="Uacute" width="1550" lsb="113"/>
    <mtx name="Ucircumflex" width="1550" lsb="113"/>
    <mtx name="Udieresis" width="1550" lsb="113"/>
    <mtx name="Ugrave" width="1550" lsb="113"/>
    <mtx name="V" width="1485" lsb="-10"/>
    <mtx name="W" width="2560" lsb="10"/>
    <mtx name="X" width="1500" lsb="170"/>
    <mtx name="Y" width="1354" lsb="51"/>
    <mtx name="Yacute" width="1354" lsb="51"/>
    <mtx name="Ydieresis" width="1354" lsb="51"/>
    <mtx name="Z" width="1214" lsb="51"/>
    <mtx name="Zcaron" width="1214" lsb="51"/>
    <mtx name="a" width="1120" lsb="70"/>
    <mtx name="aacute" width="1120" lsb="70"/>
    <mtx name="acircumflex" width="1120" lsb="70"/>
    <mtx name="acute" width="645" lsb="84"/>
    <mtx name="adieresis" width="1120" lsb="70"/>
    <mtx name="ae" width="1784" lsb="51"/>
    <mtx name="agrave" width="1120" lsb="70"/>
    <mtx name="ampersand" width="1468" lsb="143"/>
    <mtx name="aring" width="1120" lsb="70"/>
    <mtx name="asciicircum" width="1229" lsb="156"/>
    <mtx name="asciitilde" width="1229" lsb="141"/>
    <mtx name="asterisk" width="836" lsb="59"/>
    <mtx name="at" width="2310" lsb="145"/>
    <mtx name="atilde" width="1120" lsb="70"/>
    <mtx name="b" width="1253" lsb="57"/>
    <mtx name="backslash" width="948" lsb="41"/>
    <mtx name="bar" width="455" lsb="152"/>
    <mtx name="braceleft" width="721" lsb="133"/>
    <mtx name="braceright" width="721" lsb="72"/>
    <mtx name="bracketleft" width="721" lsb="238"/>
    <mtx name="bracketright" width="721" lsb="80"/>
    <mtx name="breve" width="1008" lsb="119"/>
    <mtx name="brokenbar" width="512" lsb="152"/>
    <mtx name="bullet" width="811" lsb="154"/>
    <mtx name="c" width="1118" lsb="92"/>
    <mtx name="caron" width="860" lsb="223"/>
    <mtx name="ccaron" width="1118" lsb="92"/>
    <mtx name="ccedilla" width="1118" lsb="92"/>
    <mtx name="cedilla" width="940" lsb="182"/>
    <mtx name="cent" width="1210" lsb="111"/>
    <mtx name="circumflex" width="860" lsb="217"/>
    <mtx name="colon" width="524" lsb="96"/>
    <mtx name="comma" width="569" lsb="20"/>
    <mtx name="copyright" width="1919" lsb="102"/>
    <mtx name="currency" width="1128" lsb="55"/>
    <mtx name="d" width="1268" lsb="92"/>
    <mtx name="degree" width="682" lsb="102"/>
    <mtx name="dieresis" width="612" lsb="39"/>
    <mtx name="divide" width="1126" lsb="51"/>
    <mtx name="divisionslash" width="800" lsb="-203"/>
    <mtx name="dollar" width="1210" lsb="150"/>
    <mtx name="dotaccent" width="612" lsb="174"/>
    <mtx name="dotlessi" width="612" lsb="59"/>
    <mtx name="e" width="1175" lsb="92"/>
    <mtx name="eacute" width="1175" lsb="92"/>
    <mtx name="ecircumflex" width="1175" lsb="92"/>
    <mtx name="edieresis" width="1175" lsb="92"/>
    <mtx name="egrave" width="1175" lsb="92"/>
    <mtx name="eight" width="1276" lsb="139"/>
    <mtx name="ellipsis" width="2048" lsb="205"/>
    <mtx name="emdash" width="2048" lsb="0"/>
    <mtx name="endash" width="1024" lsb="0"/>
    <mtx name="equal" width="922" lsb="86"/>
    <mtx name="eth" width="1270" lsb="94"/>
    <mtx name="exclam" width="682" lsb="211"/>
    <mtx name="exclamdown" width="682" lsb="211"/>
    <mtx name="f" width="745" lsb="85"/>
    <mtx name="five" width="1139" lsb="74"/>
    <mtx name="four" width="1251" lsb="90"/>
    <mtx name="fourinferior" width="2806" lsb="1735"/>
    <mtx name="foursuperior" width="809" lsb="115"/>
    <mtx name="fraction" width="1400" lsb="-43"/>
    <mtx name="g" width="1200" lsb="92"/>
    <mtx name="germandbls" width="1247" lsb="16"/>
    <mtx name="grave" width="590" lsb="100"/>
    <mtx name="greater" width="1147" lsb="164"/>
    <mtx name="guillemotleft" width="1040" lsb="102"/>
    <mtx name="guillemotright" width="1040" lsb="102"/>
    <mtx name="guilsinglleft" width="616" lsb="102"/>
    <mtx name="guilsinglright" width="616" lsb="102"/>
    <mtx name="h" width="1354" lsb="100"/>
    <mtx name="hungarumlaut" width="1341" lsb="512"/>
    <mtx name="hyphen" width="737" lsb="94"/>
    <mtx name="i" width="657" lsb="92"/>
    <mtx name="iacute" width="612" lsb="59"/>
    <mtx name="icircumflex" width="612" lsb="58"/>
    <mtx name="idieresis" width="657" lsb="13"/>
    <mtx name="igrave" width="612" lsb="0"/>
    <mtx name="j" width="604" lsb="61"/>
    <mtx name="k" width="1286" lsb="92"/>
    <mtx name="l" width="666" lsb="92"/>
    <mtx name="less" width="1001" lsb="10"/>
    <mtx name="logicalnot" width="1214" lsb="49"/>
    <mtx name="m" width="2050" lsb="100"/>
    <mtx name="macron" width="797" lsb="39"/>
    <mtx name="minus" width="1075" lsb="51"/>
    <mtx name="mu" width="1198" lsb="158"/>
    <mtx name="multiply" width="1303" lsb="133"/>
    <mtx name="n" width="1366" lsb="100"/>
    <mtx name="nine" width="1270" lsb="103"/>
    <mtx name="nonmarkingreturn" width="0" lsb="0"/>
    <mtx name="ntilde" width="1366" lsb="100"/>
    <mtx name="numbersign" width="1423" lsb="20"/>
    <mtx name="o" width="1225" lsb="86"/>
    <mtx name="oacute" width="1225" lsb="86"/>
    <mtx name="ocircumflex" width="1225" lsb="86"/>
    <mtx name="odieresis" width="1225" lsb="86"/>
    <mtx name="ogonek" width="539" lsb="29"/>
    <mtx name="ograve" width="1225" lsb="86"/>
    <mtx name="one" width="858" lsb="82"/>
    <mtx name="onehalf" width="1700" lsb="0"/>
    <mtx name="onequarter" width="1700" lsb="0"/>
    <mtx name="onesuperior" width="500" lsb="33"/>
    <mtx name="ordfeminine" width="838" lsb="102"/>
    <mtx name="ordmasculine" width="934" lsb="102"/>
    <mtx name="oslash" width="1219" lsb="52"/>
    <mtx name="otilde" width="1225" lsb="86"/>
    <mtx name="p" width="1249" lsb="59"/>
    <mtx name="paragraph" width="1274" lsb="41"/>
    <mtx name="parenleft" width="721" lsb="141"/>
    <mtx name="parenright" width="721" lsb="53"/>
    <mtx name="percent" width="1730" lsb="75"/>
    <mtx name="period" width="456" lsb="96"/>
    <mtx name="periodcentered" width="612" lsb="174"/>
    <mtx name="plus" width="1311" lsb="143"/>
    <mtx name="plusminus" width="1229" lsb="102"/>
    <mtx name="q" width="1206" lsb="92"/>
    <mtx name="question" width="1065" lsb="121"/>
    <mtx name="questiondown" width="1030" lsb="8"/>
    <mtx name="quotedbl" width="651" lsb="41"/>
    <mtx name="quotedblbase" width="1005" lsb="20"/>
    <mtx name="quotedblleft" width="1065" lsb="129"/>
    <mtx name="quotedblright" width="1028" lsb="92"/>
    <mtx name="quoteleft" width="606" lsb="113"/>
    <mtx name="quoteright" width="606" lsb="92"/>
    <mtx name="quotesingle" width="340" lsb="37"/>
    <mtx name="r" width="960" lsb="100"/>
    <mtx name="registered" width="1919" lsb="102"/>
    <mtx name="ring" width="1200" lsb="354"/>
    <mtx name="s" width="993" lsb="82"/>
    <mtx name="scaron" width="993" lsb="82"/>
    <mtx name="section" width="1094" lsb="74"/>
    <mtx name="semicolon" width="524" lsb="-20"/>
    <mtx name="seven" width="1077" lsb="41"/>
    <mtx name="six" width="1249" lsb="94"/>
    <mtx name="slash" width="848" lsb="37"/>
    <mtx name="space" width="448" lsb="0"/>
    <mtx name="sterling" width="932" lsb="33"/>
    <mtx name="t" width="762" lsb="51"/>
    <mtx name="thorn" width="1243" lsb="55"/>
    <mtx name="three" width="1110" lsb="41"/>
    <mtx name="threequarters" width="1700" lsb="0"/>
    <mtx name="threesuperior" width="631" lsb="51"/>
    <mtx name="tilde" width="1000" lsb="88"/>
    <mtx name="two" width="1100" lsb="86"/>
    <mtx name="twoinferior" width="800" lsb="100"/>
    <mtx name="twosuperior" width="700" lsb="53"/>
    <mtx name="u" width="1350" lsb="60"/>
    <mtx name="uacute" width="1350" lsb="60"/>
    <mtx name="ucircumflex" width="1350" lsb="60"/>
    <mtx name="udieresis" width="1350" lsb="60"/>
    <mtx name="ugrave" width="1350" lsb="60"/>
    <mtx name="underscore" width="1024" lsb="0"/>
    <mtx name="v" width="1100" lsb="20"/>
    <mtx name="w" width="1640" lsb="20"/>
    <mtx name="x" width="1090" lsb="51"/>
    <mtx name="y" width="1176" lsb="31"/>
    <mtx name="yacute" width="1176" lsb="31"/>
    <mtx name="ydieresis" width="1176" lsb="31"/>
    <mtx name="yen" width="1354" lsb="51"/>
    <mtx name="z" width="924" lsb="76"/>
    <mtx name="zcaron" width="924" lsb="76"/>
    <mtx name="zero" width="1330" lsb="88"/>
  </hmtx>

  <cmap>
    <tableVersion version="0"/>
    <cmap_format_4 platformID="0" platEncID="3" language="0">
      <map code="0x20" name="space"/><!-- SPACE -->
      <map code="0x21" name="exclam"/><!-- EXCLAMATION MARK -->
      <map code="0x22" name="quotedbl"/><!-- QUOTATION MARK -->
      <map code="0x23" name="numbersign"/><!-- NUMBER SIGN -->
      <map code="0x24" name="dollar"/><!-- DOLLAR SIGN -->
      <map code="0x25" name="percent"/><!-- PERCENT SIGN -->
      <map code="0x26" name="ampersand"/><!-- AMPERSAND -->
      <map code="0x27" name="quotesingle"/><!-- APOSTROPHE -->
      <map code="0x28" name="parenleft"/><!-- LEFT PARENTHESIS -->
      <map code="0x29" name="parenright"/><!-- RIGHT PARENTHESIS -->
      <map code="0x2a" name="asterisk"/><!-- ASTERISK -->
      <map code="0x2b" name="plus"/><!-- PLUS SIGN -->
      <map code="0x2c" name="comma"/><!-- COMMA -->
      <map code="0x2d" name="hyphen"/><!-- HYPHEN-MINUS -->
      <map code="0x2e" name="period"/><!-- FULL STOP -->
      <map code="0x2f" name="slash"/><!-- SOLIDUS -->
      <map code="0x30" name="zero"/><!-- DIGIT ZERO -->
      <map code="0x31" name="one"/><!-- DIGIT ONE -->
      <map code="0x32" name="two"/><!-- DIGIT TWO -->
      <map code="0x33" name="three"/><!-- DIGIT THREE -->
      <map code="0x34" name="four"/><!-- DIGIT FOUR -->
      <map code="0x35" name="five"/><!-- DIGIT FIVE -->
      <map code="0x36" name="six"/><!-- DIGIT SIX -->
      <map code="0x37" name="seven"/><!-- DIGIT SEVEN -->
      <map code="0x38" name="eight"/><!-- DIGIT EIGHT -->
      <map code="0x39" name="nine"/><!-- DIGIT NINE -->
      <map code="0x3a" name="colon"/><!-- COLON -->
      <map code="0x3b" name="semicolon"/><!-- SEMICOLON -->
      <map code="0x3c" name="less"/><!-- LESS-THAN SIGN -->
      <map code="0x3d" name="equal"/><!-- EQUALS SIGN -->
      <map code="0x3e" name="greater"/><!-- GREATER-THAN SIGN -->
      <map code="0x3f" name="question"/><!-- QUESTION MARK -->
      <map code="0x40" name="at"/><!-- COMMERCIAL AT -->
      <map code="0x41" name="A"/><!-- LATIN CAPITAL LETTER A -->
      <map code="0x42" name="B"/><!-- LATIN CAPITAL LETTER B -->
      <map code="0x43" name="C"/><!-- LATIN CAPITAL LETTER C -->
      <map code="0x44" name="D"/><!-- LATIN CAPITAL LETTER D -->
      <map code="0x45" name="E"/><!-- LATIN CAPITAL LETTER E -->
      <map code="0x46" name="F"/><!-- LATIN CAPITAL LETTER F -->
      <map code="0x47" name="G"/><!-- LATIN CAPITAL LETTER G -->
      <map code="0x48" name="H"/><!-- LATIN CAPITAL LETTER H -->
      <map code="0x49" name="I"/><!-- LATIN CAPITAL LETTER I -->
      <map code="0x4a" name="J"/><!-- LATIN CAPITAL LETTER J -->
      <map code="0x4b" name="K"/><!-- LATIN CAPITAL LETTER K -->
      <map code="0x4c" name="L"/><!-- LATIN CAPITAL LETTER L -->
      <map code="0x4d" name="M"/><!-- LATIN CAPITAL LETTER M -->
      <map code="0x4e" name="N"/><!-- LATIN CAPITAL LETTER N -->
      <map code="0x4f" name="O"/><!-- LATIN CAPITAL LETTER O -->
      <map code="0x50" name="P"/><!-- LATIN CAPITAL LETTER P -->
      <map code="0x51" name="Q"/><!-- LATIN CAPITAL LETTER Q -->
      <map code="0x52" name="R"/><!-- LATIN CAPITAL LETTER R -->
      <map code="0x53" name="S"/><!-- LATIN CAPITAL LETTER S -->
      <map code="0x54" name="T"/><!-- LATIN CAPITAL LETTER T -->
      <map code="0x55" name="U"/><!-- LATIN CAPITAL LETTER U -->
      <map code="0x56" name="V"/><!-- LATIN CAPITAL LETTER V -->
      <map code="0x57" name="W"/><!-- LATIN CAPITAL LETTER W -->
      <map code="0x58" name="X"/><!-- LATIN CAPITAL LETTER X -->
      <map code="0x59" name="Y"/><!-- LATIN CAPITAL LETTER Y -->
      <map code="0x5a" name="Z"/><!-- LATIN CAPITAL LETTER Z -->
      <map code="0x5b" name="bracketleft"/><!-- LEFT SQUARE BRACKET -->
      <map code="0x5c" name="backslash"/><!-- REVERSE SOLIDUS -->
      <map code="0x5d" name="bracketright"/><!-- RIGHT SQUARE BRACKET -->
      <map code="0x5e" name="asciicircum"/><!-- CIRCUMFLEX ACCENT -->
      <map code="0x5f" name="underscore"/><!-- LOW LINE -->
      <map code="0x60" name="grave"/><!-- GRAVE ACCENT -->
      <map code="0x61" name="a"/><!-- LATIN SMALL LETTER A -->
      <map code="0x62" name="b"/><!-- LATIN SMALL LETTER B -->
      <map code="0x63" name="c"/><!-- LATIN SMALL LETTER C -->
      <map code="0x64" name="d"/><!-- LATIN SMALL LETTER D -->
      <map code="0x65" name="e"/><!-- LATIN SMALL LETTER E -->
      <map code="0x66" name="f"/><!-- LATIN SMALL LETTER F -->
      <map code="0x67" name="g"/><!-- LATIN SMALL LETTER G -->
      <map code="0x68" name="h"/><!-- LATIN SMALL LETTER H -->
      <map code="0x69" name="i"/><!-- LATIN SMALL LETTER I -->
      <map code="0x6a" name="j"/><!-- LATIN SMALL LETTER J -->
      <map code="0x6b" name="k"/><!-- LATIN SMALL LETTER K -->
      <map code="0x6c" name="l"/><!-- LATIN SMALL LETTER L -->
      <map code="0x6d" name="m"/><!-- LATIN SMALL LETTER M -->
      <map code="0x6e" name="n"/><!-- LATIN SMALL LETTER N -->
      <map code="0x6f" name="o"/><!-- LATIN SMALL LETTER O -->
      <map code="0x70" name="p"/><!-- LATIN SMALL LETTER P -->
      <map code="0x71" name="q"/><!-- LATIN SMALL LETTER Q -->
      <map code="0x72" name="r"/><!-- LATIN SMALL LETTER R -->
      <map code="0x73" name="s"/><!-- LATIN SMALL LETTER S -->
      <map code="0x74" name="t"/><!-- LATIN SMALL LETTER T -->
      <map code="0x75" name="u"/><!-- LATIN SMALL LETTER U -->
      <map code="0x76" name="v"/><!-- LATIN SMALL LETTER V -->
      <map code="0x77" name="w"/><!-- LATIN SMALL LETTER W -->
      <map code="0x78" name="x"/><!-- LATIN SMALL LETTER X -->
      <map code="0x79" name="y"/><!-- LATIN SMALL LETTER Y -->
      <map code="0x7a" name="z"/><!-- LATIN SMALL LETTER Z -->
      <map code="0x7b" name="braceleft"/><!-- LEFT CURLY BRACKET -->
      <map code="0x7c" name="bar"/><!-- VERTICAL LINE -->
      <map code="0x7d" name="braceright"/><!-- RIGHT CURLY BRACKET -->
      <map code="0x7e" name="asciitilde"/><!-- TILDE -->
      <map code="0xa1" name="exclamdown"/><!-- INVERTED EXCLAMATION MARK -->
      <map code="0xa2" name="cent"/><!-- CENT SIGN -->
      <map code="0xa3" name="sterling"/><!-- POUND SIGN -->
      <map code="0xa4" name="currency"/><!-- CURRENCY SIGN -->
      <map code="0xa5" name="yen"/><!-- YEN SIGN -->
      <map code="0xa6" name="brokenbar"/><!-- BROKEN BAR -->
      <map code="0xa7" name="section"/><!-- SECTION SIGN -->
      <map code="0xa8" name="dieresis"/><!-- DIAERESIS -->
      <map code="0xa9" name="copyright"/><!-- COPYRIGHT SIGN -->
      <map code="0xaa" name="ordfeminine"/><!-- FEMININE ORDINAL INDICATOR -->
      <map code="0xab" name="guillemotleft"/><!-- LEFT-POINTING DOUBLE ANGLE QUOTATION MARK -->
      <map code="0xac" name="logicalnot"/><!-- NOT SIGN -->
      <map code="0xad" name="hyphen"/><!-- SOFT HYPHEN -->
      <map code="0xae" name="registered"/><!-- REGISTERED SIGN -->
      <map code="0xaf" name="macron"/><!-- MACRON -->
      <map code="0xb0" name="degree"/><!-- DEGREE SIGN -->
      <map code="0xb1" name="plusminus"/><!-- PLUS-MINUS SIGN -->
      <map code="0xb2" name="twosuperior"/><!-- SUPERSCRIPT TWO -->
      <map code="0xb3" name="threesuperior"/><!-- SUPERSCRIPT THREE -->
      <map code="0xb4" name="acute"/><!-- ACUTE ACCENT -->
      <map code="0xb5" name="mu"/><!-- MICRO SIGN -->
      <map code="0xb6" name="paragraph"/><!-- PILCROW SIGN -->
      <map code="0xb7" name="periodcentered"/><!-- MIDDLE DOT -->
      <map code="0xb8" name="cedilla"/><!-- CEDILLA -->
      <map code="0xb9" name="onesuperior"/><!-- SUPERSCRIPT ONE -->
      <map code="0xba" name="ordmasculine"/><!-- MASCULINE ORDINAL INDICATOR -->
      <map code="0xbb" name="guillemotright"/><!-- RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK -->
      <map code="0xbc" name="onequarter"/><!-- VULGAR FRACTION ONE QUARTER -->
      <map code="0xbd" name="onehalf"/><!-- VULGAR FRACTION ONE HALF -->
      <map code="0xbe" name="threequarters"/><!-- VULGAR FRACTION THREE QUARTERS -->
      <map code="0xbf" name="questiondown"/><!-- INVERTED QUESTION MARK -->
      <map code="0xc0" name="Agrave"/><!-- LATIN CAPITAL LETTER A WITH GRAVE -->
      <map code="0xc1" name="Aacute"/><!-- LATIN CAPITAL LETTER A WITH ACUTE -->
      <map code="0xc2" name="Acircumflex"/><!-- LATIN CAPITAL LETTER A WITH CIRCUMFLEX -->
      <map code="0xc3" name="Atilde"/><!-- LATIN CAPITAL LETTER A WITH TILDE -->
      <map code="0xc4" name="Adieresis"/><!-- LATIN CAPITAL LETTER A WITH DIAERESIS -->
      <map code="0xc5" name="Aring"/><!-- LATIN CAPITAL LETTER A WITH RING ABOVE -->
      <map code="0xc6" name="AE"/><!-- LATIN CAPITAL LETTER AE -->
      <map code="0xc7" name="Ccedilla"/><!-- LATIN CAPITAL LETTER C WITH CEDILLA -->
      <map code="0xc8" name="Egrave"/><!-- LATIN CAPITAL LETTER E WITH GRAVE -->
      <map code="0xc9" name="Eacute"/><!-- LATIN CAPITAL LETTER E WITH ACUTE -->
      <map code="0xca" name="Ecircumflex"/><!-- LATIN CAPITAL LETTER E WITH CIRCUMFLEX -->
      <map code="0xcb" name="Edieresis"/><!-- LATIN CAPITAL LETTER E WITH DIAERESIS -->
      <map code="0xcc" name="Igrave"/><!-- LATIN CAPITAL LETTER I WITH GRAVE -->
      <map code="0xcd" name="Iacute"/><!-- LATIN CAPITAL LETTER I WITH ACUTE -->
      <map code="0xce" name="Icircumflex"/><!-- LATIN CAPITAL LETTER I WITH CIRCUMFLEX -->
      <map code="0xcf" name="Idieresis"/><!-- LATIN CAPITAL LETTER I WITH DIAERESIS -->
      <map code="0xd0" name="Eth"/><!-- LATIN CAPITAL LETTER ETH -->
      <map code="0xd1" name="Ntilde"/><!-- LATIN CAPITAL LETTER N WITH TILDE -->
      <map code="0xd2" name="Ograve"/><!-- LATIN CAPITAL LETTER O WITH GRAVE -->
      <map code="0xd3" name="Oacute"/><!-- LATIN CAPITAL LETTER O WITH ACUTE -->
      <map code="0xd4" name="Ocircumflex"/><!-- LATIN CAPITAL LETTER O WITH CIRCUMFLEX -->
      <map code="0xd5" name="Otilde"/><!-- LATIN CAPITAL LETTER O WITH TILDE -->
      <map code="0xd6" name="Odieresis"/><!-- LATIN CAPITAL LETTER O WITH DIAERESIS -->
      <map code="0xd7" name="multiply"/><!-- MULTIPLICATION SIGN -->
      <map code="0xd8" name="Oslash"/><!-- LATIN CAPITAL LETTER O WITH STROKE -->
      <map code="0xd9" name="Ugrave"/><!-- LATIN CAPITAL LETTER U WITH GRAVE -->
      <map code="0xda" name="Uacute"/><!-- LATIN CAPITAL LETTER U WITH ACUTE -->
      <map code="0xdb" name="Ucircumflex"/><!-- LATIN CAPITAL LETTER U WITH CIRCUMFLEX -->
      <map code="0xdc" name="Udieresis"/><!-- LATIN CAPITAL LETTER U WITH DIAERESIS -->
      <map code="0xdd" name="Yacute"/><!-- LATIN CAPITAL LETTER Y WITH ACUTE -->
      <map code="0xde" name="Thorn"/><!-- LATIN CAPITAL LETTER THORN -->
      <map code="0xdf" name="germandbls"/><!-- LATIN SMALL LETTER SHARP S -->
      <map code="0xe0" name="agrave"/><!-- LATIN SMALL LETTER A WITH GRAVE -->
      <map code="0xe1" name="aacute"/><!-- LATIN SMALL LETTER A WITH ACUTE -->
      <map code="0xe2" name="acircumflex"/><!-- LATIN SMALL LETTER A WITH CIRCUMFLEX -->
      <map code="0xe3" name="atilde"/><!-- LATIN SMALL LETTER A WITH TILDE -->
      <map code="0xe4" name="adieresis"/><!-- LATIN SMALL LETTER A WITH DIAERESIS -->
      <map code="0xe5" name="aring"/><!-- LATIN SMALL LETTER A WITH RING ABOVE -->
      <map code="0xe6" name="ae"/><!-- LATIN SMALL LETTER AE -->
      <map code="0xe7" name="ccedilla"/><!-- LATIN SMALL LETTER C WITH CEDILLA -->
      <map code="0xe8" name="egrave"/><!-- LATIN SMALL LETTER E WITH GRAVE -->
      <map code="0xe9" name="eacute"/><!-- LATIN SMALL LETTER E WITH ACUTE -->
      <map code="0xea" name="ecircumflex"/><!-- LATIN SMALL LETTER E WITH CIRCUMFLEX -->
      <map code="0xeb" name="edieresis"/><!-- LATIN SMALL LETTER E WITH DIAERESIS -->
      <map code="0xec" name="igrave"/><!-- LATIN SMALL LETTER I WITH GRAVE -->
      <map code="0xed" name="iacute"/><!-- LATIN SMALL LETTER I WITH ACUTE -->
      <map code="0xee" name="icircumflex"/><!-- LATIN SMALL LETTER I WITH CIRCUMFLEX -->
      <map code="0xef" name="idieresis"/><!-- LATIN SMALL LETTER I WITH DIAERESIS -->
      <map code="0xf0" name="eth"/><!-- LATIN SMALL LETTER ETH -->
      <map code="0xf1" name="ntilde"/><!-- LATIN SMALL LETTER N WITH TILDE -->
      <map code="0xf2" name="ograve"/><!-- LATIN SMALL LETTER O WITH GRAVE -->
      <map code="0xf3" name="oacute"/><!-- LATIN SMALL LETTER O WITH ACUTE -->
      <map code="0xf4" name="ocircumflex"/><!-- LATIN SMALL LETTER O WITH CIRCUMFLEX -->
      <map code="0xf5" name="otilde"/><!-- LATIN SMALL LETTER O WITH TILDE -->
      <map code="0xf6" name="odieresis"/><!-- LATIN SMALL LETTER O WITH DIAERESIS -->
      <map code="0xf7" name="divide"/><!-- DIVISION SIGN -->
      <map code="0xf8" name="oslash"/><!-- LATIN SMALL LETTER O WITH STROKE -->
      <map code="0xf9" name="ugrave"/><!-- LATIN SMALL LETTER U WITH GRAVE -->
      <map code="0xfa" name="uacute"/><!-- LATIN SMALL LETTER U WITH ACUTE -->
      <map code="0xfb" name="ucircumflex"/><!-- LATIN SMALL LETTER U WITH CIRCUMFLEX -->
      <map code="0xfc" name="udieresis"/><!-- LATIN SMALL LETTER U WITH DIAERESIS -->
      <map code="0xfd" name="yacute"/><!-- LATIN SMALL LETTER Y WITH ACUTE -->
      <map code="0xfe" name="thorn"/><!-- LATIN SMALL LETTER THORN -->
      <map code="0xff" name="ydieresis"/><!-- LATIN SMALL LETTER Y WITH DIAERESIS -->
      <map code="0x10c" name="Ccaron"/><!-- LATIN CAPITAL LETTER C WITH CARON -->
      <map code="0x10d" name="ccaron"/><!-- LATIN SMALL LETTER C WITH CARON -->
      <map code="0x131" name="dotlessi"/><!-- LATIN SMALL LETTER DOTLESS I -->
      <map code="0x160" name="Scaron"/><!-- LATIN CAPITAL LETTER S WITH CARON -->
      <map code="0x161" name="scaron"/><!-- LATIN SMALL LETTER S WITH CARON -->
      <map code="0x178" name="Ydieresis"/><!-- LATIN CAPITAL LETTER Y WITH DIAERESIS -->
      <map code="0x17d" name="Zcaron"/><!-- LATIN CAPITAL LETTER Z WITH CARON -->
      <map code="0x17e" name="zcaron"/><!-- LATIN SMALL LETTER Z WITH CARON -->
      <map code="0x2c6" name="circumflex"/><!-- MODIFIER LETTER CIRCUMFLEX ACCENT -->
      <map code="0x2c7" name="caron"/><!-- CARON -->
      <map code="0x2c9" name="macron"/><!-- MODIFIER LETTER MACRON -->
      <map code="0x2d8" name="breve"/><!-- BREVE -->
      <map code="0x2d9" name="dotaccent"/><!-- DOT ABOVE -->
      <map code="0x2da" name="ring"/><!-- RING ABOVE -->
      <map code="0x2db" name="ogonek"/><!-- OGONEK -->
      <map code="0x2dc" name="tilde"/><!-- SMALL TILDE -->
      <map code="0x2dd" name="hungarumlaut"/><!-- DOUBLE ACUTE ACCENT -->
      <map code="0x3bc" name="mu"/><!-- GREEK SMALL LETTER MU -->
      <map code="0x2013" name="endash"/><!-- EN DASH -->
      <map code="0x2014" name="emdash"/><!-- EM DASH -->
      <map code="0x2018" name="quoteleft"/><!-- LEFT SINGLE QUOTATION MARK -->
      <map code="0x2019" name="quoteright"/><!-- RIGHT SINGLE QUOTATION MARK -->
      <map code="0x201c" name="quotedblleft"/><!-- LEFT DOUBLE QUOTATION MARK -->
      <map code="0x201d" name="quotedblright"/><!-- RIGHT DOUBLE QUOTATION MARK -->
      <map code="0x201e" name="quotedblbase"/><!-- DOUBLE LOW-9 QUOTATION MARK -->
      <map code="0x2022" name="bullet"/><!-- BULLET -->
      <map code="0x2026" name="ellipsis"/><!-- HORIZONTAL ELLIPSIS -->
      <map code="0x2039" name="guilsinglleft"/><!-- SINGLE LEFT-POINTING ANGLE QUOTATION MARK -->
      <map code="0x203a" name="guilsinglright"/><!-- SINGLE RIGHT-POINTING ANGLE QUOTATION MARK -->
      <map code="0x2044" name="fraction"/><!-- FRACTION SLASH -->
      <map code="0x2074" name="foursuperior"/><!-- SUPERSCRIPT FOUR -->
      <map code="0x2082" name="twoinferior"/><!-- SUBSCRIPT TWO -->
      <map code="0x2084" name="fourinferior"/><!-- SUBSCRIPT FOUR -->
      <map code="0x2212" name="minus"/><!-- MINUS SIGN -->
      <map code="0x2215" name="divisionslash"/><!-- DIVISION SLASH -->
      <map code="0x2219" name="periodcentered"/><!-- BULLET OPERATOR -->
    </cmap_format_4>
    <cmap_format_6 platformID="1" platEncID="0" language="0">
      <map code="0x20" name="space"/>
      <map code="0x21" name="exclam"/>
      <map code="0x22" name="quotedbl"/>
      <map code="0x23" name="numbersign"/>
      <map code="0x24" name="dollar"/>
      <map code="0x25" name="percent"/>
      <map code="0x26" name="ampersand"/>
      <map code="0x27" name="quotesingle"/>
      <map code="0x28" name="parenleft"/>
      <map code="0x29" name="parenright"/>
      <map code="0x2a" name="asterisk"/>
      <map code="0x2b" name="plus"/>
      <map code="0x2c" name="comma"/>
      <map code="0x2d" name="hyphen"/>
      <map code="0x2e" name="period"/>
      <map code="0x2f" name="slash"/>
      <map code="0x30" name="zero"/>
      <map code="0x31" name="one"/>
      <map code="0x32" name="two"/>
      <map code="0x33" name="three"/>
      <map code="0x34" name="four"/>
      <map code="0x35" name="five"/>
      <map code="0x36" name="six"/>
      <map code="0x37" name="seven"/>
      <map code="0x38" name="eight"/>
      <map code="0x39" name="nine"/>
      <map code="0x3a" name="colon"/>
      <map code="0x3b" name="semicolon"/>
      <map code="0x3c" name="less"/>
      <map code="0x3d" name="equal"/>
      <map code="0x3e" name="greater"/>
      <map code="0x3f" name="question"/>
      <map code="0x40" name="at"/>
      <map code="0x41" name="A"/>
      <map code="0x42" name="B"/>
      <map code="0x43" name="C"/>
      <map code="0x44" name="D"/>
      <map code="0x45" name="E"/>
      <map code="0x46" name="F"/>
      <map code="0x47" name="G"/>
      <map code="0x48" name="H"/>
      <map code="0x49" name="I"/>
      <map code="0x4a" name="J"/>
      <map code="0x4b" name="K"/>
      <map code="0x4c" name="L"/>
      <map code="0x4d" name="M"/>
      <map code="0x4e" name="N"/>
      <map code="0x4f" name="O"/>
      <map code="0x50" name="P"/>
      <map code="0x51" name="Q"/>
      <map code="0x52" name="R"/>
      <map code="0x53" name="S"/>
      <map code="0x54" name="T"/>
      <map code="0x55" name="U"/>
      <map code="0x56" name="V"/>
      <map code="0x57" name="W"/>
      <map code="0x58" name="X"/>
      <map code="0x59" name="Y"/>
      <map code="0x5a" name="Z"/>
      <map code="0x5b" name="bracketleft"/>
      <map code="0x5c" name="backslash"/>
      <map code="0x5d" name="bracketright"/>
      <map code="0x5e" name="asciicircum"/>
      <map code="0x5f" name="underscore"/>
      <map code="0x60" name="grave"/>
      <map code="0x61" name="a"/>
      <map code="0x62" name="b"/>
      <map code="0x63" name="c"/>
      <map code="0x64" name="d"/>
      <map code="0x65" name="e"/>
      <map code="0x66" name="f"/>
      <map code="0x67" name="g"/>
      <map code="0x68" name="h"/>
      <map code="0x69" name="i"/>
      <map code="0x6a" name="j"/>
      <map code="0x6b" name="k"/>
      <map code="0x6c" name="l"/>
      <map code="0x6d" name="m"/>
      <map code="0x6e" name="n"/>
      <map code="0x6f" name="o"/>
      <map code="0x70" name="p"/>
      <map code="0x71" name="q"/>
      <map code="0x72" name="r"/>
      <map code="0x73" name="s"/>
      <map code="0x74" name="t"/>
      <map code="0x75" name="u"/>
      <map code="0x76" name="v"/>
      <map code="0x77" name="w"/>
      <map code="0x78" name="x"/>
      <map code="0x79" name="y"/>
      <map code="0x7a" name="z"/>
      <map code="0x7b" name="braceleft"/>
      <map code="0x7c" name="bar"/>
      <map code="0x7d" name="braceright"/>
      <map code="0x7e" name="asciitilde"/>
      <map code="0x7f" name=".notdef"/>
      <map code="0x80" name="Adieresis"/>
      <map code="0x81" name="Aring"/>
      <map code="0x82" name="Ccedilla"/>
      <map code="0x83" name="Eacute"/>
      <map code="0x84" name="Ntilde"/>
      <map code="0x85" name="Odieresis"/>
      <map code="0x86" name="Udieresis"/>
      <map code="0x87" name="aacute"/>
      <map code="0x88" name="agrave"/>
      <map code="0x89" name="acircumflex"/>
      <map code="0x8a" name="adieresis"/>
      <map code="0x8b" name="atilde"/>
      <map code="0x8c" name="aring"/>
      <map code="0x8d" name="ccedilla"/>
      <map code="0x8e" name="eacute"/>
      <map code="0x8f" name="egrave"/>
      <map code="0x90" name="ecircumflex"/>
      <map code="0x91" name="edieresis"/>
      <map code="0x92" name="iacute"/>
      <map code="0x93" name="igrave"/>
      <map code="0x94" name="icircumflex"/>
      <map code="0x95" name="idieresis"/>
      <map code="0x96" name="ntilde"/>
      <map code="0x97" name="oacute"/>
      <map code="0x98" name="ograve"/>
      <map code="0x99" name="ocircumflex"/>
      <map code="0x9a" name="odieresis"/>
      <map code="0x9b" name="otilde"/>
      <map code="0x9c" name="uacute"/>
      <map code="0x9d" name="ugrave"/>
      <map code="0x9e" name="ucircumflex"/>
      <map code="0x9f" name="udieresis"/>
      <map code="0xa0" name=".notdef"/>
      <map code="0xa1" name="degree"/>
      <map code="0xa2" name="cent"/>
      <map code="0xa3" name="sterling"/>
      <map code="0xa4" name="section"/>
      <map code="0xa5" name="bullet"/>
      <map code="0xa6" name="paragraph"/>
      <map code="0xa7" name="germandbls"/>
      <map code="0xa8" name="registered"/>
      <map code="0xa9" name="copyright"/>
      <map code="0xaa" name=".notdef"/>
      <map code="0xab" name="acute"/>
      <map code="0xac" name="dieresis"/>
      <map code="0xad" name=".notdef"/>
      <map code="0xae" name="AE"/>
      <map code="0xaf" name="Oslash"/>
      <map code="0xb0" name=".notdef"/>
      <map code="0xb1" name="plusminus"/>
      <map code="0xb2" name=".notdef"/>
      <map code="0xb3" name=".notdef"/>
      <map code="0xb4" name="yen"/>
      <map code="0xb5" name="mu"/>
      <map code="0xb6" name=".notdef"/>
      <map code="0xb7" name=".notdef"/>
      <map code="0xb8" name=".notdef"/>
      <map code="0xb9" name=".notdef"/>
      <map code="0xba" name=".notdef"/>
      <map code="0xbb" name="ordfeminine"/>
      <map code="0xbc" name="ordmasculine"/>
      <map code="0xbd" name=".notdef"/>
      <map code="0xbe" name="ae"/>
      <map code="0xbf" name="oslash"/>
      <map code="0xc0" name="questiondown"/>
      <map code="0xc1" name="exclamdown"/>
      <map code="0xc2" name="logicalnot"/>
      <map code="0xc3" name=".notdef"/>
      <map code="0xc4" name=".notdef"/>
      <map code="0xc5" name=".notdef"/>
      <map code="0xc6" name=".notdef"/>
      <map code="0xc7" name="guillemotleft"/>
      <map code="0xc8" name="guillemotright"/>
      <map code="0xc9" name="ellipsis"/>
      <map code="0xca" name=".notdef"/>
      <map code="0xcb" name="Agrave"/>
      <map code="0xcc" name="Atilde"/>
      <map code="0xcd" name="Otilde"/>
      <map code="0xce" name=".notdef"/>
      <map code="0xcf" name=".notdef"/>
      <map code="0xd0" name="endash"/>
      <map code="0xd1" name="emdash"/>
      <map code="0xd2" name="quotedblleft"/>
      <map code="0xd3" name="quotedblright"/>
      <map code="0xd4" name="quoteleft"/>
      <map code="0xd5" name="quoteright"/>
      <map code="0xd6" name="divide"/>
      <map code="0xd7" name=".notdef"/>
      <map code="0xd8" name="ydieresis"/>
      <map code="0xd9" name="Ydieresis"/>
      <map code="0xda" name="fraction"/>
      <map code="0xdb" name="currency"/>
      <map code="0xdc" name="guilsinglleft"/>
      <map code="0xdd" name="guilsinglright"/>
      <map code="0xde" name=".notdef"/>
      <map code="0xdf" name=".notdef"/>
      <map code="0xe0" name=".notdef"/>
      <map code="0xe1" name="periodcentered"/>
      <map code="0xe2" name=".notdef"/>
      <map code="0xe3" name="quotedblbase"/>
      <map code="0xe4" name=".notdef"/>
      <map code="0xe5" name="Acircumflex"/>
      <map code="0xe6" name="Ecircumflex"/>
      <map code="0xe7" name="Aacute"/>
      <map code="0xe8" name="Edieresis"/>
      <map code="0xe9" name="Egrave"/>
      <map code="0xea" name="Iacute"/>
      <map code="0xeb" name="Icircumflex"/>
      <map code="0xec" name="Idieresis"/>
      <map code="0xed" name="Igrave"/>
      <map code="0xee" name="Oacute"/>
      <map code="0xef" name="Ocircumflex"/>
      <map code="0xf0" name=".notdef"/>
      <map code="0xf1" name="Ograve"/>
      <map code="0xf2" name="Uacute"/>
      <map code="0xf3" name="Ucircumflex"/>
      <map code="0xf4" name="Ugrave"/>
      <map code="0xf5" name="dotlessi"/>
      <map code="0xf6" name="circumflex"/>
      <map code="0xf7" name="tilde"/>
      <map code="0xf8" name="macron"/>
      <map code="0xf9" name="breve"/>
      <map code="0xfa" name="dotaccent"/>
      <map code="0xfb" name="ring"/>
      <map code="0xfc" name="cedilla"/>
      <map code="0xfd" name="hungarumlaut"/>
      <map code="0xfe" name="ogonek"/>
      <map code="0xff" name="caron"/>
    </cmap_format_6>
    <cmap_format_4 platformID="3" platEncID="1" language="0">
      <map code="0x20" name="space"/><!-- SPACE -->
      <map code="0x21" name="exclam"/><!-- EXCLAMATION MARK -->
      <map code="0x22" name="quotedbl"/><!-- QUOTATION MARK -->
      <map code="0x23" name="numbersign"/><!-- NUMBER SIGN -->
      <map code="0x24" name="dollar"/><!-- DOLLAR SIGN -->
      <map code="0x25" name="percent"/><!-- PERCENT SIGN -->
      <map code="0x26" name="ampersand"/><!-- AMPERSAND -->
      <map code="0x27" name="quotesingle"/><!-- APOSTROPHE -->
      <map code="0x28" name="parenleft"/><!-- LEFT PARENTHESIS -->
      <map code="0x29" name="parenright"/><!-- RIGHT PARENTHESIS -->
      <map code="0x2a" name="asterisk"/><!-- ASTERISK -->
      <map code="0x2b" name="plus"/><!-- PLUS SIGN -->
      <map code="0x2c" name="comma"/><!-- COMMA -->
      <map code="0x2d" name="hyphen"/><!-- HYPHEN-MINUS -->
      <map code="0x2e" name="period"/><!-- FULL STOP -->
      <map code="0x2f" name="slash"/><!-- SOLIDUS -->
      <map code="0x30" name="zero"/><!-- DIGIT ZERO -->
      <map code="0x31" name="one"/><!-- DIGIT ONE -->
      <map code="0x32" name="two"/><!-- DIGIT TWO -->
      <map code="0x33" name="three"/><!-- DIGIT THREE -->
      <map code="0x34" name="four"/><!-- DIGIT FOUR -->
      <map code="0x35" name="five"/><!-- DIGIT FIVE -->
      <map code="0x36" name="six"/><!-- DIGIT SIX -->
      <map code="0x37" name="seven"/><!-- DIGIT SEVEN -->
      <map code="0x38" name="eight"/><!-- DIGIT EIGHT -->
      <map code="0x39" name="nine"/><!-- DIGIT NINE -->
      <map code="0x3a" name="colon"/><!-- COLON -->
      <map code="0x3b" name="semicolon"/><!-- SEMICOLON -->
      <map code="0x3c" name="less"/><!-- LESS-THAN SIGN -->
      <map code="0x3d" name="equal"/><!-- EQUALS SIGN -->
      <map code="0x3e" name="greater"/><!-- GREATER-THAN SIGN -->
      <map code="0x3f" name="question"/><!-- QUESTION MARK -->
      <map code="0x40" name="at"/><!-- COMMERCIAL AT -->
      <map code="0x41" name="A"/><!-- LATIN CAPITAL LETTER A -->
      <map code="0x42" name="B"/><!-- LATIN CAPITAL LETTER B -->
      <map code="0x43" name="C"/><!-- LATIN CAPITAL LETTER C -->
      <map code="0x44" name="D"/><!-- LATIN CAPITAL LETTER D -->
      <map code="0x45" name="E"/><!-- LATIN CAPITAL LETTER E -->
      <map code="0x46" name="F"/><!-- LATIN CAPITAL LETTER F -->
      <map code="0x47" name="G"/><!-- LATIN CAPITAL LETTER G -->
      <map code="0x48" name="H"/><!-- LATIN CAPITAL LETTER H -->
      <map code="0x49" name="I"/><!-- LATIN CAPITAL LETTER I -->
      <map code="0x4a" name="J"/><!-- LATIN CAPITAL LETTER J -->
      <map code="0x4b" name="K"/><!-- LATIN CAPITAL LETTER K -->
      <map code="0x4c" name="L"/><!-- LATIN CAPITAL LETTER L -->
      <map code="0x4d" name="M"/><!-- LATIN CAPITAL LETTER M -->
      <map code="0x4e" name="N"/><!-- LATIN CAPITAL LETTER N -->
      <map code="0x4f" name="O"/><!-- LATIN CAPITAL LETTER O -->
      <map code="0x50" name="P"/><!-- LATIN CAPITAL LETTER P -->
      <map code="0x51" name="Q"/><!-- LATIN CAPITAL LETTER Q -->
      <map code="0x52" name="R"/><!-- LATIN CAPITAL LETTER R -->
      <map code="0x53" name="S"/><!-- LATIN CAPITAL LETTER S -->
      <map code="0x54" name="T"/><!-- LATIN CAPITAL LETTER T -->
      <map code="0x55" name="U"/><!-- LATIN CAPITAL LETTER U -->
      <map code="0x56" name="V"/><!-- LATIN CAPITAL LETTER V -->
      <map code="0x57" name="W"/><!-- LATIN CAPITAL LETTER W -->
      <map code="0x58" name="X"/><!-- LATIN CAPITAL LETTER X -->
      <map code="0x59" name="Y"/><!-- LATIN CAPITAL LETTER Y -->
      <map code="0x5a" name="Z"/><!-- LATIN CAPITAL LETTER Z -->
      <map code="0x5b" name="bracketleft"/><!-- LEFT SQUARE BRACKET -->
      <map code="0x5c" name="backslash"/><!-- REVERSE SOLIDUS -->
      <map code="0x5d" name="bracketright"/><!-- RIGHT SQUARE BRACKET -->
      <map code="0x5e" name="asciicircum"/><!-- CIRCUMFLEX ACCENT -->
      <map code="0x5f" name="underscore"/><!-- LOW LINE -->
      <map code="0x60" name="grave"/><!-- GRAVE ACCENT -->
      <map code="0x61" name="a"/><!-- LATIN SMALL LETTER A -->
      <map code="0x62" name="b"/><!-- LATIN SMALL LETTER B -->
      <map code="0x63" name="c"/><!-- LATIN SMALL LETTER C -->
      <map code="0x64" name="d"/><!-- LATIN SMALL LETTER D -->
      <map code="0x65" name="e"/><!-- LATIN SMALL LETTER E -->
      <map code="0x66" name="f"/><!-- LATIN SMALL LETTER F -->
      <map code="0x67" name="g"/><!-- LATIN SMALL LETTER G -->
      <map code="0x68" name="h"/><!-- LATIN SMALL LETTER H -->
      <map code="0x69" name="i"/><!-- LATIN SMALL LETTER I -->
      <map code="0x6a" name="j"/><!-- LATIN SMALL LETTER J -->
      <map code="0x6b" name="k"/><!-- LATIN SMALL LETTER K -->
      <map code="0x6c" name="l"/><!-- LATIN SMALL LETTER L -->
      <map code="0x6d" name="m"/><!-- LATIN SMALL LETTER M -->
      <map code="0x6e" name="n"/><!-- LATIN SMALL LETTER N -->
      <map code="0x6f" name="o"/><!-- LATIN SMALL LETTER O -->
      <map code="0x70" name="p"/><!-- LATIN SMALL LETTER P -->
      <map code="0x71" name="q"/><!-- LATIN SMALL LETTER Q -->
      <map code="0x72" name="r"/><!-- LATIN SMALL LETTER R -->
      <map code="0x73" name="s"/><!-- LATIN SMALL LETTER S -->
      <map code="0x74" name="t"/><!-- LATIN SMALL LETTER T -->
      <map code="0x75" name="u"/><!-- LATIN SMALL LETTER U -->
      <map code="0x76" name="v"/><!-- LATIN SMALL LETTER V -->
      <map code="0x77" name="w"/><!-- LATIN SMALL LETTER W -->
      <map code="0x78" name="x"/><!-- LATIN SMALL LETTER X -->
      <map code="0x79" name="y"/><!-- LATIN SMALL LETTER Y -->
      <map code="0x7a" name="z"/><!-- LATIN SMALL LETTER Z -->
      <map code="0x7b" name="braceleft"/><!-- LEFT CURLY BRACKET -->
      <map code="0x7c" name="bar"/><!-- VERTICAL LINE -->
      <map code="0x7d" name="braceright"/><!-- RIGHT CURLY BRACKET -->
      <map code="0x7e" name="asciitilde"/><!-- TILDE -->
      <map code="0xa1" name="exclamdown"/><!-- INVERTED EXCLAMATION MARK -->
      <map code="0xa2" name="cent"/><!-- CENT SIGN -->
      <map code="0xa3" name="sterling"/><!-- POUND SIGN -->
      <map code="0xa4" name="currency"/><!-- CURRENCY SIGN -->
      <map code="0xa5" name="yen"/><!-- YEN SIGN -->
      <map code="0xa6" name="brokenbar"/><!-- BROKEN BAR -->
      <map code="0xa7" name="section"/><!-- SECTION SIGN -->
      <map code="0xa8" name="dieresis"/><!-- DIAERESIS -->
      <map code="0xa9" name="copyright"/><!-- COPYRIGHT SIGN -->
      <map code="0xaa" name="ordfeminine"/><!-- FEMININE ORDINAL INDICATOR -->
      <map code="0xab" name="guillemotleft"/><!-- LEFT-POINTING DOUBLE ANGLE QUOTATION MARK -->
      <map code="0xac" name="logicalnot"/><!-- NOT SIGN -->
      <map code="0xad" name="hyphen"/><!-- SOFT HYPHEN -->
      <map code="0xae" name="registered"/><!-- REGISTERED SIGN -->
      <map code="0xaf" name="macron"/><!-- MACRON -->
      <map code="0xb0" name="degree"/><!-- DEGREE SIGN -->
      <map code="0xb1" name="plusminus"/><!-- PLUS-MINUS SIGN -->
      <map code="0xb2" name="twosuperior"/><!-- SUPERSCRIPT TWO -->
      <map code="0xb3" name="threesuperior"/><!-- SUPERSCRIPT THREE -->
      <map code="0xb4" name="acute"/><!-- ACUTE ACCENT -->
      <map code="0xb5" name="mu"/><!-- MICRO SIGN -->
      <map code="0xb6" name="paragraph"/><!-- PILCROW SIGN -->
      <map code="0xb7" name="periodcentered"/><!-- MIDDLE DOT -->
      <map code="0xb8" name="cedilla"/><!-- CEDILLA -->
      <map code="0xb9" name="onesuperior"/><!-- SUPERSCRIPT ONE -->
      <map code="0xba" name="ordmasculine"/><!-- MASCULINE ORDINAL INDICATOR -->
      <map code="0xbb" name="guillemotright"/><!-- RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK -->
      <map code="0xbc" name="onequarter"/><!-- VULGAR FRACTION ONE QUARTER -->
      <map code="0xbd" name="onehalf"/><!-- VULGAR FRACTION ONE HALF -->
      <map code="0xbe" name="threequarters"/><!-- VULGAR FRACTION THREE QUARTERS -->
      <map code="0xbf" name="questiondown"/><!-- INVERTED QUESTION MARK -->
      <map code="0xc0" name="Agrave"/><!-- LATIN CAPITAL LETTER A WITH GRAVE -->
      <map code="0xc1" name="Aacute"/><!-- LATIN CAPITAL LETTER A WITH ACUTE -->
      <map code="0xc2" name="Acircumflex"/><!-- LATIN CAPITAL LETTER A WITH CIRCUMFLEX -->
      <map code="0xc3" name="Atilde"/><!-- LATIN CAPITAL LETTER A WITH TILDE -->
      <map code="0xc4" name="Adieresis"/><!-- LATIN CAPITAL LETTER A WITH DIAERESIS -->
      <map code="0xc5" name="Aring"/><!-- LATIN CAPITAL LETTER A WITH RING ABOVE -->
      <map code="0xc6" name="AE"/><!-- LATIN CAPITAL LETTER AE -->
      <map code="0xc7" name="Ccedilla"/><!-- LATIN CAPITAL LETTER C WITH CEDILLA -->
      <map code="0xc8" name="Egrave"/><!-- LATIN CAPITAL LETTER E WITH GRAVE -->
      <map code="0xc9" name="Eacute"/><!-- LATIN CAPITAL LETTER E WITH ACUTE -->
      <map code="0xca" name="Ecircumflex"/><!-- LATIN CAPITAL LETTER E WITH CIRCUMFLEX -->
      <map code="0xcb" name="Edieresis"/><!-- LATIN CAPITAL LETTER E WITH DIAERESIS -->
      <map code="0xcc" name="Igrave"/><!-- LATIN CAPITAL LETTER I WITH GRAVE -->
      <map code="0xcd" name="Iacute"/><!-- LATIN CAPITAL LETTER I WITH ACUTE -->
      <map code="0xce" name="Icircumflex"/><!-- LATIN CAPITAL LETTER I WITH CIRCUMFLEX -->
      <map code="0xcf" name="Idieresis"/><!-- LATIN CAPITAL LETTER I WITH DIAERESIS -->
      <map code="0xd0" name="Eth"/><!-- LATIN CAPITAL LETTER ETH -->
      <map code="0xd1" name="Ntilde"/><!-- LATIN CAPITAL LETTER N WITH TILDE -->
      <map code="0xd2" name="Ograve"/><!-- LATIN CAPITAL LETTER O WITH GRAVE -->
      <map code="0xd3" name="Oacute"/><!-- LATIN CAPITAL LETTER O WITH ACUTE -->
      <map code="0xd4" name="Ocircumflex"/><!-- LATIN CAPITAL LETTER O WITH CIRCUMFLEX -->
      <map code="0xd5" name="Otilde"/><!-- LATIN CAPITAL LETTER O WITH TILDE -->
      <map code="0xd6" name="Odieresis"/><!-- LATIN CAPITAL LETTER O WITH DIAERESIS -->
      <map code="0xd7" name="multiply"/><!-- MULTIPLICATION SIGN -->
      <map code="0xd8" name="Oslash"/><!-- LATIN CAPITAL LETTER O WITH STROKE -->
      <map code="0xd9" name="Ugrave"/><!-- LATIN CAPITAL LETTER U WITH GRAVE -->
      <map code="0xda" name="Uacute"/><!-- LATIN CAPITAL LETTER U WITH ACUTE -->
      <map code="0xdb" name="Ucircumflex"/><!-- LATIN CAPITAL LETTER U WITH CIRCUMFLEX -->
      <map code="0xdc" name="Udieresis"/><!-- LATIN CAPITAL LETTER U WITH DIAERESIS -->
      <map code="0xdd" name="Yacute"/><!-- LATIN CAPITAL LETTER Y WITH ACUTE -->
      <map code="0xde" name="Thorn"/><!-- LATIN CAPITAL LETTER THORN -->
      <map code="0xdf" name="germandbls"/><!-- LATIN SMALL LETTER SHARP S -->
      <map code="0xe0" name="agrave"/><!-- LATIN SMALL LETTER A WITH GRAVE -->
      <map code="0xe1" name="aacute"/><!-- LATIN SMALL LETTER A WITH ACUTE -->
      <map code="0xe2" name="acircumflex"/><!-- LATIN SMALL LETTER A WITH CIRCUMFLEX -->
      <map code="0xe3" name="atilde"/><!-- LATIN SMALL LETTER A WITH TILDE -->
      <map code="0xe4" name="adieresis"/><!-- LATIN SMALL LETTER A WITH DIAERESIS -->
      <map code="0xe5" name="aring"/><!-- LATIN SMALL LETTER A WITH RING ABOVE -->
      <map code="0xe6" name="ae"/><!-- LATIN SMALL LETTER AE -->
      <map code="0xe7" name="ccedilla"/><!-- LATIN SMALL LETTER C WITH CEDILLA -->
      <map code="0xe8" name="egrave"/><!-- LATIN SMALL LETTER E WITH GRAVE -->
      <map code="0xe9" name="eacute"/><!-- LATIN SMALL LETTER E WITH ACUTE -->
      <map code="0xea" name="ecircumflex"/><!-- LATIN SMALL LETTER E WITH CIRCUMFLEX -->
      <map code="0xeb" name="edieresis"/><!-- LATIN SMALL LETTER E WITH DIAERESIS -->
      <map code="0xec" name="igrave"/><!-- LATIN SMALL LETTER I WITH GRAVE -->
      <map code="0xed" name="iacute"/><!-- LATIN SMALL LETTER I WITH ACUTE -->
      <map code="0xee" name="icircumflex"/><!-- LATIN SMALL LETTER I WITH CIRCUMFLEX -->
      <map code="0xef" name="idieresis"/><!-- LATIN SMALL LETTER I WITH DIAERESIS -->
      <map code="0xf0" name="eth"/><!-- LATIN SMALL LETTER ETH -->
      <map code="0xf1" name="ntilde"/><!-- LATIN SMALL LETTER N WITH TILDE -->
      <map code="0xf2" name="ograve"/><!-- LATIN SMALL LETTER O WITH GRAVE -->
      <map code="0xf3" name="oacute"/><!-- LATIN SMALL LETTER O WITH ACUTE -->
      <map code="0xf4" name="ocircumflex"/><!-- LATIN SMALL LETTER O WITH CIRCUMFLEX -->
      <map code="0xf5" name="otilde"/><!-- LATIN SMALL LETTER O WITH TILDE -->
      <map code="0xf6" name="odieresis"/><!-- LATIN SMALL LETTER O WITH DIAERESIS -->
      <map code="0xf7" name="divide"/><!-- DIVISION SIGN -->
      <map code="0xf8" name="oslash"/><!-- LATIN SMALL LETTER O WITH STROKE -->
      <map code="0xf9" name="ugrave"/><!-- LATIN SMALL LETTER U WITH GRAVE -->
      <map code="0xfa" name="uacute"/><!-- LATIN SMALL LETTER U WITH ACUTE -->
      <map code="0xfb" name="ucircumflex"/><!-- LATIN SMALL LETTER U WITH CIRCUMFLEX -->
      <map code="0xfc" name="udieresis"/><!-- LATIN SMALL LETTER U WITH DIAERESIS -->
      <map code="0xfd" name="yacute"/><!-- LATIN SMALL LETTER Y WITH ACUTE -->
      <map code="0xfe" name="thorn"/><!-- LATIN SMALL LETTER THORN -->
      <map code="0xff" name="ydieresis"/><!-- LATIN SMALL LETTER Y WITH DIAERESIS -->
      <map code="0x10c" name="Ccaron"/><!-- LATIN CAPITAL LETTER C WITH CARON -->
      <map code="0x10d" name="ccaron"/><!-- LATIN SMALL LETTER C WITH CARON -->
      <map code="0x131" name="dotlessi"/><!-- LATIN SMALL LETTER DOTLESS I -->
      <map code="0x160" name="Scaron"/><!-- LATIN CAPITAL LETTER S WITH CARON -->
      <map code="0x161" name="scaron"/><!-- LATIN SMALL LETTER S WITH CARON -->
      <map code="0x178" name="Ydieresis"/><!-- LATIN CAPITAL LETTER Y WITH DIAERESIS -->
      <map code="0x17d" name="Zcaron"/><!-- LATIN CAPITAL LETTER Z WITH CARON -->
      <map code="0x17e" name="zcaron"/><!-- LATIN SMALL LETTER Z WITH CARON -->
      <map code="0x2c6" name="circumflex"/><!-- MODIFIER LETTER CIRCUMFLEX ACCENT -->
      <map code="0x2c7" name="caron"/><!-- CARON -->
      <map code="0x2c9" name="macron"/><!-- MODIFIER LETTER MACRON -->
      <map code="0x2d8" name="breve"/><!-- BREVE -->
      <map code="0x2d9" name="dotaccent"/><!-- DOT ABOVE -->
      <map code="0x2da" name="ring"/><!-- RING ABOVE -->
      <map code="0x2db" name="ogonek"/><!-- OGONEK -->
      <map code="0x2dc" name="tilde"/><!-- SMALL TILDE -->
      <map code="0x2dd" name="hungarumlaut"/><!-- DOUBLE ACUTE ACCENT -->
      <map code="0x3bc" name="mu"/><!-- GREEK SMALL LETTER MU -->
      <map code="0x2013" name="endash"/><!-- EN DASH -->
      <map code="0x2014" name="emdash"/><!-- EM DASH -->
      <map code="0x2018" name="quoteleft"/><!-- LEFT SINGLE QUOTATION MARK -->
      <map code="0x2019" name="quoteright"/><!-- RIGHT SINGLE QUOTATION MARK -->
      <map code="0x201c" name="quotedblleft"/><!-- LEFT DOUBLE QUOTATION MARK -->
      <map code="0x201d" name="quotedblright"/><!-- RIGHT DOUBLE QUOTATION MARK -->
      <map code="0x201e" name="quotedblbase"/><!-- DOUBLE LOW-9 QUOTATION MARK -->
      <map code="0x2022" name="bullet"/><!-- BULLET -->
      <map code="0x2026" name="ellipsis"/><!-- HORIZONTAL ELLIPSIS -->
      <map code="0x2039" name="guilsinglleft"/><!-- SINGLE LEFT-POINTING ANGLE QUOTATION MARK -->
      <map code="0x203a" name="guilsinglright"/><!-- SINGLE RIGHT-POINTING ANGLE QUOTATION MARK -->
      <map code="0x2044" name="fraction"/><!-- FRACTION SLASH -->
      <map code="0x2074" name="foursuperior"/><!-- SUPERSCRIPT FOUR -->
      <map code="0x2082" name="twoinferior"/><!-- SUBSCRIPT TWO -->
      <map code="0x2084" name="fourinferior"/><!-- SUBSCRIPT FOUR -->
      <map code="0x2212" name="minus"/><!-- MINUS SIGN -->
      <map code="0x2215" name="divisionslash"/><!-- DIVISION SLASH -->
      <map code="0x2219" name="periodcentered"/><!-- BULLET OPERATOR -->
    </cmap_format_4>
  </cmap>

  <fpgm>
    <assembly>
      NPUSHB[ ]	/* 63 values pushed */
      88 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62
      61 60 59 58 57 56 55 54 53 47 46 45 44 40 38 37 36 35 34 31 24 20 17 16 15
      13 11 10 9 8 7 6 5 4 3 2 1 0
      FDEF[ ]	/* FunctionDefinition */
      RCVT[ ]	/* ReadCVT */
      SWAP[ ]	/* SwapTopStack */
      GC[0]	/* GetCoordOnPVector */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      38
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      SCFS[ ]	/* SetCoordFromStackFP */
      SCFS[ ]	/* SetCoordFromStackFP */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      RCVT[ ]	/* ReadCVT */
      SWAP[ ]	/* SwapTopStack */
      GC[0]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      38
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      SCFS[ ]	/* SetCoordFromStackFP */
      SCFS[ ]	/* SetCoordFromStackFP */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      RCVT[ ]	/* ReadCVT */
      SWAP[ ]	/* SwapTopStack */
      GC[0]	/* GetCoordOnPVector */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      32
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      70
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      SCFS[ ]	/* SetCoordFromStackFP */
      SCFS[ ]	/* SetCoordFromStackFP */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      RCVT[ ]	/* ReadCVT */
      SWAP[ ]	/* SwapTopStack */
      GC[0]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      32
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      38
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      32
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      SCFS[ ]	/* SetCoordFromStackFP */
      SCFS[ ]	/* SetCoordFromStackFP */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      RCVT[ ]	/* ReadCVT */
      SWAP[ ]	/* SwapTopStack */
      GC[0]	/* GetCoordOnPVector */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      64
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      102
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      SCFS[ ]	/* SetCoordFromStackFP */
      SCFS[ ]	/* SetCoordFromStackFP */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      RCVT[ ]	/* ReadCVT */
      SWAP[ ]	/* SwapTopStack */
      GC[0]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      38
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      64
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      SCFS[ ]	/* SetCoordFromStackFP */
      SCFS[ ]	/* SetCoordFromStackFP */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[1]	/* SetFPVectorToAxis */
      SRP0[ ]	/* SetRefPoint0 */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      SVTCA[0]	/* SetFPVectorToAxis */
      ALIGNRP[ ]	/* AlignRelativePt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      205
      WCVTP[ ]	/* WriteCVTInPixels */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHW[ ]	/* 1 value pushed */
      346
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      141
      WCVTP[ ]	/* WriteCVTInPixels */
      SWAP[ ]	/* SwapTopStack */
      EIF[ ]	/* EndIf */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      237
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      77
      WCVTP[ ]	/* WriteCVTInPixels */
      SWAP[ ]	/* SwapTopStack */
      EIF[ ]	/* EndIf */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      13
      WCVTP[ ]	/* WriteCVTInPixels */
      SWAP[ ]	/* SwapTopStack */
      EIF[ ]	/* EndIf */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      RTG[ ]	/* RoundToGrid */
      ROUND[00]	/* Round */
      WCVTP[ ]	/* WriteCVTInPixels */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      70
      SROUND[ ]	/* SuperRound */
      ROUND[00]	/* Round */
      ROLL[ ]	/* RollTopThreeStack */
      RCVT[ ]	/* ReadCVT */
      ADD[ ]	/* Add */
      WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[1]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 2 values pushed */
      11 10
      RS[ ]	/* ReadStore */
      SWAP[ ]	/* SwapTopStack */
      RS[ ]	/* ReadStore */
      NEG[ ]	/* Negate */
      SPVFS[ ]	/* SetPVectorFromStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 2 values pushed */
      10 11
      RS[ ]	/* ReadStore */
      SWAP[ ]	/* SwapTopStack */
      RS[ ]	/* ReadStore */
      SFVFS[ ]	/* SetFVectorFromStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      40
      SWAP[ ]	/* SwapTopStack */
      WCVTF[ ]	/* WriteCVTInFUnits */
      PUSHB[ ]	/* 2 values pushed */
      1 40
      MIAP[0]	/* MoveIndirectAbsPt */
      SVTCA[1]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      40
      SWAP[ ]	/* SwapTopStack */
      WCVTF[ ]	/* WriteCVTInFUnits */
      PUSHB[ ]	/* 2 values pushed */
      2 40
      RCVT[ ]	/* ReadCVT */
      MSIRP[0]	/* MoveStackIndirRelPt */
      PUSHB[ ]	/* 2 values pushed */
      2 0
      SFVTL[0]	/* SetFVectorToLine */
      GFV[ ]	/* GetFVector */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      RCVT[ ]	/* ReadCVT */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      PUSHB[ ]	/* 1 value pushed */
      80
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      RCVT[ ]	/* ReadCVT */
      WCVTP[ ]	/* WriteCVTInPixels */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[1]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      6
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      7
      RS[ ]	/* ReadStore */
      NEG[ ]	/* Negate */
      SPVFS[ ]	/* SetPVectorFromStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      ROUND[01]	/* Round */
      PUSHB[ ]	/* 1 value pushed */
      64
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      0
      MAX[ ]	/* Maximum */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 2 values pushed */
      44 192
      ROLL[ ]	/* RollTopThreeStack */
      MIN[ ]	/* Minimum */
      PUSHW[ ]	/* 1 value pushed */
      4096
      DIV[ ]	/* Divide */
      ADD[ ]	/* Add */
      CALL[ ]	/* CallFunction */
      GPV[ ]	/* GetPVector */
      ABS[ ]	/* Absolute */
      SWAP[ ]	/* SwapTopStack */
      ABS[ ]	/* Absolute */
      SUB[ ]	/* Subtract */
      NOT[ ]	/* LogicalNot */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      3
      SUB[ ]	/* Subtract */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      ROLL[ ]	/* RollTopThreeStack */
      SPVTCA[1]	/* SetPVectorToAxis */
      RCVT[ ]	/* ReadCVT */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      SDPVTL[1]	/* SetDualPVectorToLine */
      PUSHB[ ]	/* 1 value pushed */
      17
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      41
      SWAP[ ]	/* SwapTopStack */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      41
      ROFF[ ]	/* RoundOff */
      MIRP[00100]	/* MoveIndirectRelPt */
      RTG[ ]	/* RoundToGrid */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      RCVT[ ]	/* ReadCVT */
      NEG[ ]	/* Negate */
      PUSHB[ ]	/* 1 value pushed */
      44
      SWAP[ ]	/* SwapTopStack */
      WCVTP[ ]	/* WriteCVTInPixels */
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      43
      SWAP[ ]	/* SwapTopStack */
      WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      RCVT[ ]	/* ReadCVT */
      WCVTP[ ]	/* WriteCVTInPixels */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[1]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      5
      CINDEX[ ]	/* CopyXToTopStack */
      SRP0[ ]	/* SetRefPoint0 */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      MIRP[10101]	/* MoveIndirectRelPt */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      MIRP[01101]	/* MoveIndirectRelPt */
      MIRP[01100]	/* MoveIndirectRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[1]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      5
      CINDEX[ ]	/* CopyXToTopStack */
      SRP0[ ]	/* SetRefPoint0 */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      MIRP[10101]	/* MoveIndirectRelPt */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      1
      SUB[ ]	/* Subtract */
      SWAP[ ]	/* SwapTopStack */
      MIRP[01101]	/* MoveIndirectRelPt */
      MIRP[01100]	/* MoveIndirectRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[1]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      6
      CINDEX[ ]	/* CopyXToTopStack */
      SRP0[ ]	/* SetRefPoint0 */
      MIRP[10101]	/* MoveIndirectRelPt */
      SVTCA[0]	/* SetFPVectorToAxis */
      MIRP[01101]	/* MoveIndirectRelPt */
      MIRP[01100]	/* MoveIndirectRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      SVTCA[1]	/* SetFPVectorToAxis */
      SRP0[ ]	/* SetRefPoint0 */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      SVTCA[0]	/* SetFPVectorToAxis */
      ALIGNRP[ ]	/* AlignRelativePt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      SUB[ ]	/* Subtract */
      SVTCA[1]	/* SetFPVectorToAxis */
      SRP0[ ]	/* SetRefPoint0 */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      SVTCA[0]	/* SetFPVectorToAxis */
      ALIGNRP[ ]	/* AlignRelativePt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      7
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      6
      RS[ ]	/* ReadStore */
      SFVFS[ ]	/* SetFVectorFromStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      GPV[ ]	/* GetPVector */
      ABS[ ]	/* Absolute */
      SWAP[ ]	/* SwapTopStack */
      ABS[ ]	/* Absolute */
      MAX[ ]	/* Maximum */
      PUSHW[ ]	/* 1 value pushed */
      16384
      DIV[ ]	/* Divide */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      128
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      GPV[ ]	/* GetPVector */
      ABS[ ]	/* Absolute */
      SWAP[ ]	/* SwapTopStack */
      ABS[ ]	/* Absolute */
      MAX[ ]	/* Maximum */
      PUSHW[ ]	/* 1 value pushed */
      8192
      DIV[ ]	/* Divide */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 3 values pushed */
      0 64 47
      CALL[ ]	/* CallFunction */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      2
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      192
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      GPV[ ]	/* GetPVector */
      ABS[ ]	/* Absolute */
      SWAP[ ]	/* SwapTopStack */
      ABS[ ]	/* Absolute */
      MAX[ ]	/* Maximum */
      PUSHW[ ]	/* 1 value pushed */
      5461
      DIV[ ]	/* Divide */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 3 values pushed */
      0 128 47
      CALL[ ]	/* CallFunction */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      2
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      GPV[ ]	/* GetPVector */
      ABS[ ]	/* Absolute */
      SWAP[ ]	/* SwapTopStack */
      ABS[ ]	/* Absolute */
      MAX[ ]	/* Maximum */
      PUSHW[ ]	/* 1 value pushed */
      16384
      DIV[ ]	/* Divide */
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      RCVT[ ]	/* ReadCVT */
      SWAP[ ]	/* SwapTopStack */
      RCVT[ ]	/* ReadCVT */
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      RCVT[ ]	/* ReadCVT */
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      RCVT[ ]	/* ReadCVT */
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      SROUND[ ]	/* SuperRound */
      ROUND[00]	/* Round */
      RTG[ ]	/* RoundToGrid */
      PUSHB[ ]	/* 1 value pushed */
      128
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      RCVT[ ]	/* ReadCVT */
      SWAP[ ]	/* SwapTopStack */
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      MINDEX[ ]	/* MoveXToTopStack */
      ADD[ ]	/* Add */
      DIV[ ]	/* Divide */
      MUL[ ]	/* Multiply */
      ROUND[00]	/* Round */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      MINDEX[ ]	/* MoveXToTopStack */
      SUB[ ]	/* Subtract */
      NEG[ ]	/* Negate */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      WCVTP[ ]	/* WriteCVTInPixels */
      WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      0
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      WCVTP[ ]	/* WriteCVTInPixels */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      64
      SUB[ ]	/* Subtract */
      WCVTP[ ]	/* WriteCVTInPixels */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 2 values pushed */
      48 47
      RCVT[ ]	/* ReadCVT */
      SWAP[ ]	/* SwapTopStack */
      RCVT[ ]	/* ReadCVT */
      SUB[ ]	/* Subtract */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ROUND[01]	/* Round */
      WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      47
      SWAP[ ]	/* SwapTopStack */
      WCVTF[ ]	/* WriteCVTInFUnits */
      PUSHB[ ]	/* 1 value pushed */
      20
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      RCVT[ ]	/* ReadCVT */
      ROUND[01]	/* Round */
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      WCVTP[ ]	/* WriteCVTInPixels */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      20
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      0
      ADD[ ]	/* Add */
      MUL[ ]	/* Multiply */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ROUND[01]	/* Round */
      WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      47
      RCVT[ ]	/* ReadCVT */
      WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      RCVT[ ]	/* ReadCVT */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      ROLL[ ]	/* RollTopThreeStack */
      ADD[ ]	/* Add */
      WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      RCVT[ ]	/* ReadCVT */
      SWAP[ ]	/* SwapTopStack */
      RCVT[ ]	/* ReadCVT */
      ADD[ ]	/* Add */
      WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      SWAP[ ]	/* SwapTopStack */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      PUSHW[ ]	/* 2 values pushed */
      51 -32
      PUSHB[ ]	/* 2 values pushed */
      52 32
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 4 values pushed */
      51 0 52 0
      EIF[ ]	/* EndIf */
      WCVTP[ ]	/* WriteCVTInPixels */
      WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      22
      RS[ ]	/* ReadStore */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      3
      MINDEX[ ]	/* MoveXToTopStack */
      RCVT[ ]	/* ReadCVT */
      ROLL[ ]	/* RollTopThreeStack */
      IF[ ]	/* If */
      ABS[ ]	/* Absolute */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      31
      ADD[ ]	/* Add */
      ELSE[ ]	/* Else */
      ABS[ ]	/* Absolute */
      PUSHB[ ]	/* 1 value pushed */
      32
      ADD[ ]	/* Add */
      FLOOR[ ]	/* Floor */
      DUP[ ]	/* DuplicateTopStack */
      IF[ ]	/* If */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      1
      SUB[ ]	/* Subtract */
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      IF[ ]	/* If */
      NEG[ ]	/* Negate */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      41
      SWAP[ ]	/* SwapTopStack */
      WCVTP[ ]	/* WriteCVTInPixels */
      SWAP[ ]	/* SwapTopStack */
      SRP0[ ]	/* SetRefPoint0 */
      PUSHB[ ]	/* 1 value pushed */
      41
      MIRP[00000]	/* MoveIndirectRelPt */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      22
      RS[ ]	/* ReadStore */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      RCVT[ ]	/* ReadCVT */
      ABS[ ]	/* Absolute */
      PUSHB[ ]	/* 1 value pushed */
      32
      ADD[ ]	/* Add */
      FLOOR[ ]	/* Floor */
      DUP[ ]	/* DuplicateTopStack */
      IF[ ]	/* If */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      1
      SUB[ ]	/* Subtract */
      SWAP[ ]	/* SwapTopStack */
      IF[ ]	/* If */
      NEG[ ]	/* Negate */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      41
      SWAP[ ]	/* SwapTopStack */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      7
      CINDEX[ ]	/* CopyXToTopStack */
      SFVTL[0]	/* SetFVectorToLine */
      DUP[ ]	/* DuplicateTopStack */
      IF[ ]	/* If */
      SPVTCA[0]	/* SetPVectorToAxis */
      ELSE[ ]	/* Else */
      SPVTCA[1]	/* SetPVectorToAxis */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      5
      CINDEX[ ]	/* CopyXToTopStack */
      SRP0[ ]	/* SetRefPoint0 */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      ALIGNRP[ ]	/* AlignRelativePt */
      PUSHB[ ]	/* 1 value pushed */
      7
      CINDEX[ ]	/* CopyXToTopStack */
      SRP0[ ]	/* SetRefPoint0 */
      PUSHB[ ]	/* 1 value pushed */
      6
      CINDEX[ ]	/* CopyXToTopStack */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      ALIGNRP[ ]	/* AlignRelativePt */
      DUP[ ]	/* DuplicateTopStack */
      IF[ ]	/* If */
      SVTCA[1]	/* SetFPVectorToAxis */
      ELSE[ ]	/* Else */
      SVTCA[0]	/* SetFPVectorToAxis */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      5
      CINDEX[ ]	/* CopyXToTopStack */
      SRP0[ ]	/* SetRefPoint0 */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      41
      MIRP[00000]	/* MoveIndirectRelPt */
      PUSHB[ ]	/* 1 value pushed */
      7
      CINDEX[ ]	/* CopyXToTopStack */
      SRP0[ ]	/* SetRefPoint0 */
      PUSHB[ ]	/* 1 value pushed */
      6
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      41
      MIRP[00000]	/* MoveIndirectRelPt */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      7
      CINDEX[ ]	/* CopyXToTopStack */
      SFVTL[0]	/* SetFVectorToLine */
      DUP[ ]	/* DuplicateTopStack */
      IF[ ]	/* If */
      SPVTCA[0]	/* SetPVectorToAxis */
      ELSE[ ]	/* Else */
      SPVTCA[1]	/* SetPVectorToAxis */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      RS[ ]	/* ReadStore */
      SCFS[ ]	/* SetCoordFromStackFP */
      PUSHB[ ]	/* 1 value pushed */
      6
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      RS[ ]	/* ReadStore */
      SCFS[ ]	/* SetCoordFromStackFP */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      22
      RS[ ]	/* ReadStore */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      RCVT[ ]	/* ReadCVT */
      ABS[ ]	/* Absolute */
      PUSHB[ ]	/* 1 value pushed */
      32
      ADD[ ]	/* Add */
      FLOOR[ ]	/* Floor */
      DUP[ ]	/* DuplicateTopStack */
      IF[ ]	/* If */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      1
      SUB[ ]	/* Subtract */
      SWAP[ ]	/* SwapTopStack */
      IF[ ]	/* If */
      ELSE[ ]	/* Else */
      NEG[ ]	/* Negate */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      41
      SWAP[ ]	/* SwapTopStack */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      5
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      8
      CINDEX[ ]	/* CopyXToTopStack */
      SFVTL[0]	/* SetFVectorToLine */
      DUP[ ]	/* DuplicateTopStack */
      IF[ ]	/* If */
      SPVTCA[0]	/* SetPVectorToAxis */
      ELSE[ ]	/* Else */
      SPVTCA[1]	/* SetPVectorToAxis */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      SRP0[ ]	/* SetRefPoint0 */
      PUSHB[ ]	/* 1 value pushed */
      5
      CINDEX[ ]	/* CopyXToTopStack */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      ALIGNRP[ ]	/* AlignRelativePt */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      7
      CINDEX[ ]	/* CopyXToTopStack */
      SFVTL[0]	/* SetFVectorToLine */
      PUSHB[ ]	/* 1 value pushed */
      7
      CINDEX[ ]	/* CopyXToTopStack */
      SRP0[ ]	/* SetRefPoint0 */
      PUSHB[ ]	/* 1 value pushed */
      6
      CINDEX[ ]	/* CopyXToTopStack */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      ALIGNRP[ ]	/* AlignRelativePt */
      DUP[ ]	/* DuplicateTopStack */
      IF[ ]	/* If */
      SVTCA[1]	/* SetFPVectorToAxis */
      ELSE[ ]	/* Else */
      SVTCA[0]	/* SetFPVectorToAxis */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      SRP0[ ]	/* SetRefPoint0 */
      PUSHB[ ]	/* 1 value pushed */
      5
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      41
      MIRP[00000]	/* MoveIndirectRelPt */
      PUSHB[ ]	/* 1 value pushed */
      41
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      NEG[ ]	/* Negate */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      7
      CINDEX[ ]	/* CopyXToTopStack */
      SRP0[ ]	/* SetRefPoint0 */
      PUSHB[ ]	/* 1 value pushed */
      6
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      41
      MIRP[00000]	/* MoveIndirectRelPt */
      PUSHB[ ]	/* 1 value pushed */
      5
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      8
      CINDEX[ ]	/* CopyXToTopStack */
      SFVTL[0]	/* SetFVectorToLine */
      DUP[ ]	/* DuplicateTopStack */
      IF[ ]	/* If */
      SPVTCA[0]	/* SetPVectorToAxis */
      ELSE[ ]	/* Else */
      SPVTCA[1]	/* SetPVectorToAxis */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      5
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      RS[ ]	/* ReadStore */
      SCFS[ ]	/* SetCoordFromStackFP */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      7
      CINDEX[ ]	/* CopyXToTopStack */
      SFVTL[0]	/* SetFVectorToLine */
      PUSHB[ ]	/* 1 value pushed */
      6
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      RS[ ]	/* ReadStore */
      SCFS[ ]	/* SetCoordFromStackFP */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      SPVTCA[0]	/* SetPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      5
      CINDEX[ ]	/* CopyXToTopStack */
      SFVTL[0]	/* SetFVectorToLine */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      RCVT[ ]	/* ReadCVT */
      SCFS[ ]	/* SetCoordFromStackFP */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      SPVTCA[0]	/* SetPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      SFVTL[0]	/* SetFVectorToLine */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      RS[ ]	/* ReadStore */
      SCFS[ ]	/* SetCoordFromStackFP */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      RCVT[ ]	/* ReadCVT */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      RTG[ ]	/* RoundToGrid */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      DUP[ ]	/* DuplicateTopStack */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      NEG[ ]	/* Negate */
      SWAP[ ]	/* SwapTopStack */
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      ROUND[00]	/* Round */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      IF[ ]	/* If */
      NEG[ ]	/* Negate */
      EIF[ ]	/* EndIf */
      ROLL[ ]	/* RollTopThreeStack */
      ADD[ ]	/* Add */
      WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      GTEQ[ ]	/* GreaterThanOrEqual */
      SWAP[ ]	/* SwapTopStack */
      MPPEM[ ]	/* MeasurePixelPerEm */
      LTEQ[ ]	/* LessThenOrEqual */
      AND[ ]	/* LogicalAnd */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      ROLL[ ]	/* RollTopThreeStack */
      ADD[ ]	/* Add */
      WCVTP[ ]	/* WriteCVTInPixels */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      ROLL[ ]	/* RollTopThreeStack */
      ADD[ ]	/* Add */
      WCVTP[ ]	/* WriteCVTInPixels */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      GTEQ[ ]	/* GreaterThanOrEqual */
      SWAP[ ]	/* SwapTopStack */
      MPPEM[ ]	/* MeasurePixelPerEm */
      LTEQ[ ]	/* LessThenOrEqual */
      AND[ ]	/* LogicalAnd */
      IF[ ]	/* If */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      2
      RS[ ]	/* ReadStore */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      70
      CALL[ ]	/* CallFunction */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      2
      RS[ ]	/* ReadStore */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      71
      CALL[ ]	/* CallFunction */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      2
      RS[ ]	/* ReadStore */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      72
      CALL[ ]	/* CallFunction */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      2
      RS[ ]	/* ReadStore */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      73
      CALL[ ]	/* CallFunction */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      SFVTL[0]	/* SetFVectorToLine */
      SWAP[ ]	/* SwapTopStack */
      MPPEM[ ]	/* MeasurePixelPerEm */
      GTEQ[ ]	/* GreaterThanOrEqual */
      ROLL[ ]	/* RollTopThreeStack */
      MPPEM[ ]	/* MeasurePixelPerEm */
      LTEQ[ ]	/* LessThenOrEqual */
      AND[ ]	/* LogicalAnd */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[0]	/* SetFPVectorToAxis */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      MD[0]	/* MeasureDistance */
      PUSHB[ ]	/* 1 value pushed */
      0
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      SRP2[ ]	/* SetRefPoint2 */
      SHC[0]	/* ShiftContourByLastPt */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[1]	/* SetFPVectorToAxis */
      GC[0]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[0]	/* GetCoordOnPVector */
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      GC[0]	/* GetCoordOnPVector */
      SUB[ ]	/* Subtract */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      SRP0[ ]	/* SetRefPoint0 */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      ROLL[ ]	/* RollTopThreeStack */
      SUB[ ]	/* Subtract */
      PUSHW[ ]	/* 1 value pushed */
      -128
      DIV[ ]	/* Divide */
      ROLL[ ]	/* RollTopThreeStack */
      PUSHB[ ]	/* 2 values pushed */
      64 64
      ROLL[ ]	/* RollTopThreeStack */
      WCVTF[ ]	/* WriteCVTInFUnits */
      RCVT[ ]	/* ReadCVT */
      ADD[ ]	/* Add */
      ROUND[00]	/* Round */
      MSIRP[0]	/* MoveStackIndirRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      MD[0]	/* MeasureDistance */
      ABS[ ]	/* Absolute */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      ALIGNRP[ ]	/* AlignRelativePt */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      RDTG[ ]	/* RoundDownToGrid */
      ELSE[ ]	/* Else */
      ROFF[ ]	/* RoundOff */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      18
      SVTCA[0]	/* SetFPVectorToAxis */
      MPPEM[ ]	/* MeasurePixelPerEm */
      SVTCA[1]	/* SetFPVectorToAxis */
      MPPEM[ ]	/* MeasurePixelPerEm */
      EQ[ ]	/* Equal */
      WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      2 0
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 2 values pushed */
      35 1
      GETINFO[ ]	/* GetInfo */
      LTEQ[ ]	/* LessThenOrEqual */
      PUSHB[ ]	/* 2 values pushed */
      64 1
      GETINFO[ ]	/* GetInfo */
      GTEQ[ ]	/* GreaterThanOrEqual */
      AND[ ]	/* LogicalAnd */
      IF[ ]	/* If */
      PUSHW[ ]	/* 2 values pushed */
      4096 32
      GETINFO[ ]	/* GetInfo */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      2 1
      WS[ ]	/* WriteStore */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      RCVT[ ]	/* ReadCVT */
      RTG[ ]	/* RoundToGrid */
      ROUND[00]	/* Round */
      SWAP[ ]	/* SwapTopStack */
      MPPEM[ ]	/* MeasurePixelPerEm */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      ABS[ ]	/* Absolute */
      PUSHB[ ]	/* 1 value pushed */
      64
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      RUTG[ ]	/* RoundUpToGrid */
      EIF[ ]	/* EndIf */
      ROUND[00]	/* Round */
      ROLL[ ]	/* RollTopThreeStack */
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      SVTCA[1]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      1
      SWAP[ ]	/* SwapTopStack */
      MIAP[0]	/* MoveIndirectAbsPt */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      2
      SWAP[ ]	/* SwapTopStack */
      MIAP[0]	/* MoveIndirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      1 2
      SPVTL[0]	/* SetPVectorToLine */
      GPV[ ]	/* GetPVector */
      PUSHB[ ]	/* 1 value pushed */
      10
      SWAP[ ]	/* SwapTopStack */
      NEG[ ]	/* Negate */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      11
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      SVTCA[1]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      1
      SWAP[ ]	/* SwapTopStack */
      MIAP[1]	/* MoveIndirectAbsPt */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      2
      SWAP[ ]	/* SwapTopStack */
      MIAP[1]	/* MoveIndirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      1 2
      SPVTL[0]	/* SetPVectorToLine */
      GPV[ ]	/* GetPVector */
      PUSHB[ ]	/* 1 value pushed */
      6
      SWAP[ ]	/* SwapTopStack */
      NEG[ ]	/* Negate */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      7
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      1
      SZPS[ ]	/* SetZonePointerS */
      SVTCA[1]	/* SetFPVectorToAxis */
      ENDF[ ]	/* EndFunctionDefinition */
    </assembly>
  </fpgm>

  <prep>
    <assembly>
      NPUSHB[ ]	/* 79 values pushed */
      9 124 36 120 85 122 36 120 85 64 165 19 36 70 165 10 15 31 79 164 1 64 164 27 36
      70 0 164 16 164 2 17 164 15 6 85 118 110 41 31 116 114 100 31 63 162 1 64 162 27
      36 70 162 160 15 31 80 170 1 170 67 23 31 169 80 27 31 115 66 27 31 114 66 27 31
      112 110 100 31
      PUSHW[ ]	/* 1 value pushed */
      -64
      NPUSHB[ ]	/* 238 values pushed */
      167 20 23 70 167 78 20 31 168 66 27 31 63 161 1 64 161 27 36 70 161 160 15 31 16
      111 28 36 70 155 111 1 27 111 1 32 110 48 110 2 110 66 27 31 160 159 8 31 106 66
      27 31 105 97 41 31 103 101 100 31 101 67 41 31 99 97 100 31 97 66 27 31 144 89 160
      89 2 89 66 27 31 155 87 1 111 87 127 87 2 64 87 38 44 70 207 87 223 87 2 191
      87 1 169 87 1 87 67 27 31 15 85 1 18 64 83 80 83 2 160 83 1 0 83 16 83
      2 83 66 27 31 64 81 80 81 2 160 81 1 0 81 16 81 2 27 81 66 27 31 143 80
      159 80 2 95 80 111 80 2 207 80 223 80 2 175 80 191 80 2 31 80 1 80 65 17 31
      77 66 27 31 76 68 41 31 95 74 1 175 74 1 0 74 1 28 74 67 27 31 15 72 31
      72 2 59 64 72 55 58 70 143 72 1 79 72 95 72 111 72 3 47 72 1 255 72 1 223
      72 239 72 2 64 72 29 33 70 72 67 27 31
      PUSHW[ ]	/* 1 value pushed */
      -64
      NPUSHB[ ]	/* 80 values pushed */
      70 55 58 70 96 70 112 70 2 64 70 1 160 70 176 70 192 70 3 32 70 48 70 2 70
      66 27 31 96 68 112 68 2 192 68 1 32 68 48 68 2 68 66 27 31 67 65 17 31 66
      65 17 31 176 6 50 31 48 173 1 173 172 12 31 11 42 10 85 7 42 6 85 9 42 8
      85 3 42 2 85
      PUSHW[ ]	/* 1 value pushed */
      -64
      PUSHB[ ]	/* 4 values pushed */
      2 13 17 70
      PUSHW[ ]	/* 1 value pushed */
      256
      PUSHB[ ]	/* 4 values pushed */
      22 1 5 1
      PUSHW[ ]	/* 1 value pushed */
      400
      PUSHB[ ]	/* 2 values pushed */
      84 83
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHW[ ]	/* 1 value pushed */
      2047
      GT[ ]	/* GreaterThan */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      4
      LT[ ]	/* LessThan */
      OR[ ]	/* LogicalOr */
      PUSHB[ ]	/* 1 value pushed */
      1
      GETINFO[ ]	/* GetInfo */
      PUSHB[ ]	/* 1 value pushed */
      37
      GTEQ[ ]	/* GreaterThanOrEqual */
      PUSHB[ ]	/* 1 value pushed */
      1
      GETINFO[ ]	/* GetInfo */
      PUSHB[ ]	/* 1 value pushed */
      64
      LTEQ[ ]	/* LessThenOrEqual */
      AND[ ]	/* LogicalAnd */
      PUSHB[ ]	/* 1 value pushed */
      6
      GETINFO[ ]	/* GetInfo */
      PUSHB[ ]	/* 1 value pushed */
      0
      NEQ[ ]	/* NotEqual */
      AND[ ]	/* LogicalAnd */
      OR[ ]	/* LogicalOr */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      1 1
      INSTCTRL[ ]	/* SetInstrExecControl */
      EIF[ ]	/* EndIf */
      SCANCTRL[ ]	/* ScanConversionControl */
      SCANTYPE[ ]	/* ScanType */
      SCANTYPE[ ]	/* ScanType */
      SVTCA[0]	/* SetFPVectorToAxis */
      WS[ ]	/* WriteStore */
      SCVTCI[ ]	/* SetCVTCutIn */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      29
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      160
      SCVTCI[ ]	/* SetCVTCutIn */
      EIF[ ]	/* EndIf */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      128
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      0
      SCVTCI[ ]	/* SetCVTCutIn */
      PUSHB[ ]	/* 2 values pushed */
      22 0
      WS[ ]	/* WriteStore */
      EIF[ ]	/* EndIf */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      CALL[ ]	/* CallFunction */
      SVTCA[1]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      SVTCA[1]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      DELTAC3[ ]	/* DeltaExceptionC3 */
      CALL[ ]	/* CallFunction */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      DELTAC3[ ]	/* DeltaExceptionC3 */
      DELTAC3[ ]	/* DeltaExceptionC3 */
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      DELTAC3[ ]	/* DeltaExceptionC3 */
      DELTAC3[ ]	/* DeltaExceptionC3 */
      DELTAC3[ ]	/* DeltaExceptionC3 */
      CALL[ ]	/* CallFunction */
      SDB[ ]	/* SetDeltaBaseInGState */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      CALL[ ]	/* CallFunction */
      SDB[ ]	/* SetDeltaBaseInGState */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      SVTCA[1]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      SDB[ ]	/* SetDeltaBaseInGState */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      CALL[ ]	/* CallFunction */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      SVTCA[0]	/* SetFPVectorToAxis */
      SDB[ ]	/* SetDeltaBaseInGState */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      CALL[ ]	/* CallFunction */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      CALL[ ]	/* CallFunction */
      DELTAC3[ ]	/* DeltaExceptionC3 */
      DELTAC3[ ]	/* DeltaExceptionC3 */
      CALL[ ]	/* CallFunction */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      SVTCA[1]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      SVTCA[1]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      SDB[ ]	/* SetDeltaBaseInGState */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      CALL[ ]	/* CallFunction */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      SVTCA[1]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      RTG[ ]	/* RoundToGrid */
      SDB[ ]	/* SetDeltaBaseInGState */
    </assembly>
  </prep>

  <cvt>
    <cv index="0" value="1577"/>
    <cv index="1" value="0"/>
    <cv index="2" value="1516"/>
    <cv index="3" value="31"/>
    <cv index="4" value="0"/>
    <cv index="5" value="0"/>
    <cv index="6" value="1036"/>
    <cv index="7" value="30"/>
    <cv index="8" value="0"/>
    <cv index="9" value="-31"/>
    <cv index="10" value="0"/>
    <cv index="11" value="-30"/>
    <cv index="12" value="0"/>
    <cv index="13" value="0"/>
    <cv index="14" value="-471"/>
    <cv index="15" value="0"/>
    <cv index="16" value="1770"/>
    <cv index="17" value="190"/>
    <cv index="18" value="377"/>
    <cv index="19" value="0"/>
    <cv index="20" value="0"/>
    <cv index="21" value="0"/>
    <cv index="22" value="0"/>
    <cv index="23" value="0"/>
    <cv index="24" value="0"/>
    <cv index="25" value="0"/>
    <cv index="26" value="0"/>
    <cv index="27" value="0"/>
    <cv index="28" value="0"/>
    <cv index="29" value="0"/>
    <cv index="30" value="0"/>
    <cv index="31" value="0"/>
    <cv index="32" value="0"/>
    <cv index="33" value="0"/>
    <cv index="34" value="0"/>
    <cv index="35" value="0"/>
    <cv index="36" value="0"/>
    <cv index="37" value="0"/>
    <cv index="38" value="0"/>
    <cv index="39" value="0"/>
    <cv index="40" value="0"/>
    <cv index="41" value="0"/>
    <cv index="42" value="0"/>
    <cv index="43" value="0"/>
    <cv index="44" value="0"/>
    <cv index="45" value="0"/>
    <cv index="46" value="0"/>
    <cv index="47" value="0"/>
    <cv index="48" value="0"/>
    <cv index="49" value="0"/>
    <cv index="50" value="0"/>
    <cv index="51" value="0"/>
    <cv index="52" value="0"/>
    <cv index="53" value="0"/>
    <cv index="54" value="0"/>
    <cv index="55" value="0"/>
    <cv index="56" value="0"/>
    <cv index="57" value="0"/>
    <cv index="58" value="0"/>
    <cv index="59" value="0"/>
    <cv index="60" value="0"/>
    <cv index="61" value="0"/>
    <cv index="62" value="0"/>
    <cv index="63" value="0"/>
    <cv index="64" value="0"/>
    <cv index="65" value="164"/>
    <cv index="66" value="179"/>
    <cv index="67" value="172"/>
    <cv index="68" value="196"/>
    <cv index="69" value="0"/>
    <cv index="70" value="205"/>
    <cv index="71" value="0"/>
    <cv index="72" value="152"/>
    <cv index="73" value="165"/>
    <cv index="74" value="186"/>
    <cv index="75" value="0"/>
    <cv index="76" value="208"/>
    <cv index="77" value="180"/>
    <cv index="78" value="146"/>
    <cv index="79" value="0"/>
    <cv index="80" value="172"/>
    <cv index="81" value="196"/>
    <cv index="82" value="90"/>
    <cv index="83" value="197"/>
    <cv index="84" value="0"/>
    <cv index="85" value="168"/>
    <cv index="86" value="490"/>
    <cv index="87" value="160"/>
    <cv index="88" value="0"/>
    <cv index="89" value="190"/>
    <cv index="90" value="0"/>
    <cv index="91" value="0"/>
    <cv index="92" value="0"/>
    <cv index="93" value="172"/>
    <cv index="94" value="0"/>
    <cv index="95" value="0"/>
    <cv index="96" value="0"/>
    <cv index="97" value="0"/>
    <cv index="98" value="0"/>
    <cv index="99" value="0"/>
    <cv index="100" value="0"/>
    <cv index="101" value="0"/>
    <cv index="102" value="0"/>
    <cv index="103" value="0"/>
    <cv index="104" value="0"/>
    <cv index="105" value="0"/>
    <cv index="106" value="191"/>
    <cv index="107" value="0"/>
    <cv index="108" value="0"/>
    <cv index="109" value="172"/>
    <cv index="110" value="260"/>
    <cv index="111" value="74"/>
    <cv index="112" value="0"/>
    <cv index="113" value="145"/>
    <cv index="114" value="262"/>
    <cv index="115" value="172"/>
    <cv index="116" value="0"/>
    <cv index="117" value="0"/>
    <cv index="118" value="0"/>
    <cv index="119" value="141"/>
    <cv index="120" value="50"/>
    <cv index="121" value="131"/>
    <cv index="122" value="26"/>
    <cv index="123" value="490"/>
    <cv index="124" value="26"/>
    <cv index="125" value="649"/>
    <cv index="126" value="0"/>
    <cv index="127" value="0"/>
    <cv index="128" value="0"/>
    <cv index="129" value="0"/>
    <cv index="130" value="0"/>
    <cv index="131" value="0"/>
    <cv index="132" value="0"/>
    <cv index="133" value="0"/>
    <cv index="134" value="0"/>
    <cv index="135" value="0"/>
    <cv index="136" value="0"/>
    <cv index="137" value="0"/>
    <cv index="138" value="0"/>
    <cv index="139" value="0"/>
    <cv index="140" value="1035"/>
    <cv index="141" value="0"/>
    <cv index="142" value="0"/>
    <cv index="143" value="0"/>
    <cv index="144" value="0"/>
    <cv index="145" value="0"/>
    <cv index="146" value="0"/>
    <cv index="147" value="0"/>
    <cv index="148" value="0"/>
    <cv index="149" value="0"/>
    <cv index="150" value="0"/>
    <cv index="151" value="0"/>
    <cv index="152" value="0"/>
    <cv index="153" value="0"/>
    <cv index="154" value="0"/>
    <cv index="155" value="0"/>
    <cv index="156" value="0"/>
    <cv index="157" value="0"/>
    <cv index="158" value="0"/>
    <cv index="159" value="330"/>
    <cv index="160" value="400"/>
    <cv index="161" value="406"/>
    <cv index="162" value="406"/>
    <cv index="163" value="0"/>
    <cv index="164" value="30"/>
    <cv index="165" value="0"/>
    <cv index="166" value="0"/>
    <cv index="167" value="81"/>
    <cv index="168" value="135"/>
    <cv index="169" value="130"/>
    <cv index="170" value="140"/>
    <cv index="171" value="0"/>
    <cv index="172" value="850"/>
    <cv index="173" value="850"/>
    <cv index="174" value="0"/>
    <cv index="175" value="74"/>
    <cv index="176" value="950"/>
    <cv index="177" value="50"/>
    <cv index="178" value="89"/>
    <cv index="179" value="10"/>
    <cv index="180" value="10"/>
    <cv index="181" value="120"/>
    <cv index="182" value="1"/>
  </cvt>

  <loca>
    <!-- The 'loca' table will be calculated by the compiler -->
  </loca>

  <glyf>

    <!-- The xMin, yMin, xMax and yMax values
         will be recalculated by the compiler. -->

    <TTGlyph name=".notdef" xMin="102" yMin="0" xMax="1038" yMax="1516">
      <contour>
        <pt x="102" y="1516" on="1"/>
        <pt x="1038" y="1516" on="1"/>
        <pt x="1038" y="0" on="1"/>
        <pt x="102" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="205" y="102" on="1"/>
        <pt x="936" y="102" on="1"/>
        <pt x="936" y="1413" on="1"/>
        <pt x="205" y="1413" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 16 values pushed */
          5 68 1 9 4 68 0 8 4 115 3 8 7 115 0 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="A" xMin="10" yMin="0" xMax="1532" yMax="1516">
      <contour>
        <pt x="1040" y="172" on="1"/>
        <pt x="1166" y="172" on="1"/>
        <pt x="1046" y="516" on="1"/>
        <pt x="463" y="516" on="1"/>
        <pt x="346" y="172" on="1"/>
        <pt x="502" y="172" on="1"/>
        <pt x="502" y="0" on="1"/>
        <pt x="10" y="0" on="1"/>
        <pt x="10" y="172" on="1"/>
        <pt x="142" y="172" on="1"/>
        <pt x="614" y="1516" on="1"/>
        <pt x="909" y="1516" on="1"/>
        <pt x="1380" y="172" on="1"/>
        <pt x="1532" y="172" on="1"/>
        <pt x="1532" y="0" on="1"/>
        <pt x="1040" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="520" y="682" on="1"/>
        <pt x="988" y="682" on="1"/>
        <pt x="752" y="1360" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 81 values pushed */
          63 19 1 41 18 1 41 17 1 41 11 1 5 10 1 43 18 1 13 20 112 20 1 8 19
          11 12 12 76 1 18 20 1 18 12 1 3 16 18 4 18 17 2 1 18 1 18 4 4 76
          9 10 20 9 9 10 10 9 43 1 1 1 18 15 8 11 10 2 9 80 7 8 4 80 16
          17 72 2 3 1 80
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SRP0[ ]	/* SetRefPoint0 */
          CALL[ ]	/* CallFunction */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          SDPVTL[1]	/* SetDualPVectorToLine */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          SDPVTL[1]	/* SetDualPVectorToLine */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          CALL[ ]	/* CallFunction */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00110]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="AE" xMin="-2" yMin="0" xMax="1858" yMax="1516">
      <contour>
        <pt x="-2" y="172" on="1"/>
        <pt x="104" y="172" on="1"/>
        <pt x="920" y="1516" on="1"/>
        <pt x="1858" y="1516" on="1"/>
        <pt x="1858" y="1087" on="1"/>
        <pt x="1653" y="1087" on="1"/>
        <pt x="1653" y="1343" on="1"/>
        <pt x="1188" y="1343" on="1"/>
        <pt x="1188" y="862" on="1"/>
        <pt x="1567" y="862" on="1"/>
        <pt x="1567" y="690" on="1"/>
        <pt x="1188" y="690" on="1"/>
        <pt x="1188" y="172" on="1"/>
        <pt x="1653" y="172" on="1"/>
        <pt x="1653" y="428" on="1"/>
        <pt x="1858" y="428" on="1"/>
        <pt x="1858" y="0" on="1"/>
        <pt x="866" y="0" on="1"/>
        <pt x="866" y="172" on="1"/>
        <pt x="991" y="172" on="1"/>
        <pt x="991" y="426" on="1"/>
        <pt x="474" y="426" on="1"/>
        <pt x="326" y="172" on="1"/>
        <pt x="489" y="172" on="1"/>
        <pt x="489" y="0" on="1"/>
        <pt x="-2" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="991" y="598" on="1"/>
        <pt x="991" y="1312" on="1"/>
        <pt x="575" y="598" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 81 values pushed */
          51 28 1 52 27 1 48 2 1 58 27 1 26 18 78 20 68 8 11 5 13 68 4 15 30
          28 21 22 27 27 22 1 2 27 2 22 76 1 2 20 1 2 22 0 78 1 29 48 29 1
          9 2 23 1 80 24 8 21 20 72 28 63 26 1 26 10 72 8 8 7 19 12 80 17 8
          14 5 7 80 2 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDRP[10101]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10101]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[0]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[11101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[11110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Aacute" xMin="10" yMin="0" xMax="1532" yMax="1957">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="461" y="480" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Acircumflex" xMin="10" yMin="0" xMax="1532" yMax="1959">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="272" y="470" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Adieresis" xMin="10" yMin="0" xMax="1532" yMax="1969">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="376" y="480" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Agrave" xMin="10" yMin="0" xMax="1532" yMax="1957">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="grave" x="371" y="480" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Aring" xMin="10" yMin="0" xMax="1532" yMax="1948">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="ring" x="161" y="480" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Atilde" xMin="10" yMin="0" xMax="1532" yMax="1895">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="tilde" x="323" y="480" flags="0x4"/>
      <instructions><assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 0 42 28 10 11 80
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="B" xMin="143" yMin="0" xMax="1276" yMax="1518">
      <contour>
        <pt x="143" y="172" on="1"/>
        <pt x="287" y="172" on="1"/>
        <pt x="287" y="1343" on="1"/>
        <pt x="143" y="1343" on="1"/>
        <pt x="143" y="1518" on="1"/>
        <pt x="825" y="1516" on="1"/>
        <pt x="917" y="1516" on="0"/>
        <pt x="1079" y="1447" on="0"/>
        <pt x="1199" y="1328" on="0"/>
        <pt x="1268" y="1166" on="0"/>
        <pt x="1268" y="1073" on="1"/>
        <pt x="1268" y="976" on="0"/>
        <pt x="1160" y="816" on="0"/>
        <pt x="1060" y="768" on="1"/>
        <pt x="1109" y="742" on="0"/>
        <pt x="1189" y="673" on="0"/>
        <pt x="1245" y="591" on="0"/>
        <pt x="1276" y="499" on="0"/>
        <pt x="1276" y="451" on="1"/>
        <pt x="1276" y="356" on="0"/>
        <pt x="1207" y="192" on="0"/>
        <pt x="1087" y="70" on="0"/>
        <pt x="926" y="0" on="0"/>
        <pt x="834" y="0" on="1"/>
        <pt x="143" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="483" y="674" on="1"/>
        <pt x="483" y="172" on="1"/>
        <pt x="836" y="172" on="1"/>
        <pt x="884" y="172" on="0"/>
        <pt x="966" y="220" on="0"/>
        <pt x="1028" y="297" on="0"/>
        <pt x="1063" y="395" on="0"/>
        <pt x="1063" y="446" on="1"/>
        <pt x="1063" y="490" on="0"/>
        <pt x="1027" y="572" on="0"/>
        <pt x="966" y="636" on="0"/>
        <pt x="883" y="674" on="0"/>
        <pt x="836" y="674" on="1"/>
      </contour>
      <contour>
        <pt x="483" y="1343" on="1"/>
        <pt x="483" y="848" on="1"/>
        <pt x="827" y="848" on="1"/>
        <pt x="875" y="848" on="0"/>
        <pt x="958" y="886" on="0"/>
        <pt x="1019" y="950" on="0"/>
        <pt x="1055" y="1034" on="0"/>
        <pt x="1055" y="1079" on="1"/>
        <pt x="1055" y="1128" on="0"/>
        <pt x="1019" y="1223" on="0"/>
        <pt x="957" y="1297" on="0"/>
        <pt x="874" y="1343" on="0"/>
        <pt x="827" y="1343" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 43 values pushed */
          116 12 1 10 70 45 45 32 70 13 48 18 1 18 52 25 39 68 3 78 48 1 1 1 51
          13 40 40 37 72 39 39 2 26 1 80 24 8 38 2 80 4 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11100]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01110]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="C" xMin="72" yMin="-30" xMax="1446" yMax="1546">
      <contour>
        <pt x="1219" y="1116" on="1"/>
        <pt x="1152" y="1230" on="0"/>
        <pt x="931" y="1360" on="0"/>
        <pt x="795" y="1360" on="1"/>
        <pt x="679" y="1360" on="0"/>
        <pt x="487" y="1262" on="0"/>
        <pt x="350" y="1097" on="0"/>
        <pt x="274" y="880" on="0"/>
        <pt x="274" y="760" on="1"/>
        <pt x="274" y="618" on="0"/>
        <pt x="358" y="399" on="0"/>
        <pt x="493" y="254" on="0"/>
        <pt x="679" y="157" on="0"/>
        <pt x="795" y="157" on="1"/>
        <pt x="953" y="157" on="0"/>
        <pt x="1187" y="310" on="0"/>
        <pt x="1270" y="485" on="1"/>
        <pt x="1446" y="402" on="1"/>
        <pt x="1408" y="294" on="0"/>
        <pt x="1226" y="93" on="0"/>
        <pt x="959" y="-30" on="0"/>
        <pt x="797" y="-30" on="1"/>
        <pt x="642" y="-30" on="0"/>
        <pt x="382" y="87" on="0"/>
        <pt x="179" y="303" on="0"/>
        <pt x="72" y="599" on="0"/>
        <pt x="72" y="760" on="1"/>
        <pt x="72" y="922" on="0"/>
        <pt x="179" y="1210" on="0"/>
        <pt x="372" y="1423" on="0"/>
        <pt x="639" y="1546" on="0"/>
        <pt x="795" y="1546" on="1"/>
        <pt x="934" y="1546" on="0"/>
        <pt x="1136" y="1467" on="0"/>
        <pt x="1277" y="1358" on="0"/>
        <pt x="1328" y="1294" on="1"/>
        <pt x="1434" y="1294" on="1"/>
        <pt x="1434" y="1116" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHW[ ]	/* 2 values pushed */
          34 -16
          PUSHB[ ]	/* 4 values pushed */
          16 0 77 28
          PUSHW[ ]	/* 1 value pushed */
          -24
          NPUSHB[ ]	/* 59 values pushed */
          16 0 77 3 31 33 31 29 3 26 35 13 21 21 26 17 70 16 16 1 70 37 48 35 1
          35 39 8 70 48 26 1 26 38 8 26 35 80 16 26 37 37 21 31 1 5 15 11 5 16
          16 0 77 5 48 12 0 77 11
          PUSHW[ ]	/* 1 value pushed */
          -16
          PUSHB[ ]	/* 4 values pushed */
          16 0 77 11
          PUSHW[ ]	/* 1 value pushed */
          -40
          NPUSHB[ ]	/* 14 values pushed */
          12 0 77 5 11 13 3 74 31 3 13 74 21 9
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11100]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDRP[01001]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Ccaron" xMin="72" yMin="-30" xMax="1446" yMax="1968">
      <component glyphName="C" x="0" y="0" flags="0x204"/>
      <component glyphName="caron" x="260" y="480" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Ccedilla" xMin="72" yMin="-432" xMax="1446" yMax="1546">
      <component glyphName="C" x="0" y="0" flags="0x204"/>
      <component glyphName="cedilla" x="362" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="D" xMin="143" yMin="0" xMax="1436" yMax="1516">
      <contour>
        <pt x="143" y="1516" on="1"/>
        <pt x="707" y="1516" on="1"/>
        <pt x="811" y="1516" on="0"/>
        <pt x="999" y="1462" on="0"/>
        <pt x="1161" y="1364" on="0"/>
        <pt x="1293" y="1227" on="0"/>
        <pt x="1386" y="1059" on="0"/>
        <pt x="1436" y="866" on="0"/>
        <pt x="1436" y="762" on="1"/>
        <pt x="1436" y="656" on="0"/>
        <pt x="1386" y="462" on="0"/>
        <pt x="1293" y="292" on="0"/>
        <pt x="1161" y="153" on="0"/>
        <pt x="999" y="54" on="0"/>
        <pt x="811" y="0" on="0"/>
        <pt x="707" y="0" on="1"/>
        <pt x="143" y="0" on="1"/>
        <pt x="143" y="172" on="1"/>
        <pt x="287" y="172" on="1"/>
        <pt x="287" y="1343" on="1"/>
        <pt x="143" y="1343" on="1"/>
      </contour>
      <contour>
        <pt x="483" y="1343" on="1"/>
        <pt x="483" y="172" on="1"/>
        <pt x="719" y="172" on="1"/>
        <pt x="824" y="172" on="0"/>
        <pt x="1009" y="264" on="0"/>
        <pt x="1147" y="423" on="0"/>
        <pt x="1227" y="638" on="0"/>
        <pt x="1227" y="762" on="1"/>
        <pt x="1227" y="884" on="0"/>
        <pt x="1147" y="1096" on="0"/>
        <pt x="1009" y="1253" on="0"/>
        <pt x="824" y="1343" on="0"/>
        <pt x="719" y="1343" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHW[ ]	/* 2 values pushed */
          13 -56
          PUSHB[ ]	/* 4 values pushed */
          16 0 77 6
          PUSHW[ ]	/* 1 value pushed */
          -8
          PUSHB[ ]	/* 4 values pushed */
          16 0 77 3
          PUSHW[ ]	/* 1 value pushed */
          -56
          PUSHB[ ]	/* 4 values pushed */
          16 0 77 32
          PUSHW[ ]	/* 1 value pushed */
          -24
          NPUSHB[ ]	/* 18 values pushed */
          16 0 77 28 70 8 35 0 17 78 22 68 48 19 1 19 34 25
          PUSHW[ ]	/* 1 value pushed */
          -24
          NPUSHB[ ]	/* 27 values pushed */
          12 0 77 25 28 22 18 80 31 16 12 0 77 31 28 21 28 8 8 0 16 8 19 21 80
          0 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          CALL[ ]	/* CallFunction */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="E" xMin="143" yMin="0" xMax="1229" yMax="1516">
      <contour>
        <pt x="143" y="1516" on="1"/>
        <pt x="1229" y="1516" on="1"/>
        <pt x="1229" y="1087" on="1"/>
        <pt x="1024" y="1087" on="1"/>
        <pt x="1024" y="1343" on="1"/>
        <pt x="483" y="1343" on="1"/>
        <pt x="483" y="858" on="1"/>
        <pt x="938" y="858" on="1"/>
        <pt x="938" y="686" on="1"/>
        <pt x="483" y="686" on="1"/>
        <pt x="483" y="172" on="1"/>
        <pt x="1024" y="172" on="1"/>
        <pt x="1024" y="428" on="1"/>
        <pt x="1229" y="428" on="1"/>
        <pt x="1229" y="0" on="1"/>
        <pt x="143" y="0" on="1"/>
        <pt x="143" y="172" on="1"/>
        <pt x="287" y="172" on="1"/>
        <pt x="287" y="1343" on="1"/>
        <pt x="143" y="1343" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 51 values pushed */
          3 11 68 13 63 7 1 7 7 2 13 21 48 21 1 16 19 78 5 9 68 48 17 160 17
          2 17 20 8 72 47 6 1 191 6 1 6 6 5 17 10 80 15 8 12 3 18 5 80 0
          2
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11100]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Eacute" xMin="143" yMin="0" xMax="1229" yMax="1957">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="376" y="480" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Ecircumflex" xMin="143" yMin="0" xMax="1229" yMax="1969">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="200" y="480" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Edieresis" xMin="143" yMin="0" xMax="1229" yMax="1969">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="250" y="480" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Egrave" xMin="143" yMin="0" xMax="1229" yMax="1957">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="grave" x="240" y="480" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Eth" xMin="127" yMin="0" xMax="1444" yMax="1516">
      <contour>
        <pt x="127" y="676" on="1"/>
        <pt x="127" y="848" on="1"/>
        <pt x="295" y="848" on="1"/>
        <pt x="295" y="1343" on="1"/>
        <pt x="139" y="1343" on="1"/>
        <pt x="139" y="1516" on="1"/>
        <pt x="715" y="1516" on="1"/>
        <pt x="819" y="1516" on="0"/>
        <pt x="1007" y="1462" on="0"/>
        <pt x="1169" y="1364" on="0"/>
        <pt x="1301" y="1227" on="0"/>
        <pt x="1394" y="1059" on="0"/>
        <pt x="1444" y="866" on="0"/>
        <pt x="1444" y="762" on="1"/>
        <pt x="1444" y="656" on="0"/>
        <pt x="1394" y="462" on="0"/>
        <pt x="1301" y="292" on="0"/>
        <pt x="1169" y="153" on="0"/>
        <pt x="1007" y="54" on="0"/>
        <pt x="819" y="0" on="0"/>
        <pt x="715" y="0" on="1"/>
        <pt x="139" y="0" on="1"/>
        <pt x="139" y="172" on="1"/>
        <pt x="295" y="172" on="1"/>
        <pt x="295" y="676" on="1"/>
      </contour>
      <contour>
        <pt x="492" y="1343" on="1"/>
        <pt x="492" y="848" on="1"/>
        <pt x="678" y="848" on="1"/>
        <pt x="678" y="676" on="1"/>
        <pt x="492" y="676" on="1"/>
        <pt x="492" y="172" on="1"/>
        <pt x="727" y="172" on="1"/>
        <pt x="832" y="172" on="0"/>
        <pt x="1017" y="264" on="0"/>
        <pt x="1155" y="423" on="0"/>
        <pt x="1235" y="638" on="0"/>
        <pt x="1235" y="762" on="1"/>
        <pt x="1235" y="884" on="0"/>
        <pt x="1155" y="1096" on="0"/>
        <pt x="1017" y="1253" on="0"/>
        <pt x="832" y="1343" on="0"/>
        <pt x="727" y="1343" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 28 values pushed */
          36 70 13 43 22 4 78 26 68 23 42 28 0 72 1 27 27 25 23 30 72 21 2 3 25
          72 5 8
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10100]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[01100]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="F" xMin="143" yMin="0" xMax="1229" yMax="1516">
      <contour>
        <pt x="143" y="1516" on="1"/>
        <pt x="1229" y="1516" on="1"/>
        <pt x="1229" y="1087" on="1"/>
        <pt x="1024" y="1087" on="1"/>
        <pt x="1024" y="1343" on="1"/>
        <pt x="483" y="1343" on="1"/>
        <pt x="483" y="856" on="1"/>
        <pt x="1004" y="856" on="1"/>
        <pt x="1004" y="688" on="1"/>
        <pt x="483" y="688" on="1"/>
        <pt x="483" y="172" on="1"/>
        <pt x="635" y="172" on="1"/>
        <pt x="635" y="0" on="1"/>
        <pt x="143" y="0" on="1"/>
        <pt x="143" y="172" on="1"/>
        <pt x="287" y="172" on="1"/>
        <pt x="287" y="1343" on="1"/>
        <pt x="143" y="1343" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 35 values pushed */
          3 68 1 19 63 19 1 14 17 78 15 11 78 9 5 68 15 18 7 8 72 6 6 16 14
          10 80 13 8 3 4 16 80 0 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10100]	/* MoveDirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[01100]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="G" xMin="72" yMin="-12" xMax="1499" yMax="1546">
      <contour>
        <pt x="1313" y="-6" on="1"/>
        <pt x="1313" y="298" on="1"/>
        <pt x="1275" y="219" on="0"/>
        <pt x="1161" y="102" on="0"/>
        <pt x="1021" y="26" on="0"/>
        <pt x="862" y="-12" on="0"/>
        <pt x="780" y="-12" on="1"/>
        <pt x="632" y="-12" on="0"/>
        <pt x="382" y="87" on="0"/>
        <pt x="179" y="303" on="0"/>
        <pt x="72" y="599" on="0"/>
        <pt x="72" y="760" on="1"/>
        <pt x="72" y="922" on="0"/>
        <pt x="179" y="1210" on="0"/>
        <pt x="372" y="1424" on="0"/>
        <pt x="639" y="1546" on="0"/>
        <pt x="795" y="1546" on="1"/>
        <pt x="939" y="1546" on="0"/>
        <pt x="1146" y="1464" on="0"/>
        <pt x="1293" y="1347" on="0"/>
        <pt x="1337" y="1294" on="1"/>
        <pt x="1434" y="1294" on="1"/>
        <pt x="1434" y="1116" on="1"/>
        <pt x="1219" y="1116" on="1"/>
        <pt x="1152" y="1230" on="0"/>
        <pt x="931" y="1362" on="0"/>
        <pt x="794" y="1360" on="1"/>
        <pt x="679" y="1360" on="0"/>
        <pt x="487" y="1262" on="0"/>
        <pt x="350" y="1096" on="0"/>
        <pt x="274" y="880" on="0"/>
        <pt x="274" y="760" on="1"/>
        <pt x="274" y="627" on="0"/>
        <pt x="358" y="399" on="0"/>
        <pt x="488" y="257" on="0"/>
        <pt x="679" y="164" on="0"/>
        <pt x="795" y="164" on="1"/>
        <pt x="987" y="164" on="0"/>
        <pt x="1233" y="351" on="0"/>
        <pt x="1282" y="549" on="1"/>
        <pt x="858" y="549" on="1"/>
        <pt x="858" y="721" on="1"/>
        <pt x="1499" y="721" on="1"/>
        <pt x="1499" y="-6" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 45 values pushed */
          38 64 16 0 77 117 18 1 13 32 16 0 77 9 32 16 0 77 16 11 22 24 70 20 20
          39 0 68 48 42 1 42 45 31 70 48 11 1 11 44 39 72 24 28 34
          PUSHW[ ]	/* 1 value pushed */
          -32
          NPUSHB[ ]	/* 31 values pushed */
          12 0 77 34 36 28 8 16 0 77 28 41 41 36 26 74 16 20 80 31 11 11 22 22 6
          16 3 36 74 6 8
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          IP[ ]	/* InterpolatePts */
          CALL[ ]	/* CallFunction */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDRP[01101]	/* MoveDirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="H" xMin="143" yMin="0" xMax="1700" yMax="1516">
      <contour>
        <pt x="1208" y="1516" on="1"/>
        <pt x="1700" y="1516" on="1"/>
        <pt x="1700" y="1344" on="1"/>
        <pt x="1556" y="1344" on="1"/>
        <pt x="1556" y="172" on="1"/>
        <pt x="1700" y="172" on="1"/>
        <pt x="1700" y="0" on="1"/>
        <pt x="1208" y="0" on="1"/>
        <pt x="1208" y="172" on="1"/>
        <pt x="1360" y="172" on="1"/>
        <pt x="1360" y="717" on="1"/>
        <pt x="483" y="717" on="1"/>
        <pt x="483" y="172" on="1"/>
        <pt x="635" y="172" on="1"/>
        <pt x="635" y="0" on="1"/>
        <pt x="143" y="0" on="1"/>
        <pt x="143" y="172" on="1"/>
        <pt x="287" y="172" on="1"/>
        <pt x="287" y="1344" on="1"/>
        <pt x="143" y="1344" on="1"/>
        <pt x="143" y="1516" on="1"/>
        <pt x="635" y="1516" on="1"/>
        <pt x="635" y="1344" on="1"/>
        <pt x="483" y="1344" on="1"/>
        <pt x="483" y="885" on="1"/>
        <pt x="1360" y="885" on="1"/>
        <pt x="1360" y="1344" on="1"/>
        <pt x="1208" y="1344" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 59 values pushed */
          63 28 1 8 27 78 26 10 68 5 2 78 4 29 15 19 78 17 13 22 78 23 11 68 17
          28 25 72 32 11 1 160 11 192 11 2 11 11 17 23 18 80 20 2 12 17 80 15 8 4
          9 80 7 8 3 26 80 0 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11100]	/* MoveDirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[00100]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11100]	/* MoveDirectRelPt */
          MIRP[00110]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[11101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[00100]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="I" xMin="143" yMin="0" xMax="627" yMax="1516">
      <contour>
        <pt x="143" y="1516" on="1"/>
        <pt x="627" y="1516" on="1"/>
        <pt x="627" y="1343" on="1"/>
        <pt x="483" y="1343" on="1"/>
        <pt x="483" y="172" on="1"/>
        <pt x="627" y="172" on="1"/>
        <pt x="627" y="0" on="1"/>
        <pt x="143" y="0" on="1"/>
        <pt x="143" y="172" on="1"/>
        <pt x="287" y="172" on="1"/>
        <pt x="287" y="1343" on="1"/>
        <pt x="143" y="1343" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 25 values pushed */
          63 12 1 8 11 78 9 13 5 2 78 4 68 9 12 5 9 80 7 8 2 10 80 0 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11100]	/* MoveDirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[11110]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[01110]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Iacute" xMin="143" yMin="0" xMax="627" yMax="1957">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="75" y="480" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Icircumflex" xMin="104" yMin="0" xMax="669" yMax="1969">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="-113" y="480" flags="0x4"/>
      <instructions><assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 0 12 15 0 1 80
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Idieresis" xMin="30" yMin="0" xMax="743" yMax="1969">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="-9" y="480" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Igrave" xMin="86" yMin="0" xMax="627" yMax="1957">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
      <component glyphName="grave" x="-14" y="480" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="J" xMin="102" yMin="-238" xMax="641" yMax="1516">
      <contour>
        <pt x="150" y="1516" on="1"/>
        <pt x="641" y="1516" on="1"/>
        <pt x="641" y="1343" on="1"/>
        <pt x="514" y="1343" on="1"/>
        <pt x="514" y="172" on="1"/>
        <pt x="514" y="150" on="0"/>
        <pt x="493" y="91" on="0"/>
        <pt x="460" y="25" on="0"/>
        <pt x="416" y="-44" on="0"/>
        <pt x="394" y="-77" on="1"/>
        <pt x="341" y="-154" on="0"/>
        <pt x="274" y="-238" on="1"/>
        <pt x="102" y="-223" on="1"/>
        <pt x="161" y="-133" on="0"/>
        <pt x="208" y="-51" on="1"/>
        <pt x="228" y="-16" on="0"/>
        <pt x="266" y="57" on="0"/>
        <pt x="296" y="125" on="0"/>
        <pt x="315" y="184" on="0"/>
        <pt x="315" y="205" on="1"/>
        <pt x="315" y="1343" on="1"/>
        <pt x="150" y="1343" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 15 values pushed */
          23 2 78 4 68 0 78 20 22 11 20 2 80 0 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[01110]	/* MoveIndirectRelPt */
          MDRP[01110]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="K" xMin="143" yMin="0" xMax="1495" yMax="1516">
      <contour>
        <pt x="1147" y="1343" on="1"/>
        <pt x="1147" y="1516" on="1"/>
        <pt x="1495" y="1516" on="1"/>
        <pt x="1495" y="1343" on="1"/>
        <pt x="1376" y="1343" on="1"/>
        <pt x="712" y="784" on="1"/>
        <pt x="1333" y="172" on="1"/>
        <pt x="1495" y="172" on="1"/>
        <pt x="1495" y="0" on="1"/>
        <pt x="1087" y="0" on="1"/>
        <pt x="1087" y="172" on="1"/>
        <pt x="485" y="774" on="1"/>
      </contour>
      <contour>
        <pt x="145" y="1516" on="1"/>
        <pt x="637" y="1516" on="1"/>
        <pt x="637" y="1343" on="1"/>
        <pt x="483" y="1343" on="1"/>
        <pt x="483" y="172" on="1"/>
        <pt x="635" y="172" on="1"/>
        <pt x="635" y="0" on="1"/>
        <pt x="143" y="0" on="1"/>
        <pt x="143" y="172" on="1"/>
        <pt x="287" y="172" on="1"/>
        <pt x="287" y="1343" on="1"/>
        <pt x="145" y="1343" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 71 values pushed */
          125 10 1 114 10 1 2 7 4 11 10 11 0 10 76 6 5 20 6 5 10 6 11 0 4
          5 11 5 0 77 4 5 20 4 5 0 4 6 6 4 25 20 23 78 21 14 17 78 15 68
          21 24 5 17 21 80 19 8 14 3 22 80 12 2 9 8 6 5 4 1 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          RTHG[ ]	/* RoundToHalfGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11100]	/* MoveDirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[01100]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[0]	/* SetFVectorToAxis */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[0]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[0]	/* SetFVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          CALL[ ]	/* CallFunction */
          SFVTL[0]	/* SetFVectorToLine */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="L" xMin="143" yMin="0" xMax="1286" yMax="1516">
      <contour>
        <pt x="143" y="1516" on="1"/>
        <pt x="635" y="1516" on="1"/>
        <pt x="635" y="1343" on="1"/>
        <pt x="483" y="1343" on="1"/>
        <pt x="483" y="172" on="1"/>
        <pt x="1006" y="172" on="1"/>
        <pt x="1022" y="172" on="0"/>
        <pt x="1054" y="187" on="0"/>
        <pt x="1080" y="211" on="0"/>
        <pt x="1096" y="242" on="0"/>
        <pt x="1096" y="258" on="1"/>
        <pt x="1096" y="449" on="1"/>
        <pt x="1286" y="449" on="1"/>
        <pt x="1286" y="0" on="1"/>
        <pt x="143" y="0" on="1"/>
        <pt x="143" y="172" on="1"/>
        <pt x="287" y="172" on="1"/>
        <pt x="287" y="1343" on="1"/>
        <pt x="143" y="1343" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 24 values pushed */
          10 68 12 20 15 18 78 16 1 78 3 68 16 19 15 4 72 14 8 2 17 80 0 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11100]	/* MoveDirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="M" xMin="143" yMin="0" xMax="2046" yMax="1516">
      <contour>
        <pt x="143" y="172" on="1"/>
        <pt x="287" y="172" on="1"/>
        <pt x="287" y="1325" on="1"/>
        <pt x="143" y="1325" on="1"/>
        <pt x="143" y="1516" on="1"/>
        <pt x="623" y="1516" on="1"/>
        <pt x="1104" y="207" on="1"/>
        <pt x="1591" y="1516" on="1"/>
        <pt x="2046" y="1516" on="1"/>
        <pt x="2046" y="1325" on="1"/>
        <pt x="1903" y="1325" on="1"/>
        <pt x="1903" y="172" on="1"/>
        <pt x="2046" y="172" on="1"/>
        <pt x="2046" y="0" on="1"/>
        <pt x="1554" y="0" on="1"/>
        <pt x="1554" y="172" on="1"/>
        <pt x="1716" y="172" on="1"/>
        <pt x="1716" y="1336" on="1"/>
        <pt x="1186" y="0" on="1"/>
        <pt x="1016" y="0" on="1"/>
        <pt x="479" y="1339" on="1"/>
        <pt x="479" y="172" on="1"/>
        <pt x="635" y="172" on="1"/>
        <pt x="635" y="0" on="1"/>
        <pt x="143" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHW[ ]	/* 2 values pushed */
          19 -24
          NPUSHB[ ]	/* 14 values pushed */
          16 0 77 18 16 16 0 77 20 16 16 0 77 6
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 67 values pushed */
          16 0 77 18 17 7 6 18 6 7 77 17 18 20 17 17 18 19 5 6 5 76 20 19 20
          20 20 19 6 20 17 68 13 11 26 24 78 1 68 20 0 22 80 24 8 19 8 15 12 80
          6 4 14 8 17 17 9 80 5 7 2 20 20 2 80 4 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11100]	/* MoveDirectRelPt */
          MDRP[01101]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SRP0[ ]	/* SetRefPoint0 */
          CALL[ ]	/* CallFunction */
          SDPVTL[1]	/* SetDualPVectorToLine */
          RDTG[ ]	/* RoundDownToGrid */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="N" xMin="143" yMin="0" xMax="1573" yMax="1518">
      <contour>
        <pt x="1081" y="1516" on="1"/>
        <pt x="1573" y="1516" on="1"/>
        <pt x="1573" y="1343" on="1"/>
        <pt x="1444" y="1343" on="1"/>
        <pt x="1444" y="0" on="1"/>
        <pt x="1188" y="0" on="1"/>
        <pt x="483" y="1257" on="1"/>
        <pt x="483" y="172" on="1"/>
        <pt x="639" y="172" on="1"/>
        <pt x="639" y="0" on="1"/>
        <pt x="147" y="0" on="1"/>
        <pt x="147" y="172" on="1"/>
        <pt x="287" y="172" on="1"/>
        <pt x="287" y="1343" on="1"/>
        <pt x="143" y="1343" on="1"/>
        <pt x="143" y="1518" on="1"/>
        <pt x="551" y="1518" on="1"/>
        <pt x="1243" y="273" on="1"/>
        <pt x="1251" y="321" on="1"/>
        <pt x="1251" y="1343" on="1"/>
        <pt x="1081" y="1343" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 61 values pushed */
          16 32 12 1 77 14 11 78 13 17 16 6 5 17 5 16 77 6 5 20 6 5 16 6 68
          13 21 22 1 78 3 68 59 18 1 18 123 5 1 61 5 1 2 5 13 80 15 2 11 8
          80 10 8 6 5 8 20 2 80 0 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDRP[01110]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Ntilde" xMin="143" yMin="0" xMax="1573" yMax="1895">
      <component glyphName="N" x="0" y="0" flags="0x204"/>
      <component glyphName="tilde" x="410" y="480" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="O" xMin="72" yMin="-30" xMax="1526" yMax="1546">
      <contour>
        <pt x="799" y="-30" on="1"/>
        <pt x="642" y="-30" on="0"/>
        <pt x="382" y="87" on="0"/>
        <pt x="178" y="303" on="0"/>
        <pt x="72" y="599" on="0"/>
        <pt x="72" y="758" on="1"/>
        <pt x="72" y="922" on="0"/>
        <pt x="179" y="1210" on="0"/>
        <pt x="372" y="1423" on="0"/>
        <pt x="639" y="1546" on="0"/>
        <pt x="799" y="1546" on="1"/>
        <pt x="960" y="1546" on="0"/>
        <pt x="1228" y="1423" on="0"/>
        <pt x="1420" y="1210" on="0"/>
        <pt x="1526" y="922" on="0"/>
        <pt x="1526" y="758" on="1"/>
        <pt x="1526" y="594" on="0"/>
        <pt x="1419" y="307" on="0"/>
        <pt x="1226" y="93" on="0"/>
        <pt x="959" y="-30" on="0"/>
      </contour>
      <contour>
        <pt x="799" y="156" on="1"/>
        <pt x="918" y="156" on="0"/>
        <pt x="1111" y="254" on="0"/>
        <pt x="1247" y="419" on="0"/>
        <pt x="1321" y="637" on="0"/>
        <pt x="1321" y="758" on="1"/>
        <pt x="1321" y="882" on="0"/>
        <pt x="1240" y="1113" on="0"/>
        <pt x="1095" y="1273" on="0"/>
        <pt x="903" y="1360" on="0"/>
        <pt x="799" y="1360" on="1"/>
        <pt x="680" y="1360" on="0"/>
        <pt x="486" y="1262" on="0"/>
        <pt x="350" y="1097" on="0"/>
        <pt x="276" y="878" on="0"/>
        <pt x="276" y="758" on="1"/>
        <pt x="276" y="618" on="0"/>
        <pt x="358" y="399" on="0"/>
        <pt x="493" y="254" on="0"/>
        <pt x="680" y="156" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 16 values pushed */
          19 32 18 1 77 18 32 18 1 77 17 16 14 1 77 17
          PUSHW[ ]	/* 1 value pushed */
          -32
          NPUSHB[ ]	/* 9 values pushed */
          16 0 77 13 16 14 1 77 13
          PUSHW[ ]	/* 1 value pushed */
          -16
          NPUSHB[ ]	/* 19 values pushed */
          16 0 77 12 16 18 1 77 11 64 18 1 77 11 8 14 1 77 9
          PUSHW[ ]	/* 1 value pushed */
          -48
          PUSHB[ ]	/* 4 values pushed */
          18 1 77 9
          PUSHW[ ]	/* 1 value pushed */
          -48
          PUSHB[ ]	/* 4 values pushed */
          14 1 77 8
          PUSHW[ ]	/* 1 value pushed */
          -16
          PUSHB[ ]	/* 4 values pushed */
          18 1 77 7
          PUSHW[ ]	/* 1 value pushed */
          -16
          NPUSHB[ ]	/* 9 values pushed */
          14 1 77 7 16 16 0 77 3
          PUSHW[ ]	/* 1 value pushed */
          -16
          NPUSHB[ ]	/* 9 values pushed */
          14 1 77 3 16 16 0 77 2
          PUSHW[ ]	/* 1 value pushed */
          -16
          PUSHB[ ]	/* 4 values pushed */
          18 1 77 1
          PUSHW[ ]	/* 1 value pushed */
          -32
          PUSHB[ ]	/* 7 values pushed */
          18 1 77 86 38 1 37
          PUSHW[ ]	/* 1 value pushed */
          -40
          NPUSHB[ ]	/* 26 values pushed */
          14 0 77 33 48 14 0 77 56 33 1 89 32 1 89 28 1 27 32 14 0 77 56 27 1
          23
          PUSHW[ ]	/* 1 value pushed */
          -48
          PUSHB[ ]	/* 4 values pushed */
          14 0 77 23
          PUSHW[ ]	/* 1 value pushed */
          -16
          NPUSHB[ ]	/* 10 values pushed */
          12 0 77 86 22 1 85 18 1 16
          PUSHW[ ]	/* 1 value pushed */
          -88
          PUSHB[ ]	/* 4 values pushed */
          18 1 77 16
          PUSHW[ ]	/* 1 value pushed */
          -120
          NPUSHB[ ]	/* 27 values pushed */
          14 73 14 64 18 1 77 14 120 14 73 90 12 1 90 8 1 6 64 18 1 77 95 6 1
          2 4
          PUSHW[ ]	/* 1 value pushed */
          -80
          PUSHB[ ]	/* 4 values pushed */
          18 1 77 4
          PUSHW[ ]	/* 1 value pushed */
          -120
          NPUSHB[ ]	/* 21 values pushed */
          14 73 82 2 1 25 70 15 41 35 70 5 40 30 74 10 3 20 74 0 9
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Oacute" xMin="72" yMin="-30" xMax="1526" yMax="1957">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="489" y="480" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Ocircumflex" xMin="72" yMin="-30" xMax="1526" yMax="1969">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="300" y="480" flags="0x4"/>
      <instructions><assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 0 40 43 5 15 80
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Odieresis" xMin="72" yMin="-30" xMax="1526" yMax="1969">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="404" y="480" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Ograve" xMin="72" yMin="-30" xMax="1526" yMax="1957">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="grave" x="399" y="480" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Oslash" xMin="67" yMin="-34" xMax="1542" yMax="1604">
      <contour>
        <pt x="263" y="218" on="1"/>
        <pt x="173" y="324" on="0"/>
        <pt x="76" y="600" on="0"/>
        <pt x="76" y="758" on="1"/>
        <pt x="76" y="867" on="0"/>
        <pt x="125" y="1069" on="0"/>
        <pt x="215" y="1245" on="0"/>
        <pt x="344" y="1388" on="0"/>
        <pt x="506" y="1490" on="0"/>
        <pt x="696" y="1546" on="0"/>
        <pt x="803" y="1546" on="1"/>
        <pt x="918" y="1546" on="0"/>
        <pt x="1118" y="1482" on="0"/>
        <pt x="1203" y="1425" on="1"/>
        <pt x="1343" y="1604" on="1"/>
        <pt x="1542" y="1604" on="1"/>
        <pt x="1322" y="1322" on="1"/>
        <pt x="1421" y="1214" on="0"/>
        <pt x="1530" y="926" on="0"/>
        <pt x="1530" y="758" on="1"/>
        <pt x="1530" y="649" on="0"/>
        <pt x="1481" y="447" on="0"/>
        <pt x="1391" y="272" on="0"/>
        <pt x="1262" y="128" on="0"/>
        <pt x="1100" y="25" on="0"/>
        <pt x="909" y="-31" on="0"/>
        <pt x="803" y="-31" on="1"/>
        <pt x="679" y="-31" on="0"/>
        <pt x="465" y="42" on="0"/>
        <pt x="377" y="109" on="1"/>
        <pt x="266" y="-34" on="1"/>
        <pt x="67" y="-34" on="1"/>
      </contour>
      <contour>
        <pt x="803" y="158" on="1"/>
        <pt x="922" y="158" on="0"/>
        <pt x="1114" y="255" on="0"/>
        <pt x="1250" y="420" on="0"/>
        <pt x="1323" y="637" on="0"/>
        <pt x="1323" y="758" on="1"/>
        <pt x="1323" y="871" on="0"/>
        <pt x="1257" y="1078" on="0"/>
        <pt x="1196" y="1159" on="1"/>
        <pt x="498" y="264" on="1"/>
        <pt x="560" y="213" on="0"/>
        <pt x="713" y="158" on="0"/>
      </contour>
      <contour>
        <pt x="281" y="652" on="0"/>
        <pt x="337" y="460" on="0"/>
        <pt x="391" y="381" on="1"/>
        <pt x="1083" y="1271" on="1"/>
        <pt x="1024" y="1313" on="0"/>
        <pt x="884" y="1360" on="0"/>
        <pt x="803" y="1360" on="1"/>
        <pt x="684" y="1360" on="0"/>
        <pt x="491" y="1262" on="0"/>
        <pt x="355" y="1097" on="0"/>
        <pt x="281" y="878" on="0"/>
        <pt x="281" y="758" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 38 values pushed */
          53 48 1 47 8 12 0 77 52 47 1 50 42 1 50 40 1 53 39 1 52 17 1 50 16
          1 52 13 1 52 12 1 53 16 12 0 77 45
          PUSHW[ ]	/* 1 value pushed */
          -72
          NPUSHB[ ]	/* 11 values pushed */
          12 0 77 51 40 1 3 52 39 1 35
          PUSHW[ ]	/* 1 value pushed */
          -24
          NPUSHB[ ]	/* 69 values pushed */
          12 0 77 50 17 1 2 48 16 1 32 26 50 10 26 10 3 37 70 19 57 55 70 3 56
          16 40 41 29 30 15 15 30 31 14 15 14 30 76 31 14 20 31 14 30 13 47 46 0 31
          14 52 31 1 31 63 14 1 14 32 74 31 26 9 50 74 14 10 3
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          RDTG[ ]	/* RoundDownToGrid */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Otilde" xMin="72" yMin="-30" xMax="1526" yMax="1895">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="tilde" x="351" y="480" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="P" xMin="143" yMin="0" xMax="1223" yMax="1516">
      <contour>
        <pt x="143" y="1516" on="1"/>
        <pt x="756" y="1516" on="1"/>
        <pt x="858" y="1516" on="0"/>
        <pt x="1029" y="1463" on="0"/>
        <pt x="1154" y="1360" on="0"/>
        <pt x="1223" y="1206" on="0"/>
        <pt x="1223" y="1106" on="1"/>
        <pt x="1223" y="1023" on="0"/>
        <pt x="1155" y="876" on="0"/>
        <pt x="1031" y="766" on="0"/>
        <pt x="858" y="702" on="0"/>
        <pt x="752" y="702" on="1"/>
        <pt x="483" y="702" on="1"/>
        <pt x="483" y="172" on="1"/>
        <pt x="635" y="172" on="1"/>
        <pt x="635" y="0" on="1"/>
        <pt x="143" y="0" on="1"/>
        <pt x="143" y="172" on="1"/>
        <pt x="287" y="172" on="1"/>
        <pt x="287" y="1343" on="1"/>
        <pt x="143" y="1343" on="1"/>
      </contour>
      <contour>
        <pt x="483" y="1343" on="1"/>
        <pt x="483" y="866" on="1"/>
        <pt x="756" y="866" on="1"/>
        <pt x="813" y="866" on="0"/>
        <pt x="908" y="897" on="0"/>
        <pt x="977" y="957" on="0"/>
        <pt x="1016" y="1047" on="0"/>
        <pt x="1016" y="1106" on="1"/>
        <pt x="1016" y="1218" on="0"/>
        <pt x="880" y="1343" on="0"/>
        <pt x="731" y="1343" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 33 values pushed */
          118 4 1 28 70 6 33 17 20 78 18 22 14 78 12 68 18 32 11 72 22 22 19 13 18
          80 16 8 21 19 80 0 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11100]	/* MoveDirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Q" xMin="72" yMin="-326" xMax="1526" yMax="1546">
      <contour>
        <pt x="698" y="-24" on="1"/>
        <pt x="558" y="-5" on="0"/>
        <pt x="327" y="131" on="0"/>
        <pt x="162" y="340" on="0"/>
        <pt x="72" y="608" on="0"/>
        <pt x="72" y="758" on="1"/>
        <pt x="72" y="922" on="0"/>
        <pt x="179" y="1210" on="0"/>
        <pt x="372" y="1423" on="0"/>
        <pt x="639" y="1546" on="0"/>
        <pt x="799" y="1546" on="1"/>
        <pt x="960" y="1546" on="0"/>
        <pt x="1228" y="1423" on="0"/>
        <pt x="1420" y="1210" on="0"/>
        <pt x="1526" y="922" on="0"/>
        <pt x="1526" y="758" on="1"/>
        <pt x="1526" y="606" on="0"/>
        <pt x="1433" y="337" on="0"/>
        <pt x="1265" y="128" on="0"/>
        <pt x="1031" y="-8" on="0"/>
        <pt x="890" y="-25" on="1"/>
        <pt x="955" y="-42" on="0"/>
        <pt x="1033" y="-88" on="0"/>
        <pt x="1151" y="-147" on="0"/>
        <pt x="1210" y="-147" on="1"/>
        <pt x="1267" y="-147" on="0"/>
        <pt x="1356" y="-90" on="0"/>
        <pt x="1370" y="-31" on="1"/>
        <pt x="1522" y="-100" on="1"/>
        <pt x="1510" y="-156" on="0"/>
        <pt x="1445" y="-241" on="0"/>
        <pt x="1358" y="-298" on="0"/>
        <pt x="1258" y="-326" on="0"/>
        <pt x="1210" y="-326" on="1"/>
        <pt x="1133" y="-326" on="0"/>
        <pt x="998" y="-270" on="0"/>
        <pt x="850" y="-190" on="0"/>
        <pt x="782" y="-190" on="1"/>
        <pt x="741" y="-190" on="0"/>
        <pt x="698" y="-203" on="1"/>
      </contour>
      <contour>
        <pt x="799" y="156" on="1"/>
        <pt x="918" y="156" on="0"/>
        <pt x="1111" y="254" on="0"/>
        <pt x="1247" y="419" on="0"/>
        <pt x="1321" y="637" on="0"/>
        <pt x="1321" y="758" on="1"/>
        <pt x="1321" y="882" on="0"/>
        <pt x="1240" y="1111" on="0"/>
        <pt x="1094" y="1273" on="0"/>
        <pt x="908" y="1360" on="0"/>
        <pt x="799" y="1360" on="1"/>
        <pt x="680" y="1360" on="0"/>
        <pt x="486" y="1262" on="0"/>
        <pt x="350" y="1097" on="0"/>
        <pt x="276" y="878" on="0"/>
        <pt x="276" y="758" on="1"/>
        <pt x="276" y="621" on="0"/>
        <pt x="357" y="401" on="0"/>
        <pt x="491" y="254" on="0"/>
        <pt x="690" y="156" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHW[ ]	/* 2 values pushed */
          17 -24
          PUSHB[ ]	/* 4 values pushed */
          16 0 77 13
          PUSHW[ ]	/* 1 value pushed */
          -16
          PUSHB[ ]	/* 4 values pushed */
          16 0 77 7
          PUSHW[ ]	/* 1 value pushed */
          -40
          NPUSHB[ ]	/* 49 values pushed */
          12 1 77 7 16 16 0 77 3 16 16 0 77 43 0 59 0 123 0 3 57 53 1 57 47
          1 54 43 1 61 30 1 45 70 15 61 55 70 5 60 24 74 33 14 16 4 14 6 4
          PUSHW[ ]	/* 1 value pushed */
          -80
          NPUSHB[ ]	/* 22 values pushed */
          16 1 77 6 80 16 1 77 6 5 4 3 0 50 74 10 3 40 74 20 0 9
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RDTG[ ]	/* RoundDownToGrid */
          MIAP[1]	/* MoveIndirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="R" xMin="143" yMin="0" xMax="1354" yMax="1516">
      <contour>
        <pt x="143" y="1516" on="1"/>
        <pt x="774" y="1516" on="1"/>
        <pt x="875" y="1516" on="0"/>
        <pt x="1046" y="1463" on="0"/>
        <pt x="1171" y="1360" on="0"/>
        <pt x="1241" y="1206" on="0"/>
        <pt x="1241" y="1106" on="1"/>
        <pt x="1241" y="1049" on="0"/>
        <pt x="1200" y="938" on="0"/>
        <pt x="1127" y="843" on="0"/>
        <pt x="1027" y="769" on="0"/>
        <pt x="968" y="749" on="1"/>
        <pt x="993" y="738" on="0"/>
        <pt x="1044" y="697" on="0"/>
        <pt x="1089" y="638" on="0"/>
        <pt x="1126" y="563" on="0"/>
        <pt x="1137" y="520" on="1"/>
        <pt x="1221" y="190" on="1"/>
        <pt x="1352" y="190" on="1"/>
        <pt x="1354" y="0" on="1"/>
        <pt x="1059" y="0" on="1"/>
        <pt x="946" y="461" on="1"/>
        <pt x="915" y="585" on="0"/>
        <pt x="788" y="702" on="0"/>
        <pt x="678" y="702" on="1"/>
        <pt x="483" y="702" on="1"/>
        <pt x="483" y="172" on="1"/>
        <pt x="635" y="172" on="1"/>
        <pt x="635" y="0" on="1"/>
        <pt x="143" y="0" on="1"/>
        <pt x="143" y="172" on="1"/>
        <pt x="287" y="172" on="1"/>
        <pt x="287" y="1343" on="1"/>
        <pt x="143" y="1343" on="1"/>
      </contour>
      <contour>
        <pt x="483" y="1343" on="1"/>
        <pt x="483" y="866" on="1"/>
        <pt x="774" y="866" on="1"/>
        <pt x="831" y="866" on="0"/>
        <pt x="926" y="896" on="0"/>
        <pt x="995" y="956" on="0"/>
        <pt x="1034" y="1045" on="0"/>
        <pt x="1034" y="1104" on="1"/>
        <pt x="1034" y="1217" on="0"/>
        <pt x="898" y="1343" on="0"/>
        <pt x="750" y="1343" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 65 values pushed */
          63 45 1 125 23 1 59 21 123 21 2 58 16 1 117 8 1 117 4 1 116 3 1 20 70
          17 17 41 70 11 48 6 1 6 46 35 27 78 25 68 30 0 78 32 45 11 24 73 35 35
          34 30 27 80 29 8 18 80 20 8 32 34 80 0 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="S" xMin="80" yMin="-33" xMax="1165" yMax="1538">
      <contour>
        <pt x="920" y="1192" on="0"/>
        <pt x="856" y="1280" on="0"/>
        <pt x="779" y="1327" on="0"/>
        <pt x="687" y="1352" on="0"/>
        <pt x="641" y="1352" on="1"/>
        <pt x="565" y="1352" on="0"/>
        <pt x="451" y="1317" on="0"/>
        <pt x="376" y="1257" on="0"/>
        <pt x="338" y="1177" on="0"/>
        <pt x="338" y="1133" on="1"/>
        <pt x="338" y="1067" on="0"/>
        <pt x="385" y="986" on="0"/>
        <pt x="457" y="937" on="0"/>
        <pt x="544" y="909" on="0"/>
        <pt x="584" y="895" on="1"/>
        <pt x="786" y="829" on="1"/>
        <pt x="877" y="800" on="0"/>
        <pt x="1016" y="726" on="0"/>
        <pt x="1110" y="625" on="0"/>
        <pt x="1159" y="493" on="0"/>
        <pt x="1159" y="406" on="1"/>
        <pt x="1159" y="312" on="0"/>
        <pt x="1082" y="152" on="0"/>
        <pt x="944" y="34" on="0"/>
        <pt x="753" y="-33" on="0"/>
        <pt x="639" y="-33" on="1"/>
        <pt x="522" y="-33" on="0"/>
        <pt x="356" y="20" on="0"/>
        <pt x="243" y="109" on="0"/>
        <pt x="175" y="223" on="0"/>
        <pt x="156" y="283" on="1"/>
        <pt x="80" y="283" on="1"/>
        <pt x="80" y="455" on="1"/>
        <pt x="332" y="455" on="1"/>
        <pt x="332" y="344" on="0"/>
        <pt x="379" y="252" on="0"/>
        <pt x="463" y="191" on="0"/>
        <pt x="579" y="160" on="0"/>
        <pt x="649" y="160" on="1"/>
        <pt x="717" y="160" on="0"/>
        <pt x="826" y="192" on="0"/>
        <pt x="903" y="253" on="0"/>
        <pt x="944" y="340" on="0"/>
        <pt x="944" y="395" on="1"/>
        <pt x="944" y="456" on="0"/>
        <pt x="893" y="541" on="0"/>
        <pt x="813" y="601" on="0"/>
        <pt x="718" y="639" on="0"/>
        <pt x="674" y="653" on="1"/>
        <pt x="455" y="715" on="1"/>
        <pt x="383" y="737" on="0"/>
        <pt x="264" y="805" on="0"/>
        <pt x="179" y="903" on="0"/>
        <pt x="133" y="1034" on="0"/>
        <pt x="133" y="1120" on="1"/>
        <pt x="133" y="1207" on="0"/>
        <pt x="201" y="1359" on="0"/>
        <pt x="333" y="1473" on="0"/>
        <pt x="524" y="1538" on="0"/>
        <pt x="647" y="1538" on="1"/>
        <pt x="728" y="1538" on="0"/>
        <pt x="865" y="1500" on="0"/>
        <pt x="976" y="1431" on="0"/>
        <pt x="1061" y="1334" on="0"/>
        <pt x="1090" y="1276" on="1"/>
        <pt x="1165" y="1276" on="1"/>
        <pt x="1165" y="1104" on="1"/>
        <pt x="920" y="1104" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          52 32 12 0 77 35
          PUSHW[ ]	/* 1 value pushed */
          -16
          PUSHB[ ]	/* 4 values pushed */
          16 0 77 18
          PUSHW[ ]	/* 1 value pushed */
          -32
          PUSHB[ ]	/* 4 values pushed */
          12 0 77 12
          PUSHW[ ]	/* 1 value pushed */
          -32
          PUSHB[ ]	/* 4 values pushed */
          12 0 77 56
          PUSHW[ ]	/* 1 value pushed */
          -32
          NPUSHB[ ]	/* 29 values pushed */
          16 0 77 52 32 16 0 77 51 64 16 0 77 50 24 12 0 77 48 24 16 0 77 22 32
          16 0 77 18
          PUSHW[ ]	/* 1 value pushed */
          -32
          PUSHB[ ]	/* 4 values pushed */
          16 0 77 17
          PUSHW[ ]	/* 1 value pushed */
          -16
          PUSHB[ ]	/* 4 values pushed */
          16 0 77 16
          PUSHW[ ]	/* 1 value pushed */
          -24
          NPUSHB[ ]	/* 81 values pushed */
          12 0 77 11 24 16 0 77 66 64 70 67 67 23 24 20 25 25 59 59 62 54 20 1 32
          12 0 77 1 4 7 3 9 43 70 20 69 127 69 1 32 30 70 33 33 9 70 48 54 1
          54 68 65 80 67 31 80 33 48 67 1 112 33 1 67 33 67 33 59 25 15 49 38 4 74
          59 3 38 74 25 8
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MDRP[01001]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MDRP[01001]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Scaron" xMin="80" yMin="-33" xMax="1165" yMax="1968">
      <component glyphName="S" x="0" y="0" flags="0x204"/>
      <component glyphName="caron" x="123" y="480" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="T" xMin="41" yMin="0" xMax="1393" yMax="1516">
      <contour>
        <pt x="453" y="172" on="1"/>
        <pt x="592" y="172" on="1"/>
        <pt x="592" y="1352" on="1"/>
        <pt x="246" y="1352" on="1"/>
        <pt x="246" y="1116" on="1"/>
        <pt x="41" y="1116" on="1"/>
        <pt x="41" y="1516" on="1"/>
        <pt x="1393" y="1516" on="1"/>
        <pt x="1393" y="1116" on="1"/>
        <pt x="1188" y="1116" on="1"/>
        <pt x="1188" y="1352" on="1"/>
        <pt x="788" y="1352" on="1"/>
        <pt x="788" y="172" on="1"/>
        <pt x="944" y="172" on="1"/>
        <pt x="944" y="0" on="1"/>
        <pt x="453" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 41 values pushed */
          13 78 11 68 15 78 1 1 3 10 68 96 8 112 8 2 8 17 79 17 191 17 2 3 68
          5 16 13 1 80 15 8 11 9 80 4 80 2 72 6 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[01110]	/* MoveIndirectRelPt */
          MIRP[01100]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          RUTG[ ]	/* RoundUpToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[01110]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Thorn" xMin="104" yMin="0" xMax="1235" yMax="1516">
      <contour>
        <pt x="106" y="1516" on="1"/>
        <pt x="598" y="1516" on="1"/>
        <pt x="598" y="1343" on="1"/>
        <pt x="440" y="1343" on="1"/>
        <pt x="440" y="1209" on="1"/>
        <pt x="768" y="1208" on="1"/>
        <pt x="869" y="1208" on="0"/>
        <pt x="1040" y="1156" on="0"/>
        <pt x="1165" y="1052" on="0"/>
        <pt x="1235" y="899" on="0"/>
        <pt x="1235" y="799" on="1"/>
        <pt x="1235" y="716" on="0"/>
        <pt x="1167" y="569" on="0"/>
        <pt x="1044" y="459" on="0"/>
        <pt x="870" y="395" on="0"/>
        <pt x="764" y="395" on="1"/>
        <pt x="440" y="395" on="1"/>
        <pt x="440" y="172" on="1"/>
        <pt x="596" y="172" on="1"/>
        <pt x="596" y="0" on="1"/>
        <pt x="104" y="0" on="1"/>
        <pt x="104" y="172" on="1"/>
        <pt x="244" y="172" on="1"/>
        <pt x="244" y="1343" on="1"/>
        <pt x="106" y="1343" on="1"/>
      </contour>
      <contour>
        <pt x="440" y="1036" on="1"/>
        <pt x="440" y="559" on="1"/>
        <pt x="768" y="559" on="1"/>
        <pt x="825" y="559" on="0"/>
        <pt x="920" y="590" on="0"/>
        <pt x="989" y="650" on="0"/>
        <pt x="1028" y="740" on="0"/>
        <pt x="1028" y="799" on="1"/>
        <pt x="1028" y="891" on="0"/>
        <pt x="953" y="989" on="0"/>
        <pt x="842" y="1036" on="0"/>
        <pt x="743" y="1036" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 30 values pushed */
          118 7 1 32 70 10 38 26 16 68 21 78 23 37 26 72 15 22 18 80 20 8 25 72 5
          23 2 80 0 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[01110]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="U" xMin="113" yMin="-20" xMax="1546" yMax="1516">
      <contour>
        <pt x="113" y="1516" on="1"/>
        <pt x="604" y="1516" on="1"/>
        <pt x="604" y="1343" on="1"/>
        <pt x="449" y="1343" on="1"/>
        <pt x="449" y="637" on="1"/>
        <pt x="449" y="510" on="0"/>
        <pt x="506" y="331" on="0"/>
        <pt x="607" y="218" on="0"/>
        <pt x="746" y="166" on="0"/>
        <pt x="829" y="166" on="1"/>
        <pt x="915" y="166" on="0"/>
        <pt x="1059" y="212" on="0"/>
        <pt x="1162" y="321" on="0"/>
        <pt x="1219" y="502" on="0"/>
        <pt x="1219" y="637" on="1"/>
        <pt x="1219" y="1343" on="1"/>
        <pt x="1055" y="1343" on="1"/>
        <pt x="1055" y="1516" on="1"/>
        <pt x="1546" y="1516" on="1"/>
        <pt x="1546" y="1343" on="1"/>
        <pt x="1411" y="1343" on="1"/>
        <pt x="1411" y="659" on="1"/>
        <pt x="1411" y="495" on="0"/>
        <pt x="1320" y="241" on="0"/>
        <pt x="1162" y="69" on="0"/>
        <pt x="948" y="-20" on="0"/>
        <pt x="825" y="-20" on="1"/>
        <pt x="705" y="-20" on="0"/>
        <pt x="496" y="68" on="0"/>
        <pt x="341" y="238" on="0"/>
        <pt x="252" y="483" on="0"/>
        <pt x="252" y="641" on="1"/>
        <pt x="252" y="1343" on="1"/>
        <pt x="113" y="1343" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 33 values pushed */
          63 35 1 16 78 14 68 18 78 20 35 2 78 4 68 0 78 32 34 9 74 26 9 15 19
          80 17 2 32 2 80 0 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[01110]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[01110]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Uacute" xMin="113" yMin="-20" xMax="1546" yMax="1957">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="519" y="480" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Ucircumflex" xMin="113" yMin="-20" xMax="1546" yMax="1969">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="330" y="480" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Udieresis" xMin="113" yMin="-20" xMax="1546" yMax="1969">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="434" y="480" flags="0x4"/>
      <instructions><assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 0 34 64 0 18 80
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Ugrave" xMin="113" yMin="-20" xMax="1546" yMax="1957">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="grave" x="429" y="480" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="V" xMin="-10" yMin="0" xMax="1505" yMax="1516">
      <contour>
        <pt x="1013" y="1516" on="1"/>
        <pt x="1505" y="1516" on="1"/>
        <pt x="1505" y="1343" on="1"/>
        <pt x="1374" y="1343" on="1"/>
        <pt x="883" y="0" on="1"/>
        <pt x="608" y="0" on="1"/>
        <pt x="124" y="1343" on="1"/>
        <pt x="-10" y="1343" on="1"/>
        <pt x="-10" y="1516" on="1"/>
        <pt x="482" y="1516" on="1"/>
        <pt x="482" y="1343" on="1"/>
        <pt x="350" y="1343" on="1"/>
        <pt x="739" y="174" on="1"/>
        <pt x="1156" y="1343" on="1"/>
        <pt x="1013" y="1343" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 72 values pushed */
          215 12 1 214 5 1 214 4 1 0 0 13 4 13 12 13 76 3 4 20 3 4 1 48 3
          1 3 16 9 9 11 5 11 12 11 76 6 5 20 6 5 11 6 8 8 48 6 1 6 15
          52 12 148 12 2 12 12 12 16 6 80 8 2 4 5 8 3 3 13 80 0 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          CALL[ ]	/* CallFunction */
          SDPVTL[1]	/* SetDualPVectorToLine */
          RDTG[ ]	/* RoundDownToGrid */
          MDRP[00100]	/* MoveDirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11010]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          SDPVTL[1]	/* SetDualPVectorToLine */
          CALL[ ]	/* CallFunction */
          SDPVTL[1]	/* SetDualPVectorToLine */
          RDTG[ ]	/* RoundDownToGrid */
          MDRP[00100]	/* MoveDirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="W" xMin="10" yMin="0" xMax="2550" yMax="1516">
      <contour>
        <pt x="2058" y="1516" on="1"/>
        <pt x="2550" y="1516" on="1"/>
        <pt x="2550" y="1343" on="1"/>
        <pt x="2418" y="1343" on="1"/>
        <pt x="1985" y="0" on="1"/>
        <pt x="1679" y="0" on="1"/>
        <pt x="1268" y="1321" on="1"/>
        <pt x="889" y="0" on="1"/>
        <pt x="586" y="0" on="1"/>
        <pt x="144" y="1343" on="1"/>
        <pt x="10" y="1343" on="1"/>
        <pt x="10" y="1516" on="1"/>
        <pt x="502" y="1516" on="1"/>
        <pt x="502" y="1343" on="1"/>
        <pt x="370" y="1343" on="1"/>
        <pt x="737" y="178" on="1"/>
        <pt x="1124" y="1516" on="1"/>
        <pt x="1423" y="1516" on="1"/>
        <pt x="1835" y="178" on="1"/>
        <pt x="2209" y="1343" on="1"/>
        <pt x="2058" y="1343" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 85 values pushed */
          169 8 1 160 5 1 5 17 18 17 76 6 5 20 6 5 17 6 18 19 19 76 3 4 20
          3 3 4 16 7 6 7 76 15 16 20 15 16 7 15 14 14 76 9 8 20 9 8 14 9
          4 6 8 3 9 144 3 1 3 22 9 21 15 18 6 3 11 22 16 2 9 80 11 2 8
          8 5 8 4 8 3 19 80 0 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00110]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          CALL[ ]	/* CallFunction */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10100]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          CALL[ ]	/* CallFunction */
          SDPVTL[1]	/* SetDualPVectorToLine */
          RDTG[ ]	/* RoundDownToGrid */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          CALL[ ]	/* CallFunction */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          CALL[ ]	/* CallFunction */
          SDPVTL[1]	/* SetDualPVectorToLine */
          RDTG[ ]	/* RoundDownToGrid */
          MDRP[00100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="X" xMin="170" yMin="0" xMax="1442" yMax="1516">
      <contour>
        <pt x="950" y="1516" on="1"/>
        <pt x="1442" y="1516" on="1"/>
        <pt x="1442" y="1343" on="1"/>
        <pt x="1330" y="1343" on="1"/>
        <pt x="920" y="774" on="1"/>
        <pt x="1348" y="172" on="1"/>
        <pt x="1442" y="172" on="1"/>
        <pt x="1442" y="0" on="1"/>
        <pt x="950" y="0" on="1"/>
        <pt x="950" y="172" on="1"/>
        <pt x="1135" y="172" on="1"/>
        <pt x="811" y="623" on="1"/>
        <pt x="485" y="172" on="1"/>
        <pt x="662" y="172" on="1"/>
        <pt x="662" y="0" on="1"/>
        <pt x="170" y="0" on="1"/>
        <pt x="170" y="172" on="1"/>
        <pt x="269" y="172" on="1"/>
        <pt x="701" y="775" on="1"/>
        <pt x="293" y="1343" on="1"/>
        <pt x="170" y="1343" on="1"/>
        <pt x="170" y="1516" on="1"/>
        <pt x="662" y="1516" on="1"/>
        <pt x="662" y="1343" on="1"/>
        <pt x="516" y="1343" on="1"/>
        <pt x="811" y="928" on="1"/>
        <pt x="1109" y="1343" on="1"/>
        <pt x="950" y="1343" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          63 28 1 14
          PUSHW[ ]	/* 1 value pushed */
          -56
          NPUSHB[ ]	/* 56 values pushed */
          12 0 77 14 78 12 0 40 12 0 77 0 78 26 25 5 24 17 26 18 17 11 10 19 12
          3 4 12 3 5 24 12 26 17 26 76 3 12 20 3 3 12 1 1 3 3 5 8 48 12
          0 77 8 78 10 22
          PUSHW[ ]	/* 1 value pushed */
          -40
          NPUSHB[ ]	/* 20 values pushed */
          12 0 77 22 78 24 10 24 5 24 76 19 10 20 19 19 10 7 7 5
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 43 values pushed */
          12 0 77 112 5 1 5 29 15 15 17 17 21 21 112 19 1 19 28 24 24 19 80 21 2
          12 12 17 80 15 8 10 10 5 80 8 8 26 26 3 80 0 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SRP0[ ]	/* SetRefPoint0 */
          CALL[ ]	/* CallFunction */
          SDPVTL[1]	/* SetDualPVectorToLine */
          RDTG[ ]	/* RoundDownToGrid */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SRP0[ ]	/* SetRefPoint0 */
          CALL[ ]	/* CallFunction */
          SDPVTL[1]	/* SetDualPVectorToLine */
          RDTG[ ]	/* RoundDownToGrid */
          MDRP[00100]	/* MoveDirectRelPt */
          ISECT[ ]	/* MovePtToIntersect */
          ISECT[ ]	/* MovePtToIntersect */
          SRP0[ ]	/* SetRefPoint0 */
          SFVTPV[ ]	/* SetFVectorToPVector */
          MDRP[00100]	/* MoveDirectRelPt */
          ISECT[ ]	/* MovePtToIntersect */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Y" xMin="51" yMin="0" xMax="1323" yMax="1516">
      <contour>
        <pt x="51" y="1516" on="1"/>
        <pt x="543" y="1516" on="1"/>
        <pt x="543" y="1343" on="1"/>
        <pt x="399" y="1343" on="1"/>
        <pt x="684" y="856" on="1"/>
        <pt x="989" y="1343" on="1"/>
        <pt x="831" y="1343" on="1"/>
        <pt x="831" y="1516" on="1"/>
        <pt x="1323" y="1516" on="1"/>
        <pt x="1323" y="1343" on="1"/>
        <pt x="1194" y="1343" on="1"/>
        <pt x="768" y="697" on="1"/>
        <pt x="768" y="172" on="1"/>
        <pt x="924" y="172" on="1"/>
        <pt x="924" y="0" on="1"/>
        <pt x="432" y="0" on="1"/>
        <pt x="432" y="172" on="1"/>
        <pt x="571" y="172" on="1"/>
        <pt x="571" y="702" on="1"/>
        <pt x="169" y="1343" on="1"/>
        <pt x="51" y="1343" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 100 values pushed */
          122 18 1 53 18 1 3 54 11 1 121 4 1 54 4 1 54 18 118 18 2 114 11 1 2
          59 11 1 112 4 1 22 8 8 11 10 5 4 11 4 10 77 5 4 20 5 4 10 48 5
          1 5 14 78 12 68 17 18 19 3 4 18 4 19 76 3 4 20 3 4 19 3 15 78 127
          17 1 17 17 4 3 21 127 0 1 0 17 13 80 15 8 5 80 7 2 4 3 80 0 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDRP[00110]	/* MoveDirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[0]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[0]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDRP[00110]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Yacute" xMin="51" yMin="0" xMax="1323" yMax="1957">
      <component glyphName="Y" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="377" y="480" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Ydieresis" xMin="51" yMin="0" xMax="1323" yMax="1969">
      <component glyphName="Y" x="0" y="0" flags="0x204"/>
      <component glyphName="dotaccent" x="164" y="437" flags="0x4"/>
      <component glyphName="dotaccent" x="623" y="437" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Z" xMin="51" yMin="0" xMax="1163" yMax="1516">
      <contour>
        <pt x="1163" y="1292" on="1"/>
        <pt x="250" y="172" on="1"/>
        <pt x="961" y="172" on="1"/>
        <pt x="961" y="424" on="1"/>
        <pt x="1157" y="424" on="1"/>
        <pt x="1157" y="0" on="1"/>
        <pt x="51" y="0" on="1"/>
        <pt x="51" y="227" on="1"/>
        <pt x="951" y="1343" on="1"/>
        <pt x="264" y="1343" on="1"/>
        <pt x="264" y="1087" on="1"/>
        <pt x="68" y="1087" on="1"/>
        <pt x="68" y="1516" on="1"/>
        <pt x="1163" y="1516" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 41 values pushed */
          63 14 1 15 4 68 2 2 8 1 0 0 76 8 7 20 8 7 0 127 8 1 8 10 68
          12 12 14 7 8 8 9 73 12 2 7 1 2 73 6 8
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MDRP[01110]	/* MoveDirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[0]	/* SetFVectorToAxis */
          CALL[ ]	/* CallFunction */
          SFVTCA[1]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          MDRP[01110]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Zcaron" xMin="51" yMin="0" xMax="1163" yMax="1968">
      <component glyphName="Z" x="0" y="0" flags="0x204"/>
      <component glyphName="caron" x="108" y="480" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="a" xMin="70" yMin="-29" xMax="1010" yMax="1059">
      <contour>
        <pt x="709" y="96" on="1"/>
        <pt x="650" y="41" on="0"/>
        <pt x="507" y="-29" on="0"/>
        <pt x="416" y="-29" on="1"/>
        <pt x="340" y="-29" on="0"/>
        <pt x="213" y="19" on="0"/>
        <pt x="121" y="102" on="0"/>
        <pt x="70" y="212" on="0"/>
        <pt x="70" y="274" on="1"/>
        <pt x="70" y="340" on="0"/>
        <pt x="109" y="442" on="0"/>
        <pt x="174" y="517" on="0"/>
        <pt x="261" y="568" on="0"/>
        <pt x="356" y="599" on="0"/>
        <pt x="455" y="612" on="0"/>
        <pt x="500" y="612" on="1"/>
        <pt x="572" y="612" on="0"/>
        <pt x="670" y="603" on="0"/>
        <pt x="710" y="595" on="1"/>
        <pt x="711" y="680" on="1"/>
        <pt x="711" y="735" on="0"/>
        <pt x="679" y="816" on="0"/>
        <pt x="621" y="869" on="0"/>
        <pt x="540" y="895" on="0"/>
        <pt x="490" y="895" on="1"/>
        <pt x="443" y="895" on="0"/>
        <pt x="357" y="882" on="0"/>
        <pt x="282" y="861" on="0"/>
        <pt x="219" y="834" on="0"/>
        <pt x="197" y="819" on="1"/>
        <pt x="136" y="948" on="1"/>
        <pt x="173" y="972" on="0"/>
        <pt x="261" y="1013" on="0"/>
        <pt x="358" y="1042" on="0"/>
        <pt x="459" y="1059" on="0"/>
        <pt x="508" y="1059" on="1"/>
        <pt x="598" y="1059" on="0"/>
        <pt x="742" y="1016" on="0"/>
        <pt x="842" y="926" on="0"/>
        <pt x="896" y="787" on="0"/>
        <pt x="896" y="690" on="1"/>
        <pt x="895" y="172" on="1"/>
        <pt x="1010" y="172" on="1"/>
        <pt x="1010" y="0" on="1"/>
        <pt x="709" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="457" y="127" on="1"/>
        <pt x="494" y="127" on="0"/>
        <pt x="568" y="145" on="0"/>
        <pt x="634" y="176" on="0"/>
        <pt x="690" y="217" on="0"/>
        <pt x="709" y="239" on="1"/>
        <pt x="710" y="473" on="1"/>
        <pt x="494" y="473" on="1"/>
        <pt x="440" y="473" on="0"/>
        <pt x="351" y="449" on="0"/>
        <pt x="286" y="403" on="0"/>
        <pt x="250" y="335" on="0"/>
        <pt x="250" y="291" on="1"/>
        <pt x="250" y="250" on="0"/>
        <pt x="280" y="189" on="0"/>
        <pt x="335" y="148" on="0"/>
        <pt x="411" y="127" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 77 values pushed */
          59 6 1 29 32 16 0 77 21 32 16 0 77 1 48 19 0 77 51 44 18 81 43 78 48
          41 64 41 2 41 63 31 63 1 57 83 8 30 30 48 8 64 8 2 8 62 41 80 43 10
          32 30 123 30 1 13 30 1 30 35 3 15 85 63 52 1 52 52 45 24 87 35 7 45 87
          3 11
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          RDTG[ ]	/* RoundDownToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          RTG[ ]	/* RoundToGrid */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11100]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="aacute" xMin="70" yMin="-29" xMax="1010" yMax="1477">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="211" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="acircumflex" xMin="70" yMin="-29" xMax="1010" yMax="1489">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="22" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="acute" xMin="84" yMin="1178" xMax="537" yMax="1477">
      <contour>
        <pt x="297" y="1477" on="1"/>
        <pt x="537" y="1477" on="1"/>
        <pt x="537" y="1460" on="1"/>
        <pt x="238" y="1178" on="1"/>
        <pt x="84" y="1178" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 161 4 5 4 0 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="adieresis" xMin="70" yMin="-29" xMax="1010" yMax="1489">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="82" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="ae" xMin="51" yMin="-29" xMax="1620" yMax="1063">
      <contour>
        <pt x="481" y="606" on="1"/>
        <pt x="613" y="606" on="0"/>
        <pt x="693" y="585" on="1"/>
        <pt x="693" y="588" on="1"/>
        <pt x="694" y="680" on="1"/>
        <pt x="695" y="735" on="0"/>
        <pt x="663" y="816" on="0"/>
        <pt x="604" y="869" on="0"/>
        <pt x="521" y="895" on="0"/>
        <pt x="471" y="895" on="1"/>
        <pt x="424" y="895" on="0"/>
        <pt x="338" y="882" on="0"/>
        <pt x="263" y="861" on="0"/>
        <pt x="200" y="834" on="0"/>
        <pt x="178" y="819" on="1"/>
        <pt x="117" y="948" on="1"/>
        <pt x="154" y="972" on="0"/>
        <pt x="242" y="1013" on="0"/>
        <pt x="339" y="1042" on="0"/>
        <pt x="440" y="1059" on="0"/>
        <pt x="489" y="1059" on="1"/>
        <pt x="604" y="1059" on="0"/>
        <pt x="773" y="988" on="0"/>
        <pt x="821" y="913" on="1"/>
        <pt x="883" y="983" on="0"/>
        <pt x="1060" y="1063" on="0"/>
        <pt x="1178" y="1063" on="1"/>
        <pt x="1295" y="1063" on="0"/>
        <pt x="1452" y="992" on="0"/>
        <pt x="1551" y="875" on="0"/>
        <pt x="1602" y="725" on="0"/>
        <pt x="1612" y="647" on="1"/>
        <pt x="1617" y="609" on="0"/>
        <pt x="1620" y="531" on="0"/>
        <pt x="1620" y="494" on="1"/>
        <pt x="874" y="494" on="1"/>
        <pt x="874" y="440" on="0"/>
        <pt x="892" y="344" on="0"/>
        <pt x="936" y="244" on="0"/>
        <pt x="1099" y="143" on="0"/>
        <pt x="1202" y="143" on="1"/>
        <pt x="1283" y="143" on="0"/>
        <pt x="1436" y="188" on="0"/>
        <pt x="1520" y="236" on="1"/>
        <pt x="1595" y="109" on="1"/>
        <pt x="1493" y="39" on="0"/>
        <pt x="1287" y="-29" on="0"/>
        <pt x="1176" y="-29" on="1"/>
        <pt x="1058" y="-29" on="0"/>
        <pt x="866" y="56" on="0"/>
        <pt x="800" y="142" on="1"/>
        <pt x="768" y="103" on="0"/>
        <pt x="683" y="39" on="0"/>
        <pt x="583" y="-5" on="0"/>
        <pt x="473" y="-29" on="0"/>
        <pt x="418" y="-29" on="1"/>
        <pt x="334" y="-29" on="0"/>
        <pt x="199" y="19" on="0"/>
        <pt x="103" y="102" on="0"/>
        <pt x="51" y="212" on="0"/>
        <pt x="51" y="274" on="1"/>
        <pt x="51" y="339" on="0"/>
        <pt x="90" y="439" on="0"/>
        <pt x="155" y="513" on="0"/>
        <pt x="242" y="563" on="0"/>
        <pt x="337" y="593" on="0"/>
        <pt x="436" y="606" on="0"/>
      </contour>
      <contour>
        <pt x="438" y="127" on="1"/>
        <pt x="535" y="127" on="0"/>
        <pt x="684" y="200" on="0"/>
        <pt x="735" y="260" on="1"/>
        <pt x="697" y="354" on="0"/>
        <pt x="691" y="477" on="1"/>
        <pt x="475" y="477" on="1"/>
        <pt x="421" y="477" on="0"/>
        <pt x="332" y="453" on="0"/>
        <pt x="267" y="407" on="0"/>
        <pt x="231" y="339" on="0"/>
        <pt x="231" y="295" on="1"/>
        <pt x="231" y="253" on="0"/>
        <pt x="261" y="190" on="0"/>
        <pt x="316" y="148" on="0"/>
        <pt x="392" y="127" on="0"/>
      </contour>
      <contour>
        <pt x="1165" y="907" on="1"/>
        <pt x="1100" y="907" on="0"/>
        <pt x="1003" y="870" on="0"/>
        <pt x="935" y="801" on="0"/>
        <pt x="894" y="701" on="0"/>
        <pt x="884" y="639" on="1"/>
        <pt x="1421" y="639" on="1"/>
        <pt x="1417" y="697" on="0"/>
        <pt x="1388" y="795" on="0"/>
        <pt x="1328" y="867" on="0"/>
        <pt x="1234" y="907" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 65 values pushed */
          23 88 35 83 72 2 72 120 43 1 43 72 60 89 83 34 95 78 83 15 127 60 1 60 94
          44 43 52 43 1 43 95 35 35 72 85 88 0 0 88 88 20 67 87 55 11 24 28 117 28
          1 28 26 40 87 47 11 83 87 26 7 9 87 20 7
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="agrave" xMin="70" yMin="-29" xMax="1010" yMax="1477">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="grave" x="121" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="ampersand" xMin="143" yMin="-14" xMax="1427" yMax="1546">
      <contour>
        <pt x="1288" y="-6" on="1"/>
        <pt x="1052" y="222" on="1"/>
        <pt x="1010" y="170" on="0"/>
        <pt x="912" y="84" on="0"/>
        <pt x="801" y="21" on="0"/>
        <pt x="676" y="-14" on="0"/>
        <pt x="606" y="-14" on="1"/>
        <pt x="509" y="-14" on="0"/>
        <pt x="340" y="54" on="0"/>
        <pt x="215" y="172" on="0"/>
        <pt x="143" y="333" on="0"/>
        <pt x="143" y="426" on="1"/>
        <pt x="143" y="487" on="0"/>
        <pt x="180" y="602" on="0"/>
        <pt x="245" y="702" on="0"/>
        <pt x="332" y="782" on="0"/>
        <pt x="424" y="829" on="1"/>
        <pt x="358" y="893" on="1"/>
        <pt x="332" y="917" on="0"/>
        <pt x="283" y="979" on="0"/>
        <pt x="246" y="1051" on="0"/>
        <pt x="223" y="1129" on="0"/>
        <pt x="223" y="1167" on="1"/>
        <pt x="223" y="1247" on="0"/>
        <pt x="285" y="1385" on="0"/>
        <pt x="392" y="1487" on="0"/>
        <pt x="536" y="1546" on="0"/>
        <pt x="618" y="1546" on="1"/>
        <pt x="705" y="1546" on="0"/>
        <pt x="854" y="1484" on="0"/>
        <pt x="962" y="1380" on="0"/>
        <pt x="1024" y="1242" on="0"/>
        <pt x="1024" y="1167" on="1"/>
        <pt x="1024" y="1107" on="0"/>
        <pt x="1000" y="1016" on="0"/>
        <pt x="956" y="944" on="0"/>
        <pt x="895" y="885" on="0"/>
        <pt x="826" y="835" on="0"/>
        <pt x="754" y="794" on="0"/>
        <pt x="716" y="775" on="1"/>
        <pt x="1022" y="490" on="1"/>
        <pt x="1054" y="563" on="0"/>
        <pt x="1093" y="706" on="0"/>
        <pt x="1104" y="764" on="1"/>
        <pt x="1292" y="764" on="1"/>
        <pt x="1275" y="670" on="0"/>
        <pt x="1205" y="468" on="0"/>
        <pt x="1151" y="371" on="1"/>
        <pt x="1427" y="115" on="1"/>
      </contour>
      <contour>
        <pt x="473" y="666" on="1"/>
        <pt x="439" y="652" on="0"/>
        <pt x="384" y="603" on="0"/>
        <pt x="344" y="540" on="0"/>
        <pt x="322" y="467" on="0"/>
        <pt x="322" y="430" on="1"/>
        <pt x="322" y="372" on="0"/>
        <pt x="367" y="273" on="0"/>
        <pt x="446" y="201" on="0"/>
        <pt x="553" y="160" on="0"/>
        <pt x="614" y="160" on="1"/>
        <pt x="666" y="160" on="0"/>
        <pt x="758" y="186" on="0"/>
        <pt x="838" y="233" on="0"/>
        <pt x="905" y="298" on="0"/>
        <pt x="934" y="336" on="1"/>
        <pt x="554" y="703" on="1"/>
      </contour>
      <contour>
        <pt x="784" y="1026" on="1"/>
        <pt x="810" y="1054" on="0"/>
        <pt x="846" y="1127" on="0"/>
        <pt x="846" y="1167" on="1"/>
        <pt x="846" y="1209" on="0"/>
        <pt x="809" y="1287" on="0"/>
        <pt x="747" y="1347" on="0"/>
        <pt x="664" y="1382" on="0"/>
        <pt x="618" y="1382" on="1"/>
        <pt x="568" y="1382" on="0"/>
        <pt x="487" y="1349" on="0"/>
        <pt x="429" y="1291" on="0"/>
        <pt x="397" y="1214" on="0"/>
        <pt x="397" y="1169" on="1"/>
        <pt x="397" y="1127" on="0"/>
        <pt x="438" y="1034" on="0"/>
        <pt x="492" y="983" on="1"/>
        <pt x="581" y="900" on="1"/>
        <pt x="640" y="926" on="0"/>
        <pt x="744" y="986" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 92 values pushed */
          124 84 1 116 82 1 50 82 1 118 76 1 123 72 1 51 47 1 112 46 1 50 46 1 117
          34 1 115 3 1 116 2 1 53 47 1 69 70 32 64 1 0 65 0 1 32 87 79 70 22
          22 54 70 11 86 40 47 48 39 48 116 39 1 39 68 123 65 1 65 48 68 0 48 8 39
          16 16 83 80 65 65 6 74 74 27 3 59 74 6 9 0 8
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          RTHG[ ]	/* RoundToHalfGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          RDTG[ ]	/* RoundDownToGrid */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          RDTG[ ]	/* RoundDownToGrid */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[0]	/* SetFVectorToAxis */
          MDRP[00100]	/* MoveDirectRelPt */
          SFVTPV[ ]	/* SetFVectorToPVector */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="aring" xMin="70" yMin="-29" xMax="1010" yMax="1689">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="ring" x="-88" y="221" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="asciicircum" xMin="156" yMin="723" xMax="1075" yMax="1513">
      <contour>
        <pt x="672" y="1513" on="1"/>
        <pt x="1075" y="723" on="1"/>
        <pt x="932" y="723" on="1"/>
        <pt x="617" y="1349" on="1"/>
        <pt x="297" y="723" on="1"/>
        <pt x="156" y="723" on="1"/>
        <pt x="559" y="1513" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 45 values pushed */
          166 0 1 0 1 2 3 0 3 1 77 2 3 20 2 3 1 2 166 3 1 4 3 6 5
          4 5 3 77 6 5 20 6 5 3 121 6 1 6 5 2 6 0 5 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="asciitilde" xMin="141" yMin="369" xMax="1087" yMax="668">
      <contour>
        <pt x="141" y="483" on="1"/>
        <pt x="186" y="567" on="0"/>
        <pt x="308" y="659" on="0"/>
        <pt x="397" y="659" on="1"/>
        <pt x="455" y="659" on="0"/>
        <pt x="578" y="614" on="0"/>
        <pt x="694" y="561" on="0"/>
        <pt x="796" y="516" on="0"/>
        <pt x="834" y="516" on="1"/>
        <pt x="877" y="516" on="0"/>
        <pt x="964" y="585" on="0"/>
        <pt x="1014" y="668" on="1"/>
        <pt x="1087" y="553" on="1"/>
        <pt x="1042" y="469" on="0"/>
        <pt x="921" y="377" on="0"/>
        <pt x="831" y="377" on="1"/>
        <pt x="792" y="377" on="0"/>
        <pt x="712" y="398" on="0"/>
        <pt x="631" y="430" on="0"/>
        <pt x="554" y="467" on="0"/>
        <pt x="483" y="499" on="0"/>
        <pt x="420" y="520" on="0"/>
        <pt x="395" y="520" on="1"/>
        <pt x="352" y="520" on="0"/>
        <pt x="265" y="452" on="0"/>
        <pt x="215" y="369" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 19 values pushed */
          53 13 1 57 1 1 12 27 48 0 1 0 26 8 74 15 22 74 3
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDRP[11101]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01110]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="asterisk" xMin="59" yMin="891" xMax="768" yMax="1546">
      <contour>
        <pt x="483" y="1295" on="1"/>
        <pt x="731" y="1376" on="1"/>
        <pt x="768" y="1257" on="1"/>
        <pt x="519" y="1177" on="1"/>
        <pt x="676" y="963" on="1"/>
        <pt x="567" y="891" on="1"/>
        <pt x="418" y="1097" on="1"/>
        <pt x="270" y="893" on="1"/>
        <pt x="162" y="963" on="1"/>
        <pt x="317" y="1175" on="1"/>
        <pt x="59" y="1257" on="1"/>
        <pt x="98" y="1382" on="1"/>
        <pt x="350" y="1300" on="1"/>
        <pt x="350" y="1546" on="1"/>
        <pt x="483" y="1546" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 34 values pushed */
          123 9 1 116 3 1 52 6 116 6 2 13 6 13 6 10 112 2 1 2 16 10 15 10 7
          2 5 112 13 1 13 0 7 5
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00110]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="at" xMin="145" yMin="-506" xMax="2146" yMax="1491">
      <contour>
        <pt x="1589" y="956" on="1"/>
        <pt x="1589" y="293" on="1"/>
        <pt x="1589" y="232" on="0"/>
        <pt x="1624" y="170" on="0"/>
        <pt x="1672" y="141" on="0"/>
        <pt x="1709" y="141" on="1"/>
        <pt x="1783" y="141" on="0"/>
        <pt x="1881" y="222" on="0"/>
        <pt x="1939" y="336" on="0"/>
        <pt x="1962" y="457" on="0"/>
        <pt x="1962" y="547" on="1"/>
        <pt x="1962" y="649" on="0"/>
        <pt x="1904" y="840" on="0"/>
        <pt x="1799" y="1009" on="0"/>
        <pt x="1651" y="1150" on="0"/>
        <pt x="1469" y="1251" on="0"/>
        <pt x="1259" y="1307" on="0"/>
        <pt x="1145" y="1307" on="1"/>
        <pt x="1032" y="1307" on="0"/>
        <pt x="823" y="1249" on="0"/>
        <pt x="642" y="1143" on="0"/>
        <pt x="493" y="995" on="0"/>
        <pt x="388" y="814" on="0"/>
        <pt x="330" y="606" on="0"/>
        <pt x="330" y="494" on="1"/>
        <pt x="330" y="381" on="0"/>
        <pt x="388" y="172" on="0"/>
        <pt x="493" y="-10" on="0"/>
        <pt x="642" y="-158" on="0"/>
        <pt x="823" y="-264" on="0"/>
        <pt x="1032" y="-322" on="0"/>
        <pt x="1145" y="-322" on="1"/>
        <pt x="1260" y="-322" on="0"/>
        <pt x="1474" y="-261" on="0"/>
        <pt x="1567" y="-205" on="1"/>
        <pt x="1661" y="-362" on="1"/>
        <pt x="1548" y="-431" on="0"/>
        <pt x="1287" y="-506" on="0"/>
        <pt x="1145" y="-506" on="1"/>
        <pt x="1007" y="-506" on="0"/>
        <pt x="751" y="-435" on="0"/>
        <pt x="529" y="-305" on="0"/>
        <pt x="346" y="-122" on="0"/>
        <pt x="216" y="100" on="0"/>
        <pt x="145" y="356" on="0"/>
        <pt x="145" y="494" on="1"/>
        <pt x="145" y="631" on="0"/>
        <pt x="216" y="886" on="0"/>
        <pt x="346" y="1108" on="0"/>
        <pt x="529" y="1290" on="0"/>
        <pt x="751" y="1420" on="0"/>
        <pt x="1007" y="1491" on="0"/>
        <pt x="1145" y="1491" on="1"/>
        <pt x="1285" y="1491" on="0"/>
        <pt x="1542" y="1422" on="0"/>
        <pt x="1764" y="1298" on="0"/>
        <pt x="1946" y="1124" on="0"/>
        <pt x="2075" y="914" on="0"/>
        <pt x="2146" y="675" on="0"/>
        <pt x="2146" y="547" on="1"/>
        <pt x="2146" y="479" on="0"/>
        <pt x="2120" y="341" on="0"/>
        <pt x="2068" y="215" on="0"/>
        <pt x="1993" y="105" on="0"/>
        <pt x="1894" y="24" on="0"/>
        <pt x="1774" y="-23" on="0"/>
        <pt x="1704" y="-23" on="1"/>
        <pt x="1612" y="-23" on="0"/>
        <pt x="1488" y="57" on="0"/>
        <pt x="1453" y="120" on="1"/>
        <pt x="1390" y="68" on="0"/>
        <pt x="1232" y="10" on="0"/>
        <pt x="1141" y="10" on="1"/>
        <pt x="1036" y="10" on="0"/>
        <pt x="861" y="83" on="0"/>
        <pt x="733" y="211" on="0"/>
        <pt x="662" y="381" on="0"/>
        <pt x="662" y="479" on="1"/>
        <pt x="662" y="576" on="0"/>
        <pt x="736" y="747" on="0"/>
        <pt x="865" y="875" on="0"/>
        <pt x="1040" y="950" on="0"/>
        <pt x="1141" y="950" on="1"/>
        <pt x="1214" y="950" on="0"/>
        <pt x="1348" y="910" on="0"/>
        <pt x="1405" y="873" on="1"/>
        <pt x="1405" y="956" on="1"/>
      </contour>
      <contour>
        <pt x="1141" y="195" on="1"/>
        <pt x="1235" y="195" on="0"/>
        <pt x="1371" y="282" on="0"/>
        <pt x="1405" y="351" on="1"/>
        <pt x="1405" y="604" on="1"/>
        <pt x="1388" y="639" on="0"/>
        <pt x="1335" y="699" on="0"/>
        <pt x="1267" y="742" on="0"/>
        <pt x="1186" y="766" on="0"/>
        <pt x="1141" y="766" on="1"/>
        <pt x="1077" y="766" on="0"/>
        <pt x="969" y="720" on="0"/>
        <pt x="890" y="642" on="0"/>
        <pt x="846" y="537" on="0"/>
        <pt x="846" y="479" on="1"/>
        <pt x="846" y="420" on="0"/>
        <pt x="888" y="317" on="0"/>
        <pt x="965" y="240" on="0"/>
        <pt x="1074" y="195" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 130 values pushed */
          94 72 15 73 116 70 1 121 33 1 117 28 1 119 27 1 118 21 1 117 20 1 121 14 1
          120 13 1 51 103 1 59 99 1 59 89 1 106 70 1 61 70 1 52 57 100 57 2 102 47
          1 106 43 1 72 38 38 82 52 52 59 45 86 69 90 81 0 10 70 59 107 101 83 192 77
          1 111 77 1 77 24 70 45 106 84 85 85 72 0 5 87 66 66 87 87 72 11 45 38 17
          74 52 2 31 74 38 14 35 174 34 1 111 34 1 49 34 1 34 82 82 96 87 192 0 1
          160 0 1 0 176
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          MIRP[01100]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MDRP[11110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="atilde" xMin="70" yMin="-29" xMax="1010" yMax="1415">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="tilde" x="73" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="b" xMin="57" yMin="-16" xMax="1161" yMax="1556">
      <contour>
        <pt x="57" y="1556" on="1"/>
        <pt x="393" y="1556" on="1"/>
        <pt x="393" y="950" on="1"/>
        <pt x="459" y="1001" on="0"/>
        <pt x="615" y="1061" on="0"/>
        <pt x="698" y="1061" on="1"/>
        <pt x="800" y="1061" on="0"/>
        <pt x="970" y="985" on="0"/>
        <pt x="1093" y="847" on="0"/>
        <pt x="1161" y="654" on="0"/>
        <pt x="1161" y="537" on="1"/>
        <pt x="1161" y="412" on="0"/>
        <pt x="1085" y="209" on="0"/>
        <pt x="950" y="63" on="0"/>
        <pt x="764" y="-16" on="0"/>
        <pt x="653" y="-16" on="1"/>
        <pt x="576" y="-16" on="0"/>
        <pt x="441" y="29" on="0"/>
        <pt x="393" y="65" on="1"/>
        <pt x="393" y="0" on="1"/>
        <pt x="207" y="0" on="1"/>
        <pt x="207" y="1384" on="1"/>
        <pt x="57" y="1384" on="1"/>
      </contour>
      <contour>
        <pt x="649" y="897" on="1"/>
        <pt x="576" y="897" on="0"/>
        <pt x="442" y="837" on="0"/>
        <pt x="393" y="786" on="1"/>
        <pt x="393" y="229" on="1"/>
        <pt x="425" y="196" on="0"/>
        <pt x="549" y="145" on="0"/>
        <pt x="643" y="145" on="1"/>
        <pt x="707" y="145" on="0"/>
        <pt x="825" y="193" on="0"/>
        <pt x="915" y="290" on="0"/>
        <pt x="969" y="434" on="0"/>
        <pt x="969" y="530" on="1"/>
        <pt x="969" y="618" on="0"/>
        <pt x="918" y="754" on="0"/>
        <pt x="831" y="848" on="0"/>
        <pt x="715" y="897" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHW[ ]	/* 2 values pushed */
          7 -16
          PUSHB[ ]	/* 4 values pushed */
          16 0 77 32
          PUSHW[ ]	/* 1 value pushed */
          -16
          NPUSHB[ ]	/* 32 values pushed */
          16 1 77 28 16 16 0 77 17 32 16 0 77 25 28 38 32 32 30 28 3 26 35 83 10
          16 4 15 5 13 7 4
          PUSHW[ ]	/* 1 value pushed */
          -40
          NPUSHB[ ]	/* 45 values pushed */
          16 1 77 4 2 7 5 5 2 10 41 26 19 2 81 0 78 21 40 20 10 8 37 27 33
          52 33 1 33 35 37 3 23 30 87 15 11 23 87 5 7 21 80 0 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01110]	/* MoveDirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          RTHG[ ]	/* RoundToHalfGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          IP[ ]	/* InterpolatePts */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="backslash" xMin="41" yMin="-25" xMax="907" yMax="1581">
      <contour>
        <pt x="41" y="1581" on="1"/>
        <pt x="203" y="1581" on="1"/>
        <pt x="907" y="-25" on="1"/>
        <pt x="745" y="-25" on="1"/>
      </contour>
      <instructions><assembly>
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="bar" xMin="152" yMin="-270" xMax="307" yMax="1726">
      <contour>
        <pt x="152" y="1726" on="1"/>
        <pt x="307" y="1726" on="1"/>
        <pt x="307" y="-270" on="1"/>
        <pt x="152" y="-270" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 9 values pushed */
          5 2 81 0 4 3 14 0 16
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MDRP[00110]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="braceleft" xMin="133" yMin="-377" xMax="649" yMax="1706">
      <contour>
        <pt x="133" y="723" on="1"/>
        <pt x="175" y="723" on="0"/>
        <pt x="238" y="769" on="0"/>
        <pt x="280" y="844" on="0"/>
        <pt x="301" y="940" on="0"/>
        <pt x="301" y="990" on="1"/>
        <pt x="301" y="1442" on="1"/>
        <pt x="301" y="1505" on="0"/>
        <pt x="338" y="1603" on="0"/>
        <pt x="397" y="1671" on="0"/>
        <pt x="473" y="1706" on="0"/>
        <pt x="512" y="1706" on="1"/>
        <pt x="649" y="1706" on="1"/>
        <pt x="649" y="1580" on="1"/>
        <pt x="580" y="1580" on="1"/>
        <pt x="526" y="1580" on="0"/>
        <pt x="485" y="1475" on="0"/>
        <pt x="485" y="1381" on="1"/>
        <pt x="485" y="953" on="1"/>
        <pt x="485" y="891" on="0"/>
        <pt x="459" y="795" on="0"/>
        <pt x="414" y="723" on="0"/>
        <pt x="353" y="675" on="0"/>
        <pt x="317" y="662" on="1"/>
        <pt x="317" y="658" on="1"/>
        <pt x="353" y="645" on="0"/>
        <pt x="414" y="597" on="0"/>
        <pt x="459" y="525" on="0"/>
        <pt x="485" y="428" on="0"/>
        <pt x="485" y="367" on="1"/>
        <pt x="485" y="-51" on="1"/>
        <pt x="485" y="-145" on="0"/>
        <pt x="526" y="-250" on="0"/>
        <pt x="580" y="-250" on="1"/>
        <pt x="649" y="-250" on="1"/>
        <pt x="649" y="-377" on="1"/>
        <pt x="512" y="-377" on="1"/>
        <pt x="473" y="-377" on="0"/>
        <pt x="397" y="-342" on="0"/>
        <pt x="338" y="-274" on="0"/>
        <pt x="301" y="-176" on="0"/>
        <pt x="301" y="-113" on="1"/>
        <pt x="301" y="330" on="1"/>
        <pt x="301" y="380" on="0"/>
        <pt x="280" y="475" on="0"/>
        <pt x="238" y="550" on="0"/>
        <pt x="175" y="596" on="0"/>
        <pt x="133" y="596" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 27 values pushed */
          13 35 78 49 17 30 68 5 0 78 42 48 45 23 47 80 0 0 11 34 80 36 18 13 80
          11 16
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[01100]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MIRP[11101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[00110]	/* MoveDirectRelPt */
          MIRP[01100]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="braceright" xMin="72" yMin="-377" xMax="588" yMax="1706">
      <contour>
        <pt x="72" y="-377" on="1"/>
        <pt x="72" y="-250" on="1"/>
        <pt x="141" y="-250" on="1"/>
        <pt x="195" y="-250" on="0"/>
        <pt x="236" y="-145" on="0"/>
        <pt x="236" y="-51" on="1"/>
        <pt x="236" y="367" on="1"/>
        <pt x="236" y="428" on="0"/>
        <pt x="262" y="525" on="0"/>
        <pt x="307" y="597" on="0"/>
        <pt x="368" y="645" on="0"/>
        <pt x="403" y="658" on="1"/>
        <pt x="403" y="662" on="1"/>
        <pt x="368" y="675" on="0"/>
        <pt x="307" y="723" on="0"/>
        <pt x="262" y="795" on="0"/>
        <pt x="236" y="891" on="0"/>
        <pt x="236" y="953" on="1"/>
        <pt x="236" y="1381" on="1"/>
        <pt x="236" y="1475" on="0"/>
        <pt x="195" y="1580" on="0"/>
        <pt x="141" y="1580" on="1"/>
        <pt x="72" y="1580" on="1"/>
        <pt x="72" y="1706" on="1"/>
        <pt x="209" y="1706" on="1"/>
        <pt x="248" y="1706" on="0"/>
        <pt x="324" y="1671" on="0"/>
        <pt x="383" y="1603" on="0"/>
        <pt x="420" y="1505" on="0"/>
        <pt x="420" y="1442" on="1"/>
        <pt x="420" y="990" on="1"/>
        <pt x="420" y="940" on="0"/>
        <pt x="441" y="844" on="0"/>
        <pt x="483" y="769" on="0"/>
        <pt x="546" y="723" on="0"/>
        <pt x="588" y="723" on="1"/>
        <pt x="588" y="596" on="1"/>
        <pt x="546" y="596" on="0"/>
        <pt x="483" y="550" on="0"/>
        <pt x="441" y="475" on="0"/>
        <pt x="420" y="380" on="0"/>
        <pt x="420" y="330" on="1"/>
        <pt x="420" y="-113" on="1"/>
        <pt x="420" y="-176" on="0"/>
        <pt x="383" y="-274" on="0"/>
        <pt x="324" y="-342" on="0"/>
        <pt x="248" y="-377" on="0"/>
        <pt x="209" y="-377" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 26 values pushed */
          49 36 78 29 42 68 22 1 78 17 6 48 11 36 80 35 35 0 22 80 24 16 2 80 0
          18
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[11101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[01110]	/* MoveIndirectRelPt */
          MDRP[00110]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="bracketleft" xMin="238" yMin="-377" xMax="641" yMax="1706">
      <contour>
        <pt x="238" y="1706" on="1"/>
        <pt x="641" y="1706" on="1"/>
        <pt x="641" y="1555" on="1"/>
        <pt x="422" y="1555" on="1"/>
        <pt x="422" y="-225" on="1"/>
        <pt x="641" y="-225" on="1"/>
        <pt x="641" y="-377" on="1"/>
        <pt x="238" y="-377" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 16 values pushed */
          9 5 2 78 4 68 0 8 5 80 7 18 2 80 0 16
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[11110]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[01110]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="bracketright" xMin="80" yMin="-377" xMax="483" yMax="1706">
      <contour>
        <pt x="299" y="1555" on="1"/>
        <pt x="80" y="1555" on="1"/>
        <pt x="80" y="1706" on="1"/>
        <pt x="483" y="1706" on="1"/>
        <pt x="483" y="-377" on="1"/>
        <pt x="80" y="-377" on="1"/>
        <pt x="80" y="-225" on="1"/>
        <pt x="299" y="-225" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 15 values pushed */
          9 3 68 1 78 7 8 7 80 5 18 0 80 2 16
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01110]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MDRP[01110]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="breve" xMin="119" yMin="1149" xMax="856" yMax="1479">
      <contour>
        <pt x="487" y="1149" on="1"/>
        <pt x="411" y="1149" on="0"/>
        <pt x="280" y="1199" on="0"/>
        <pt x="181" y="1287" on="0"/>
        <pt x="122" y="1408" on="0"/>
        <pt x="119" y="1479" on="1"/>
        <pt x="240" y="1479" on="1"/>
        <pt x="241" y="1436" on="0"/>
        <pt x="279" y="1358" on="0"/>
        <pt x="345" y="1299" on="0"/>
        <pt x="435" y="1264" on="0"/>
        <pt x="487" y="1264" on="1"/>
        <pt x="539" y="1264" on="0"/>
        <pt x="629" y="1298" on="0"/>
        <pt x="695" y="1357" on="0"/>
        <pt x="733" y="1435" on="0"/>
        <pt x="735" y="1479" on="1"/>
        <pt x="856" y="1479" on="1"/>
        <pt x="853" y="1408" on="0"/>
        <pt x="793" y="1287" on="0"/>
        <pt x="694" y="1199" on="0"/>
        <pt x="562" y="1149" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 9 values pushed */
          11 0 0 5 22 16 2 5 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="brokenbar" xMin="152" yMin="-268" xMax="307" yMax="1729">
      <contour>
        <pt x="152" y="1729" on="1"/>
        <pt x="307" y="1729" on="1"/>
        <pt x="307" y="979" on="1"/>
        <pt x="152" y="979" on="1"/>
      </contour>
      <contour>
        <pt x="152" y="481" on="1"/>
        <pt x="307" y="481" on="1"/>
        <pt x="307" y="-268" on="1"/>
        <pt x="152" y="-268" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 13 values pushed */
          6 68 4 8 9 2 68 0 8 7 4 3 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MDRP[01110]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="bullet" xMin="154" yMin="528" xMax="657" yMax="1032">
      <contour>
        <pt x="154" y="780" on="1"/>
        <pt x="154" y="832" on="0"/>
        <pt x="193" y="924" on="0"/>
        <pt x="261" y="993" on="0"/>
        <pt x="353" y="1032" on="0"/>
        <pt x="406" y="1032" on="1"/>
        <pt x="458" y="1032" on="0"/>
        <pt x="550" y="993" on="0"/>
        <pt x="618" y="925" on="0"/>
        <pt x="657" y="833" on="0"/>
        <pt x="657" y="780" on="1"/>
        <pt x="657" y="727" on="0"/>
        <pt x="618" y="635" on="0"/>
        <pt x="550" y="567" on="0"/>
        <pt x="458" y="528" on="0"/>
        <pt x="406" y="528" on="1"/>
        <pt x="353" y="528" on="0"/>
        <pt x="261" y="567" on="0"/>
        <pt x="193" y="635" on="0"/>
        <pt x="154" y="727" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 17 values pushed */
          12 10 15 15 5 2 5 0 21 10 161 0 20 15 162 5 6
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MDRP[01110]	/* MoveDirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="c" xMin="92" yMin="-29" xMax="1036" yMax="1069">
      <contour>
        <pt x="848" y="760" on="1"/>
        <pt x="806" y="835" on="0"/>
        <pt x="677" y="905" on="0"/>
        <pt x="592" y="905" on="1"/>
        <pt x="527" y="905" on="0"/>
        <pt x="413" y="851" on="0"/>
        <pt x="328" y="751" on="0"/>
        <pt x="279" y="608" on="0"/>
        <pt x="279" y="520" on="1"/>
        <pt x="279" y="433" on="0"/>
        <pt x="328" y="293" on="0"/>
        <pt x="414" y="194" on="0"/>
        <pt x="527" y="141" on="0"/>
        <pt x="592" y="141" on="1"/>
        <pt x="688" y="141" on="0"/>
        <pt x="830" y="234" on="0"/>
        <pt x="872" y="324" on="1"/>
        <pt x="1026" y="248" on="1"/>
        <pt x="996" y="184" on="0"/>
        <pt x="908" y="82" on="0"/>
        <pt x="797" y="10" on="0"/>
        <pt x="664" y="-29" on="0"/>
        <pt x="590" y="-29" on="1"/>
        <pt x="482" y="-29" on="0"/>
        <pt x="299" y="52" on="0"/>
        <pt x="166" y="198" on="0"/>
        <pt x="92" y="400" on="0"/>
        <pt x="92" y="520" on="1"/>
        <pt x="92" y="640" on="0"/>
        <pt x="170" y="842" on="0"/>
        <pt x="306" y="987" on="0"/>
        <pt x="488" y="1069" on="0"/>
        <pt x="592" y="1069" on="1"/>
        <pt x="690" y="1069" on="0"/>
        <pt x="865" y="1001" on="0"/>
        <pt x="931" y="932" on="1"/>
        <pt x="1036" y="932" on="1"/>
        <pt x="1036" y="760" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHW[ ]	/* 2 values pushed */
          34 -32
          NPUSHB[ ]	/* 40 values pushed */
          16 0 77 15 56 16 0 77 35 78 36 36 13 22 22 3 32 32 27 17 48 37 1 37 39
          8 83 64 27 1 27 38 3 87 32 7 13 87 22 11
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          RTHG[ ]	/* RoundToHalfGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="caron" xMin="223" yMin="1135" xMax="776" yMax="1488">
      <contour>
        <pt x="776" y="1488" on="1"/>
        <pt x="524" y="1135" on="1"/>
        <pt x="475" y="1135" on="1"/>
        <pt x="223" y="1488" on="1"/>
        <pt x="367" y="1488" on="1"/>
        <pt x="500" y="1292" on="1"/>
        <pt x="635" y="1488" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 22 values pushed */
          6 168 0 8 4 168 112 3 160 3 2 3 7 5 2 2 3 7 6 2 3 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ccaron" xMin="92" yMin="-29" xMax="1036" yMax="1488">
      <component glyphName="c" x="0" y="0" flags="0x204"/>
      <component glyphName="caron" x="65" y="0" flags="0x4"/>
      <instructions><assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 0 41 38 27 37 80
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ccedilla" xMin="92" yMin="-432" xMax="1036" yMax="1069">
      <component glyphName="c" x="0" y="0" flags="0x204"/>
      <component glyphName="cedilla" x="176" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="cedilla" xMin="182" yMin="-432" xMax="594" yMax="-78">
      <contour>
        <pt x="182" y="-303" on="1"/>
        <pt x="237" y="-302" on="0"/>
        <pt x="326" y="-265" on="0"/>
        <pt x="393" y="-205" on="0"/>
        <pt x="436" y="-124" on="0"/>
        <pt x="444" y="-78" on="1"/>
        <pt x="594" y="-123" on="1"/>
        <pt x="576" y="-196" on="0"/>
        <pt x="500" y="-311" on="0"/>
        <pt x="395" y="-390" on="0"/>
        <pt x="265" y="-432" on="0"/>
        <pt x="193" y="-432" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 8 values pushed */
          0 6 13 5 12 1 87 11
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="cent" xMin="111" yMin="-186" xMax="1055" yMax="1579">
      <contour>
        <pt x="516" y="-186" on="1"/>
        <pt x="516" y="143" on="1"/>
        <pt x="426" y="159" on="0"/>
        <pt x="277" y="251" on="0"/>
        <pt x="170" y="392" on="0"/>
        <pt x="111" y="576" on="0"/>
        <pt x="111" y="684" on="1"/>
        <pt x="111" y="790" on="0"/>
        <pt x="173" y="972" on="0"/>
        <pt x="281" y="1113" on="0"/>
        <pt x="429" y="1207" on="0"/>
        <pt x="516" y="1224" on="1"/>
        <pt x="516" y="1579" on="1"/>
        <pt x="713" y="1579" on="1"/>
        <pt x="713" y="1223" on="1"/>
        <pt x="781" y="1209" on="0"/>
        <pt x="901" y="1147" on="0"/>
        <pt x="949" y="1096" on="1"/>
        <pt x="1055" y="1096" on="1"/>
        <pt x="1055" y="924" on="1"/>
        <pt x="872" y="924" on="1"/>
        <pt x="868" y="922" on="1"/>
        <pt x="867" y="922" on="0"/>
        <pt x="867" y="924" on="1"/>
        <pt x="866" y="924" on="1"/>
        <pt x="866" y="925" on="1"/>
        <pt x="823" y="999" on="0"/>
        <pt x="695" y="1069" on="0"/>
        <pt x="610" y="1069" on="1"/>
        <pt x="545" y="1069" on="0"/>
        <pt x="431" y="1015" on="0"/>
        <pt x="346" y="915" on="0"/>
        <pt x="297" y="772" on="0"/>
        <pt x="297" y="684" on="1"/>
        <pt x="297" y="597" on="0"/>
        <pt x="346" y="457" on="0"/>
        <pt x="432" y="358" on="0"/>
        <pt x="545" y="305" on="0"/>
        <pt x="610" y="305" on="1"/>
        <pt x="706" y="305" on="0"/>
        <pt x="849" y="398" on="0"/>
        <pt x="891" y="487" on="1"/>
        <pt x="1044" y="412" on="1"/>
        <pt x="995" y="307" on="0"/>
        <pt x="825" y="168" on="0"/>
        <pt x="713" y="145" on="1"/>
        <pt x="713" y="-186" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 55 values pushed */
          63 47 1 127 40 1 36 36 52 36 2 36 30 52 30 2 114 16 1 46 81 1 1 38 38
          28 13 81 11 11 28 28 6 42 17 78 19 124 48 33 83 6 47 28 87 14 13 11 164 46
          45 38 87 1 165
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01101]	/* MoveDirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MDRP[01101]	/* MoveDirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11110]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="circumflex" xMin="217" yMin="1176" xMax="782" yMax="1489">
      <contour>
        <pt x="217" y="1176" on="1"/>
        <pt x="467" y="1489" on="1"/>
        <pt x="530" y="1489" on="1"/>
        <pt x="782" y="1176" on="1"/>
        <pt x="633" y="1176" on="1"/>
        <pt x="500" y="1331" on="1"/>
        <pt x="365" y="1176" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 29 values pushed */
          5 0 4 168 3 8 48 8 1 6 168 112 0 160 0 2 0 7 4 5 1 0 0 7 96
          1 1 1 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="colon" xMin="96" yMin="-12" xMax="356" yMax="1036">
      <contour>
        <pt x="96" y="907" on="1"/>
        <pt x="96" y="933" on="0"/>
        <pt x="117" y="980" on="0"/>
        <pt x="153" y="1015" on="0"/>
        <pt x="200" y="1036" on="0"/>
        <pt x="227" y="1036" on="1"/>
        <pt x="253" y="1036" on="0"/>
        <pt x="300" y="1015" on="0"/>
        <pt x="335" y="980" on="0"/>
        <pt x="356" y="933" on="0"/>
        <pt x="356" y="907" on="1"/>
        <pt x="356" y="880" on="0"/>
        <pt x="335" y="832" on="0"/>
        <pt x="300" y="796" on="0"/>
        <pt x="253" y="774" on="0"/>
        <pt x="227" y="774" on="1"/>
        <pt x="200" y="774" on="0"/>
        <pt x="153" y="796" on="0"/>
        <pt x="117" y="832" on="0"/>
        <pt x="96" y="880" on="0"/>
      </contour>
      <contour>
        <pt x="96" y="121" on="1"/>
        <pt x="96" y="147" on="0"/>
        <pt x="117" y="194" on="0"/>
        <pt x="153" y="229" on="0"/>
        <pt x="200" y="250" on="0"/>
        <pt x="227" y="250" on="1"/>
        <pt x="253" y="250" on="0"/>
        <pt x="300" y="229" on="0"/>
        <pt x="335" y="194" on="0"/>
        <pt x="356" y="147" on="0"/>
        <pt x="356" y="121" on="1"/>
        <pt x="356" y="94" on="0"/>
        <pt x="335" y="46" on="0"/>
        <pt x="300" y="9" on="0"/>
        <pt x="253" y="-12" on="0"/>
        <pt x="227" y="-12" on="1"/>
        <pt x="200" y="-12" on="0"/>
        <pt x="153" y="9" on="0"/>
        <pt x="117" y="46" on="0"/>
        <pt x="96" y="94" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 71 values pushed */
          63 40 1 37 43 23 59 23 123 23 3 23 111 25 27 36 33 52 33 116 33 3 33 111 35
          25 35 30 110 20 20 0 17 43 3 59 3 123 3 3 3 111 5 7 36 13 52 13 116 13
          3 13 111 15 5 15 0 41 10 110 0 40 25 35 1 47 15 1 15 5 6
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MDRP[01101]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIAP[1]	/* MoveIndirectAbsPt */
          MDRP[01101]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MDRP[01110]	/* MoveDirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="comma" xMin="20" yMin="-340" xMax="424" yMax="283">
      <contour>
        <pt x="205" y="283" on="1"/>
        <pt x="424" y="197" on="1"/>
        <pt x="164" y="-340" on="1"/>
        <pt x="20" y="-287" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 29 values pushed */
          121 3 1 5 5 48 1 112 1 2 1 161 175 2 1 2 78 3 48 2 1 2 80 4 127
          0 1 0 17
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[11001]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDRP[01010]	/* MoveDirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="copyright" xMin="102" yMin="-25" xMax="1817" yMax="1686">
      <contour>
        <pt x="102" y="831" on="1"/>
        <pt x="102" y="949" on="0"/>
        <pt x="163" y="1168" on="0"/>
        <pt x="274" y="1358" on="0"/>
        <pt x="430" y="1514" on="0"/>
        <pt x="620" y="1625" on="0"/>
        <pt x="839" y="1686" on="0"/>
        <pt x="958" y="1686" on="1"/>
        <pt x="1076" y="1686" on="0"/>
        <pt x="1296" y="1625" on="0"/>
        <pt x="1487" y="1514" on="0"/>
        <pt x="1644" y="1358" on="0"/>
        <pt x="1756" y="1168" on="0"/>
        <pt x="1817" y="949" on="0"/>
        <pt x="1817" y="831" on="1"/>
        <pt x="1817" y="712" on="0"/>
        <pt x="1756" y="493" on="0"/>
        <pt x="1644" y="303" on="0"/>
        <pt x="1487" y="147" on="0"/>
        <pt x="1296" y="36" on="0"/>
        <pt x="1076" y="-25" on="0"/>
        <pt x="958" y="-25" on="1"/>
        <pt x="839" y="-25" on="0"/>
        <pt x="620" y="36" on="0"/>
        <pt x="430" y="147" on="0"/>
        <pt x="274" y="303" on="0"/>
        <pt x="163" y="493" on="0"/>
        <pt x="102" y="712" on="0"/>
      </contour>
      <contour>
        <pt x="283" y="831" on="1"/>
        <pt x="283" y="689" on="0"/>
        <pt x="388" y="442" on="0"/>
        <pt x="571" y="259" on="0"/>
        <pt x="817" y="154" on="0"/>
        <pt x="958" y="154" on="1"/>
        <pt x="1099" y="154" on="0"/>
        <pt x="1344" y="259" on="0"/>
        <pt x="1529" y="442" on="0"/>
        <pt x="1634" y="689" on="0"/>
        <pt x="1634" y="831" on="1"/>
        <pt x="1634" y="971" on="0"/>
        <pt x="1529" y="1230" on="0"/>
        <pt x="1344" y="1402" on="0"/>
        <pt x="1099" y="1507" on="0"/>
        <pt x="958" y="1507" on="1"/>
        <pt x="817" y="1507" on="0"/>
        <pt x="571" y="1402" on="0"/>
        <pt x="388" y="1230" on="0"/>
        <pt x="283" y="971" on="0"/>
      </contour>
      <contour>
        <pt x="1190" y="1059" on="1"/>
        <pt x="1142" y="1105" on="0"/>
        <pt x="1037" y="1147" on="0"/>
        <pt x="979" y="1147" on="1"/>
        <pt x="915" y="1147" on="0"/>
        <pt x="803" y="1098" on="0"/>
        <pt x="720" y="1012" on="0"/>
        <pt x="672" y="898" on="0"/>
        <pt x="672" y="834" on="1"/>
        <pt x="672" y="770" on="0"/>
        <pt x="720" y="658" on="0"/>
        <pt x="803" y="574" on="0"/>
        <pt x="915" y="526" on="0"/>
        <pt x="979" y="526" on="1"/>
        <pt x="1035" y="526" on="0"/>
        <pt x="1140" y="571" on="0"/>
        <pt x="1171" y="606" on="1"/>
        <pt x="1305" y="477" on="1"/>
        <pt x="1282" y="447" on="0"/>
        <pt x="1210" y="394" on="0"/>
        <pt x="1124" y="355" on="0"/>
        <pt x="1027" y="332" on="0"/>
        <pt x="979" y="332" on="1"/>
        <pt x="874" y="332" on="0"/>
        <pt x="691" y="410" on="0"/>
        <pt x="555" y="546" on="0"/>
        <pt x="477" y="729" on="0"/>
        <pt x="477" y="834" on="1"/>
        <pt x="477" y="938" on="0"/>
        <pt x="555" y="1121" on="0"/>
        <pt x="691" y="1258" on="0"/>
        <pt x="874" y="1337" on="0"/>
        <pt x="979" y="1337" on="1"/>
        <pt x="1037" y="1337" on="0"/>
        <pt x="1140" y="1312" on="0"/>
        <pt x="1229" y="1271" on="0"/>
        <pt x="1302" y="1218" on="0"/>
        <pt x="1331" y="1190" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 70 values pushed */
          53 59 1 53 53 1 48 85 1 117 83 1 122 67 1 125 65 1 62 65 1 70 51 80 80
          28 38 70 31 45 35 41 50 45 114 45 2 125 41 1 62 41 1 41 7 45 3 0 14 87
          56 70 75 28 70 0 86 61 74 70 33 74 21 9 51 74 80 43 74 7
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="currency" xMin="55" yMin="170" xMax="1077" yMax="1321">
      <contour>
        <pt x="125" y="743" on="1"/>
        <pt x="125" y="822" on="0"/>
        <pt x="176" y="964" on="0"/>
        <pt x="221" y="1021" on="1"/>
        <pt x="74" y="1198" on="1"/>
        <pt x="219" y="1321" on="1"/>
        <pt x="368" y="1142" on="1"/>
        <pt x="414" y="1166" on="0"/>
        <pt x="517" y="1192" on="0"/>
        <pt x="573" y="1192" on="1"/>
        <pt x="628" y="1192" on="0"/>
        <pt x="730" y="1166" on="0"/>
        <pt x="776" y="1143" on="1"/>
        <pt x="913" y="1307" on="1"/>
        <pt x="1073" y="1192" on="1"/>
        <pt x="928" y="1018" on="1"/>
        <pt x="973" y="961" on="0"/>
        <pt x="1022" y="821" on="0"/>
        <pt x="1022" y="743" on="1"/>
        <pt x="1022" y="666" on="0"/>
        <pt x="974" y="528" on="0"/>
        <pt x="930" y="471" on="1"/>
        <pt x="1077" y="295" on="1"/>
        <pt x="926" y="176" on="1"/>
        <pt x="783" y="347" on="1"/>
        <pt x="735" y="322" on="0"/>
        <pt x="630" y="295" on="0"/>
        <pt x="573" y="295" on="1"/>
        <pt x="516" y="295" on="0"/>
        <pt x="413" y="321" on="0"/>
        <pt x="366" y="345" on="1"/>
        <pt x="221" y="170" on="1"/>
        <pt x="55" y="281" on="1"/>
        <pt x="219" y="471" on="1"/>
        <pt x="173" y="529" on="0"/>
        <pt x="125" y="666" on="0"/>
      </contour>
      <contour>
        <pt x="295" y="748" on="1"/>
        <pt x="295" y="689" on="0"/>
        <pt x="339" y="587" on="0"/>
        <pt x="415" y="511" on="0"/>
        <pt x="517" y="467" on="0"/>
        <pt x="575" y="467" on="1"/>
        <pt x="633" y="467" on="0"/>
        <pt x="736" y="511" on="0"/>
        <pt x="812" y="587" on="0"/>
        <pt x="856" y="689" on="0"/>
        <pt x="856" y="748" on="1"/>
        <pt x="856" y="806" on="0"/>
        <pt x="812" y="908" on="0"/>
        <pt x="736" y="984" on="0"/>
        <pt x="633" y="1028" on="0"/>
        <pt x="575" y="1028" on="1"/>
        <pt x="517" y="1028" on="0"/>
        <pt x="415" y="984" on="0"/>
        <pt x="339" y="908" on="0"/>
        <pt x="295" y="806" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 29 values pushed */
          63 56 1 52 33 1 52 21 1 59 15 1 59 3 1 46 83 18 57 36 83 0 56 41 87
          27 51 87 9
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="d" xMin="92" yMin="-23" xMax="1190" yMax="1556">
      <contour>
        <pt x="711" y="1556" on="1"/>
        <pt x="1038" y="1556" on="1"/>
        <pt x="1038" y="172" on="1"/>
        <pt x="1190" y="172" on="1"/>
        <pt x="1190" y="0" on="1"/>
        <pt x="852" y="0" on="1"/>
        <pt x="852" y="85" on="1"/>
        <pt x="802" y="34" on="0"/>
        <pt x="670" y="-23" on="0"/>
        <pt x="586" y="-23" on="1"/>
        <pt x="481" y="-23" on="0"/>
        <pt x="300" y="50" on="0"/>
        <pt x="167" y="191" on="0"/>
        <pt x="92" y="396" on="0"/>
        <pt x="92" y="528" on="1"/>
        <pt x="92" y="648" on="0"/>
        <pt x="164" y="845" on="0"/>
        <pt x="296" y="984" on="0"/>
        <pt x="482" y="1061" on="0"/>
        <pt x="596" y="1061" on="1"/>
        <pt x="671" y="1061" on="0"/>
        <pt x="795" y="1028" on="0"/>
        <pt x="852" y="987" on="1"/>
        <pt x="852" y="1384" on="1"/>
        <pt x="711" y="1384" on="1"/>
      </contour>
      <contour>
        <pt x="610" y="139" on="1"/>
        <pt x="693" y="139" on="0"/>
        <pt x="805" y="188" on="0"/>
        <pt x="852" y="237" on="1"/>
        <pt x="852" y="817" on="1"/>
        <pt x="802" y="859" on="0"/>
        <pt x="672" y="897" on="0"/>
        <pt x="604" y="897" on="1"/>
        <pt x="538" y="897" on="0"/>
        <pt x="422" y="848" on="0"/>
        <pt x="335" y="754" on="0"/>
        <pt x="285" y="618" on="0"/>
        <pt x="285" y="530" on="1"/>
        <pt x="285" y="434" on="0"/>
        <pt x="333" y="288" on="0"/>
        <pt x="419" y="189" on="0"/>
        <pt x="539" y="139" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 71 values pushed */
          63 43 1 63 42 1 52 40 1 52 34 1 116 7 1 122 7 1 121 6 1 11 17 10 18
          9 19 8 20 20 19 18 17 4 14 24 78 23 6 29 81 3 78 64 1 1 1 43 37 83
          64 14 1 14 42 30 34 27 40 40 37 34 3 25 32 87 15 16 13 12 12
          PUSHW[ ]	/* 1 value pushed */
          -16
          NPUSHB[ ]	/* 24 values pushed */
          16 1 77 12 14 16 3 9 19 7 25 87 9 11 3 80 5 10 1 0 23 80 0 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01110]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[01100]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="degree" xMin="102" yMin="1260" xMax="580" yMax="1737">
      <contour>
        <pt x="340" y="1737" on="1"/>
        <pt x="389" y="1737" on="0"/>
        <pt x="476" y="1699" on="0"/>
        <pt x="542" y="1633" on="0"/>
        <pt x="580" y="1546" on="0"/>
        <pt x="580" y="1497" on="1"/>
        <pt x="580" y="1448" on="0"/>
        <pt x="542" y="1362" on="0"/>
        <pt x="476" y="1297" on="0"/>
        <pt x="389" y="1260" on="0"/>
        <pt x="340" y="1260" on="1"/>
        <pt x="291" y="1260" on="0"/>
        <pt x="204" y="1297" on="0"/>
        <pt x="140" y="1362" on="0"/>
        <pt x="102" y="1448" on="0"/>
        <pt x="102" y="1497" on="1"/>
        <pt x="102" y="1546" on="0"/>
        <pt x="140" y="1633" on="0"/>
        <pt x="204" y="1699" on="0"/>
        <pt x="291" y="1737" on="0"/>
      </contour>
      <contour>
        <pt x="205" y="1497" on="1"/>
        <pt x="205" y="1469" on="0"/>
        <pt x="226" y="1420" on="0"/>
        <pt x="263" y="1383" on="0"/>
        <pt x="312" y="1362" on="0"/>
        <pt x="340" y="1362" on="1"/>
        <pt x="368" y="1362" on="0"/>
        <pt x="417" y="1383" on="0"/>
        <pt x="455" y="1420" on="0"/>
        <pt x="477" y="1469" on="0"/>
        <pt x="477" y="1497" on="1"/>
        <pt x="477" y="1525" on="0"/>
        <pt x="455" y="1574" on="0"/>
        <pt x="417" y="1612" on="0"/>
        <pt x="368" y="1634" on="0"/>
        <pt x="340" y="1634" on="1"/>
        <pt x="312" y="1634" on="0"/>
        <pt x="263" y="1612" on="0"/>
        <pt x="226" y="1574" on="0"/>
        <pt x="205" y="1525" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 12 values pushed */
          20 15 40 30 63 5 1 5 25 10 35 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MDRP[01101]	/* MoveDirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDRP[01101]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDRP[00101]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MDRP[00101]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="dieresis" xMin="39" yMin="1227" xMax="752" yMax="1489">
      <contour>
        <pt x="39" y="1360" on="1"/>
        <pt x="39" y="1386" on="0"/>
        <pt x="60" y="1433" on="0"/>
        <pt x="95" y="1468" on="0"/>
        <pt x="142" y="1489" on="0"/>
        <pt x="168" y="1489" on="1"/>
        <pt x="193" y="1489" on="0"/>
        <pt x="239" y="1468" on="0"/>
        <pt x="273" y="1433" on="0"/>
        <pt x="293" y="1386" on="0"/>
        <pt x="293" y="1360" on="1"/>
        <pt x="293" y="1333" on="0"/>
        <pt x="273" y="1285" on="0"/>
        <pt x="239" y="1248" on="0"/>
        <pt x="193" y="1227" on="0"/>
        <pt x="168" y="1227" on="1"/>
        <pt x="142" y="1227" on="0"/>
        <pt x="95" y="1248" on="0"/>
        <pt x="60" y="1285" on="0"/>
        <pt x="39" y="1333" on="0"/>
      </contour>
      <contour>
        <pt x="498" y="1360" on="1"/>
        <pt x="498" y="1386" on="0"/>
        <pt x="519" y="1433" on="0"/>
        <pt x="554" y="1468" on="0"/>
        <pt x="601" y="1489" on="0"/>
        <pt x="627" y="1489" on="1"/>
        <pt x="652" y="1489" on="0"/>
        <pt x="697" y="1468" on="0"/>
        <pt x="732" y="1433" on="0"/>
        <pt x="752" y="1386" on="0"/>
        <pt x="752" y="1360" on="1"/>
        <pt x="752" y="1333" on="0"/>
        <pt x="732" y="1285" on="0"/>
        <pt x="697" y="1248" on="0"/>
        <pt x="652" y="1227" on="0"/>
        <pt x="627" y="1227" on="1"/>
        <pt x="601" y="1227" on="0"/>
        <pt x="554" y="1248" on="0"/>
        <pt x="519" y="1285" on="0"/>
        <pt x="498" y="1333" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 46 values pushed */
          27 33 111 35 37 23 111 25 35 25 30 110 79 20 1 20 10 7 13 111 15 17 3 111 5
          15 5 10 110 64 0 1 0 40 35 160 25 1 25 2 15 160 5 1 5 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDRP[01101]	/* MoveDirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDRP[01101]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="divide" xMin="51" yMin="-12" xMax="1075" yMax="1036">
      <contour>
        <pt x="414" y="907" on="1"/>
        <pt x="414" y="933" on="0"/>
        <pt x="435" y="980" on="0"/>
        <pt x="470" y="1015" on="0"/>
        <pt x="518" y="1036" on="0"/>
        <pt x="545" y="1036" on="1"/>
        <pt x="571" y="1036" on="0"/>
        <pt x="618" y="1015" on="0"/>
        <pt x="653" y="980" on="0"/>
        <pt x="674" y="933" on="0"/>
        <pt x="674" y="907" on="1"/>
        <pt x="674" y="880" on="0"/>
        <pt x="653" y="832" on="0"/>
        <pt x="618" y="795" on="0"/>
        <pt x="571" y="774" on="0"/>
        <pt x="545" y="774" on="1"/>
        <pt x="518" y="774" on="0"/>
        <pt x="470" y="795" on="0"/>
        <pt x="435" y="832" on="0"/>
        <pt x="414" y="880" on="0"/>
      </contour>
      <contour>
        <pt x="414" y="121" on="1"/>
        <pt x="414" y="147" on="0"/>
        <pt x="435" y="194" on="0"/>
        <pt x="470" y="229" on="0"/>
        <pt x="518" y="250" on="0"/>
        <pt x="545" y="250" on="1"/>
        <pt x="571" y="250" on="0"/>
        <pt x="618" y="229" on="0"/>
        <pt x="653" y="194" on="0"/>
        <pt x="674" y="147" on="0"/>
        <pt x="674" y="121" on="1"/>
        <pt x="674" y="94" on="0"/>
        <pt x="653" y="46" on="0"/>
        <pt x="618" y="9" on="0"/>
        <pt x="571" y="-12" on="0"/>
        <pt x="545" y="-12" on="1"/>
        <pt x="518" y="-12" on="0"/>
        <pt x="470" y="9" on="0"/>
        <pt x="435" y="46" on="0"/>
        <pt x="414" y="94" on="0"/>
      </contour>
      <contour>
        <pt x="51" y="614" on="1"/>
        <pt x="1075" y="614" on="1"/>
        <pt x="1075" y="452" on="1"/>
        <pt x="51" y="452" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 50 values pushed */
          37 23 111 25 27 33 111 35 25 35 30 110 20 20 0 3 17 111 15 7 13 111 5 15 5
          10 110 0 0 40 42 45 40 44 42 115 40 40 15 25 35 11 15 63 5 127 5 2 5 6
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDRP[01101]	/* MoveDirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MDRP[01101]	/* MoveDirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00110]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01110]	/* MoveDirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01001]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01001]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01001]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01001]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="divisionslash" xMin="-203" yMin="-61" xMax="956" yMax="1167">
      <contour>
        <pt x="758" y="1167" on="1"/>
        <pt x="956" y="1167" on="1"/>
        <pt x="-4" y="-61" on="1"/>
        <pt x="-203" y="-61" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 31 values pushed */
          1 2 3 0 1 0 2 77 3 0 20 3 0 2 3 4 5 127 0 1 61 0 1 0 3
          8 59 0 1 0 6
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIAP[1]	/* MoveIndirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDRP[00100]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10101]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="dollar" xMin="150" yMin="-186" xMax="1061" yMax="1579">
      <contour>
        <pt x="516" y="-186" on="1"/>
        <pt x="516" y="136" on="1"/>
        <pt x="417" y="152" on="0"/>
        <pt x="302" y="242" on="0"/>
        <pt x="269" y="303" on="1"/>
        <pt x="150" y="303" on="1"/>
        <pt x="150" y="475" on="1"/>
        <pt x="401" y="475" on="1"/>
        <pt x="401" y="464" on="1"/>
        <pt x="403" y="465" on="1"/>
        <pt x="403" y="384" on="0"/>
        <pt x="515" y="299" on="0"/>
        <pt x="625" y="299" on="1"/>
        <pt x="725" y="299" on="0"/>
        <pt x="842" y="377" on="0"/>
        <pt x="842" y="449" on="1"/>
        <pt x="842" y="486" on="0"/>
        <pt x="803" y="536" on="0"/>
        <pt x="744" y="569" on="0"/>
        <pt x="672" y="589" on="0"/>
        <pt x="639" y="598" on="1"/>
        <pt x="463" y="645" on="1"/>
        <pt x="406" y="660" on="0"/>
        <pt x="310" y="709" on="0"/>
        <pt x="241" y="781" on="0"/>
        <pt x="203" y="879" on="0"/>
        <pt x="203" y="944" on="1"/>
        <pt x="203" y="1002" on="0"/>
        <pt x="245" y="1101" on="0"/>
        <pt x="325" y="1177" on="0"/>
        <pt x="442" y="1227" on="0"/>
        <pt x="516" y="1238" on="1"/>
        <pt x="516" y="1579" on="1"/>
        <pt x="713" y="1579" on="1"/>
        <pt x="713" y="1237" on="1"/>
        <pt x="798" y="1222" on="0"/>
        <pt x="922" y="1144" on="0"/>
        <pt x="960" y="1090" on="1"/>
        <pt x="1061" y="1090" on="1"/>
        <pt x="1061" y="918" on="1"/>
        <pt x="852" y="918" on="1"/>
        <pt x="829" y="915" on="1"/>
        <pt x="829" y="918" on="1"/>
        <pt x="827" y="918" on="1"/>
        <pt x="827" y="940" on="1"/>
        <pt x="817" y="1005" on="0"/>
        <pt x="707" y="1085" on="0"/>
        <pt x="616" y="1085" on="1"/>
        <pt x="507" y="1085" on="0"/>
        <pt x="393" y="1014" on="0"/>
        <pt x="393" y="952" on="1"/>
        <pt x="393" y="910" on="0"/>
        <pt x="430" y="860" on="0"/>
        <pt x="486" y="829" on="0"/>
        <pt x="553" y="812" on="0"/>
        <pt x="584" y="803" on="1"/>
        <pt x="758" y="750" on="1"/>
        <pt x="824" y="730" on="0"/>
        <pt x="929" y="679" on="0"/>
        <pt x="1001" y="611" on="0"/>
        <pt x="1040" y="520" on="0"/>
        <pt x="1040" y="459" on="1"/>
        <pt x="1040" y="397" on="0"/>
        <pt x="993" y="290" on="0"/>
        <pt x="907" y="206" on="0"/>
        <pt x="786" y="148" on="0"/>
        <pt x="713" y="136" on="1"/>
        <pt x="713" y="-186" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 91 values pushed */
          125 45 1 59 28 1 57 24 1 123 13 1 116 10 1 48 58 1 33 81 160 31 1 31 31
          47 67 81 127 1 1 1 1 12 47 47 26 39 15 83 61 69 96 69 1 50 83 6 26 68
          14 25 27 60 166 25 1 123 25 1 68 25 1 59 25 1 175 60 1 75 60 1 57 60 1
          25 60 25 60 1 47 87 31 164 12 87 207 1 1 1 165
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="dotaccent" xMin="174" yMin="1270" xMax="434" yMax="1532">
      <contour>
        <pt x="174" y="1403" on="1"/>
        <pt x="174" y="1429" on="0"/>
        <pt x="195" y="1476" on="0"/>
        <pt x="230" y="1511" on="0"/>
        <pt x="278" y="1532" on="0"/>
        <pt x="305" y="1532" on="1"/>
        <pt x="331" y="1532" on="0"/>
        <pt x="378" y="1511" on="0"/>
        <pt x="413" y="1476" on="0"/>
        <pt x="434" y="1429" on="0"/>
        <pt x="434" y="1403" on="1"/>
        <pt x="434" y="1376" on="0"/>
        <pt x="413" y="1328" on="0"/>
        <pt x="378" y="1291" on="0"/>
        <pt x="331" y="1270" on="0"/>
        <pt x="305" y="1270" on="1"/>
        <pt x="278" y="1270" on="0"/>
        <pt x="230" y="1291" on="0"/>
        <pt x="195" y="1328" on="0"/>
        <pt x="174" y="1376" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 22 values pushed */
          17 3 7 13 164 3 1 171 13 1 13 15 5 3 4 10 110 0 20 15 5 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MDRP[00101]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="dotlessi" xMin="59" yMin="0" xMax="553" yMax="1036">
      <contour>
        <pt x="59" y="1036" on="1"/>
        <pt x="397" y="1036" on="1"/>
        <pt x="397" y="172" on="1"/>
        <pt x="553" y="172" on="1"/>
        <pt x="553" y="0" on="1"/>
        <pt x="61" y="0" on="1"/>
        <pt x="61" y="172" on="1"/>
        <pt x="209" y="172" on="1"/>
        <pt x="209" y="864" on="1"/>
        <pt x="59" y="864" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 19 values pushed */
          9 6 78 8 4 78 2 81 8 10 7 3 80 5 10 8 80 0 6
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="e" xMin="92" yMin="-29" xMax="1022" yMax="1063">
      <contour>
        <pt x="276" y="494" on="1"/>
        <pt x="276" y="450" on="0"/>
        <pt x="289" y="377" on="0"/>
        <pt x="301" y="344" on="1"/>
        <pt x="338" y="244" on="0"/>
        <pt x="501" y="143" on="0"/>
        <pt x="604" y="143" on="1"/>
        <pt x="685" y="143" on="0"/>
        <pt x="838" y="188" on="0"/>
        <pt x="922" y="236" on="1"/>
        <pt x="997" y="109" on="1"/>
        <pt x="895" y="39" on="0"/>
        <pt x="689" y="-29" on="0"/>
        <pt x="578" y="-29" on="1"/>
        <pt x="473" y="-29" on="0"/>
        <pt x="294" y="41" on="0"/>
        <pt x="165" y="179" on="0"/>
        <pt x="92" y="385" on="0"/>
        <pt x="92" y="522" on="1"/>
        <pt x="92" y="633" on="0"/>
        <pt x="154" y="830" on="0"/>
        <pt x="277" y="977" on="0"/>
        <pt x="459" y="1063" on="0"/>
        <pt x="580" y="1063" on="1"/>
        <pt x="697" y="1063" on="0"/>
        <pt x="854" y="992" on="0"/>
        <pt x="953" y="875" on="0"/>
        <pt x="1004" y="725" on="0"/>
        <pt x="1014" y="647" on="1"/>
        <pt x="1019" y="609" on="0"/>
        <pt x="1022" y="531" on="0"/>
        <pt x="1022" y="494" on="1"/>
      </contour>
      <contour>
        <pt x="567" y="907" on="1"/>
        <pt x="502" y="907" on="0"/>
        <pt x="405" y="870" on="0"/>
        <pt x="337" y="801" on="0"/>
        <pt x="296" y="701" on="0"/>
        <pt x="286" y="639" on="1"/>
        <pt x="823" y="639" on="1"/>
        <pt x="819" y="697" on="0"/>
        <pt x="790" y="795" on="0"/>
        <pt x="730" y="867" on="0"/>
        <pt x="636" y="907" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          41 40 11 1 77 35
          PUSHW[ ]	/* 1 value pushed */
          -24
          PUSHB[ ]	/* 4 values pushed */
          11 1 77 34
          PUSHW[ ]	/* 1 value pushed */
          -40
          PUSHB[ ]	/* 4 values pushed */
          11 1 77 34
          PUSHW[ ]	/* 1 value pushed */
          -32
          NPUSHB[ ]	/* 13 values pushed */
          13 0 77 73 27 1 25 32 10 11 1 76 16
          PUSHW[ ]	/* 1 value pushed */
          -16
          NPUSHB[ ]	/* 17 values pushed */
          10 1 77 70 16 1 9 32 11 1 77 9 24 10 1 77 5
          PUSHW[ ]	/* 1 value pushed */
          -40
          PUSHB[ ]	/* 4 values pushed */
          13 0 77 41
          PUSHW[ ]	/* 1 value pushed */
          -8
          NPUSHB[ ]	/* 77 values pushed */
          10 1 77 24 8 10 1 77 107 10 1 10 24 16 20 102 24 1 11 24 1 20 23 24 3
          18 38 83 32 31 1 15 31 1 10 31 44 37 0 83 0 18 16 18 2 18 43 35 41 41
          32 31 85 176 37 1 112 37 1 15 37 1 11 37 32 87 26 19 20 4 16 20 48 14 1
          77 16
          PUSHW[ ]	/* 1 value pushed */
          -16
          NPUSHB[ ]	/* 13 values pushed */
          12 0 77 16 18 20 3 13 23 7 11 10 10
          PUSHW[ ]	/* 1 value pushed */
          -32
          NPUSHB[ ]	/* 18 values pushed */
          12 0 77 4 10 1 57 39 10 1 16 10 1 10 6 87 13 11
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="eacute" xMin="92" yMin="-29" xMax="1022" yMax="1477">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="247" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="ecircumflex" xMin="92" yMin="-29" xMax="1022" yMax="1489">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="70" y="0" flags="0x4"/>
      <instructions><assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 0 43 46 18 31 80
          CALL[ ]	/* CallFunction */
          SHC[0]	/* ShiftContourByLastPt */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="edieresis" xMin="92" yMin="-29" xMax="1022" yMax="1489">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="162" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="egrave" xMin="92" yMin="-29" xMax="1022" yMax="1477">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="grave" x="157" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="eight" xMin="139" yMin="-16" xMax="1112" yMax="1544">
      <contour>
        <pt x="631" y="1544" on="1"/>
        <pt x="717" y="1544" on="0"/>
        <pt x="870" y="1482" on="0"/>
        <pt x="986" y="1374" on="0"/>
        <pt x="1053" y="1229" on="0"/>
        <pt x="1053" y="1147" on="1"/>
        <pt x="1053" y="1049" on="0"/>
        <pt x="961" y="883" on="0"/>
        <pt x="884" y="829" on="1"/>
        <pt x="935" y="799" on="0"/>
        <pt x="1019" y="716" on="0"/>
        <pt x="1079" y="617" on="0"/>
        <pt x="1112" y="503" on="0"/>
        <pt x="1112" y="442" on="1"/>
        <pt x="1112" y="347" on="0"/>
        <pt x="1035" y="181" on="0"/>
        <pt x="903" y="56" on="0"/>
        <pt x="727" y="-16" on="0"/>
        <pt x="627" y="-16" on="1"/>
        <pt x="526" y="-16" on="0"/>
        <pt x="348" y="56" on="0"/>
        <pt x="216" y="181" on="0"/>
        <pt x="139" y="347" on="0"/>
        <pt x="139" y="442" on="1"/>
        <pt x="139" y="503" on="0"/>
        <pt x="172" y="618" on="0"/>
        <pt x="233" y="717" on="0"/>
        <pt x="318" y="800" on="0"/>
        <pt x="370" y="830" on="1"/>
        <pt x="294" y="885" on="0"/>
        <pt x="205" y="1050" on="0"/>
        <pt x="205" y="1147" on="1"/>
        <pt x="205" y="1229" on="0"/>
        <pt x="271" y="1374" on="0"/>
        <pt x="386" y="1482" on="0"/>
        <pt x="542" y="1544" on="0"/>
      </contour>
      <contour>
        <pt x="322" y="446" on="1"/>
        <pt x="322" y="387" on="0"/>
        <pt x="370" y="282" on="0"/>
        <pt x="453" y="204" on="0"/>
        <pt x="564" y="158" on="0"/>
        <pt x="627" y="158" on="1"/>
        <pt x="689" y="158" on="0"/>
        <pt x="799" y="204" on="0"/>
        <pt x="882" y="282" on="0"/>
        <pt x="930" y="387" on="0"/>
        <pt x="930" y="446" on="1"/>
        <pt x="930" y="504" on="0"/>
        <pt x="882" y="608" on="0"/>
        <pt x="799" y="686" on="0"/>
        <pt x="689" y="731" on="0"/>
        <pt x="627" y="731" on="1"/>
        <pt x="564" y="731" on="0"/>
        <pt x="453" y="686" on="0"/>
        <pt x="370" y="608" on="0"/>
        <pt x="322" y="504" on="0"/>
      </contour>
      <contour>
        <pt x="377" y="1143" on="1"/>
        <pt x="377" y="1093" on="0"/>
        <pt x="415" y="1006" on="0"/>
        <pt x="483" y="941" on="0"/>
        <pt x="576" y="903" on="0"/>
        <pt x="631" y="903" on="1"/>
        <pt x="682" y="903" on="0"/>
        <pt x="772" y="941" on="0"/>
        <pt x="841" y="1006" on="0"/>
        <pt x="881" y="1093" on="0"/>
        <pt x="881" y="1143" on="1"/>
        <pt x="881" y="1192" on="0"/>
        <pt x="841" y="1279" on="0"/>
        <pt x="772" y="1344" on="0"/>
        <pt x="682" y="1382" on="0"/>
        <pt x="631" y="1382" on="1"/>
        <pt x="576" y="1382" on="0"/>
        <pt x="483" y="1344" on="0"/>
        <pt x="415" y="1279" on="0"/>
        <pt x="377" y="1192" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 92 values pushed */
          121 74 1 121 68 1 123 29 1 124 7 1 2 49 43 41 51 51 18 34 31 2 5 61 0
          0 18 53 39 58 43 1 54 39 1 39 18 43 3 23 46 70 8 13 77 59 73 63 69 57
          69 1 69 71 73 3 56 66 70 5 77 56 70 48 31 1 31 76 36 70 28 48 23 1 23
          76 8 28 28 51 72 61 61 71 41 74 18 9 71 74 0 3
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ellipsis" xMin="205" yMin="-25" xMax="1845" yMax="270">
      <contour>
        <pt x="205" y="123" on="1"/>
        <pt x="205" y="153" on="0"/>
        <pt x="228" y="206" on="0"/>
        <pt x="269" y="247" on="0"/>
        <pt x="322" y="270" on="0"/>
        <pt x="352" y="270" on="1"/>
        <pt x="383" y="270" on="0"/>
        <pt x="437" y="247" on="0"/>
        <pt x="478" y="206" on="0"/>
        <pt x="502" y="153" on="0"/>
        <pt x="502" y="123" on="1"/>
        <pt x="502" y="93" on="0"/>
        <pt x="478" y="39" on="0"/>
        <pt x="437" y="-1" on="0"/>
        <pt x="383" y="-25" on="0"/>
        <pt x="352" y="-25" on="1"/>
        <pt x="322" y="-25" on="0"/>
        <pt x="269" y="-1" on="0"/>
        <pt x="228" y="39" on="0"/>
        <pt x="205" y="93" on="0"/>
      </contour>
      <contour>
        <pt x="877" y="123" on="1"/>
        <pt x="877" y="153" on="0"/>
        <pt x="900" y="206" on="0"/>
        <pt x="941" y="247" on="0"/>
        <pt x="994" y="270" on="0"/>
        <pt x="1024" y="270" on="1"/>
        <pt x="1055" y="270" on="0"/>
        <pt x="1109" y="247" on="0"/>
        <pt x="1150" y="206" on="0"/>
        <pt x="1174" y="153" on="0"/>
        <pt x="1174" y="123" on="1"/>
        <pt x="1174" y="93" on="0"/>
        <pt x="1150" y="39" on="0"/>
        <pt x="1109" y="-1" on="0"/>
        <pt x="1055" y="-25" on="0"/>
        <pt x="1024" y="-25" on="1"/>
        <pt x="994" y="-25" on="0"/>
        <pt x="941" y="-1" on="0"/>
        <pt x="900" y="39" on="0"/>
        <pt x="877" y="93" on="0"/>
      </contour>
      <contour>
        <pt x="1548" y="123" on="1"/>
        <pt x="1548" y="153" on="0"/>
        <pt x="1572" y="206" on="0"/>
        <pt x="1612" y="247" on="0"/>
        <pt x="1666" y="270" on="0"/>
        <pt x="1696" y="270" on="1"/>
        <pt x="1727" y="270" on="0"/>
        <pt x="1781" y="247" on="0"/>
        <pt x="1821" y="206" on="0"/>
        <pt x="1845" y="153" on="0"/>
        <pt x="1845" y="123" on="1"/>
        <pt x="1845" y="93" on="0"/>
        <pt x="1821" y="39" on="0"/>
        <pt x="1781" y="-1" on="0"/>
        <pt x="1727" y="-25" on="0"/>
        <pt x="1696" y="-25" on="1"/>
        <pt x="1666" y="-25" on="0"/>
        <pt x="1612" y="-1" on="0"/>
        <pt x="1572" y="39" on="0"/>
        <pt x="1548" y="93" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 28 values pushed */
          63 60 1 61 50 110 40 30 110 20 10 110 0 60 55 10 35 10 15 10 45 25 25 127 5
          1 5 17
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MDRP[01110]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="emdash" xMin="0" yMin="485" xMax="2048" yMax="647">
      <contour>
        <pt x="0" y="647" on="1"/>
        <pt x="2048" y="647" on="1"/>
        <pt x="2048" y="485" on="1"/>
        <pt x="0" y="485" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 5 3 4 2 115 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="endash" xMin="0" yMin="485" xMax="1024" yMax="647">
      <contour>
        <pt x="0" y="647" on="1"/>
        <pt x="1024" y="647" on="1"/>
        <pt x="1024" y="485" on="1"/>
        <pt x="0" y="485" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 5 3 4 2 115 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="equal" xMin="86" yMin="305" xMax="836" yMax="784">
      <contour>
        <pt x="86" y="446" on="1"/>
        <pt x="836" y="446" on="1"/>
        <pt x="836" y="305" on="1"/>
        <pt x="86" y="305" on="1"/>
      </contour>
      <contour>
        <pt x="86" y="784" on="1"/>
        <pt x="836" y="784" on="1"/>
        <pt x="836" y="643" on="1"/>
        <pt x="86" y="643" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 17 values pushed */
          6 1 9 7 48 0 1 0 8 2 115 0 0 8 6 115 4
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="eth" xMin="94" yMin="-4" xMax="1151" yMax="1526">
      <contour>
        <pt x="666" y="1526" on="1"/>
        <pt x="755" y="1364" on="1"/>
        <pt x="925" y="1419" on="1"/>
        <pt x="978" y="1255" on="1"/>
        <pt x="840" y="1210" on="1"/>
        <pt x="1034" y="858" on="1"/>
        <pt x="1085" y="765" on="0"/>
        <pt x="1151" y="593" on="0"/>
        <pt x="1151" y="504" on="1"/>
        <pt x="1151" y="390" on="0"/>
        <pt x="1064" y="203" on="0"/>
        <pt x="918" y="70" on="0"/>
        <pt x="729" y="-4" on="0"/>
        <pt x="627" y="-4" on="1"/>
        <pt x="519" y="-4" on="0"/>
        <pt x="326" y="67" on="0"/>
        <pt x="180" y="204" on="0"/>
        <pt x="94" y="402" on="0"/>
        <pt x="94" y="529" on="1"/>
        <pt x="94" y="632" on="0"/>
        <pt x="174" y="806" on="0"/>
        <pt x="307" y="930" on="0"/>
        <pt x="479" y="1000" on="0"/>
        <pt x="571" y="1000" on="1"/>
        <pt x="610" y="1000" on="0"/>
        <pt x="708" y="992" on="0"/>
        <pt x="770" y="966" on="1"/>
        <pt x="658" y="1152" on="1"/>
        <pt x="509" y="1104" on="1"/>
        <pt x="457" y="1268" on="1"/>
        <pt x="566" y="1303" on="1"/>
        <pt x="432" y="1526" on="1"/>
      </contour>
      <contour>
        <pt x="649" y="836" on="1"/>
        <pt x="575" y="836" on="0"/>
        <pt x="442" y="793" on="0"/>
        <pt x="341" y="709" on="0"/>
        <pt x="281" y="584" on="0"/>
        <pt x="281" y="502" on="1"/>
        <pt x="281" y="428" on="0"/>
        <pt x="336" y="306" on="0"/>
        <pt x="430" y="218" on="0"/>
        <pt x="554" y="170" on="0"/>
        <pt x="623" y="170" on="1"/>
        <pt x="696" y="170" on="0"/>
        <pt x="821" y="215" on="0"/>
        <pt x="913" y="300" on="0"/>
        <pt x="965" y="424" on="0"/>
        <pt x="965" y="502" on="1"/>
        <pt x="965" y="579" on="0"/>
        <pt x="912" y="703" on="0"/>
        <pt x="823" y="790" on="0"/>
        <pt x="709" y="836" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 77 values pushed */
          63 31 1 125 30 1 171 26 1 116 4 1 30 29 2 29 4 5 0 5 1 5 0 29 2
          48 29 1 116 0 1 29 0 18 47 83 8 53 37 83 18 52 63 2 175 2 2 2 2 30
          5 171 29 1 63 29 1 29 32 87 24 6 42 87 13 11 5 123 3 1 3 175 2 1 2
          0 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDAP[1]	/* MoveDirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          ISECT[ ]	/* MovePtToIntersect */
          SRP0[ ]	/* SetRefPoint0 */
          RDTG[ ]	/* RoundDownToGrid */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          MDRP[00100]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[0]	/* SetFVectorToAxis */
          MDRP[00100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="exclam" xMin="211" yMin="-12" xMax="471" yMax="1577">
      <contour>
        <pt x="211" y="121" on="1"/>
        <pt x="211" y="147" on="0"/>
        <pt x="232" y="194" on="0"/>
        <pt x="267" y="229" on="0"/>
        <pt x="315" y="250" on="0"/>
        <pt x="342" y="250" on="1"/>
        <pt x="368" y="250" on="0"/>
        <pt x="415" y="229" on="0"/>
        <pt x="450" y="194" on="0"/>
        <pt x="471" y="147" on="0"/>
        <pt x="471" y="121" on="1"/>
        <pt x="471" y="94" on="0"/>
        <pt x="450" y="46" on="0"/>
        <pt x="415" y="9" on="0"/>
        <pt x="368" y="-12" on="0"/>
        <pt x="342" y="-12" on="1"/>
        <pt x="315" y="-12" on="0"/>
        <pt x="267" y="9" on="0"/>
        <pt x="232" y="46" on="0"/>
        <pt x="211" y="94" on="0"/>
      </contour>
      <contour>
        <pt x="211" y="1577" on="1"/>
        <pt x="471" y="1577" on="1"/>
        <pt x="430" y="410" on="1"/>
        <pt x="252" y="410" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 80 values pushed */
          15 23 1 255 23 1 15 21 1 255 21 1 21 64 37 48 72 22 22 5 25 127 21 1 21
          64 29 36 72 21 68 20 23 23 20 5 7 4 13 68 13 2 13 111 15 15 17 11 3 75
          3 2 12 3 111 5 5 0 10 1 28 10 110 0 0 1 72 0 0 20 24 20 2 15 10
          23 192 5 1 5
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          MDRP[01110]	/* MoveDirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IP[ ]	/* InterpolatePts */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01001]	/* MoveIndirectRelPt */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01001]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          MDRP[01110]	/* MoveDirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="exclamdown" xMin="211" yMin="-471" xMax="471" yMax="1139">
      <contour>
        <pt x="211" y="1010" on="1"/>
        <pt x="211" y="1036" on="0"/>
        <pt x="232" y="1083" on="0"/>
        <pt x="267" y="1118" on="0"/>
        <pt x="315" y="1139" on="0"/>
        <pt x="342" y="1139" on="1"/>
        <pt x="368" y="1139" on="0"/>
        <pt x="415" y="1118" on="0"/>
        <pt x="450" y="1083" on="0"/>
        <pt x="471" y="1036" on="0"/>
        <pt x="471" y="1010" on="1"/>
        <pt x="471" y="983" on="0"/>
        <pt x="450" y="935" on="0"/>
        <pt x="415" y="898" on="0"/>
        <pt x="368" y="877" on="0"/>
        <pt x="342" y="877" on="1"/>
        <pt x="315" y="877" on="0"/>
        <pt x="267" y="898" on="0"/>
        <pt x="232" y="935" on="0"/>
        <pt x="211" y="983" on="0"/>
      </contour>
      <contour>
        <pt x="252" y="696" on="1"/>
        <pt x="430" y="696" on="1"/>
        <pt x="471" y="-471" on="1"/>
        <pt x="211" y="-471" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 31 values pushed */
          25 22 68 20 17 3 7 13 164 3 1 171 13 1 13 5 15 3 4 10 110 0 0 20 24
          23 14 21 15 5 6
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MDRP[11101]	/* MoveDirectRelPt */
          MDRP[01110]	/* MoveDirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          MDRP[00110]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="f" xMin="85" yMin="0" xMax="868" yMax="1556">
      <contour>
        <pt x="442" y="1036" on="1"/>
        <pt x="682" y="1036" on="1"/>
        <pt x="682" y="885" on="1"/>
        <pt x="442" y="885" on="1"/>
        <pt x="442" y="172" on="1"/>
        <pt x="604" y="172" on="1"/>
        <pt x="604" y="0" on="1"/>
        <pt x="100" y="0" on="1"/>
        <pt x="100" y="172" on="1"/>
        <pt x="256" y="172" on="1"/>
        <pt x="256" y="885" on="1"/>
        <pt x="85" y="885" on="1"/>
        <pt x="85" y="1036" on="1"/>
        <pt x="256" y="1036" on="1"/>
        <pt x="256" y="1198" on="1"/>
        <pt x="258" y="1288" on="0"/>
        <pt x="306" y="1422" on="0"/>
        <pt x="394" y="1512" on="0"/>
        <pt x="518" y="1556" on="0"/>
        <pt x="594" y="1556" on="1"/>
        <pt x="647" y="1556" on="0"/>
        <pt x="731" y="1546" on="0"/>
        <pt x="797" y="1529" on="0"/>
        <pt x="848" y="1509" on="0"/>
        <pt x="868" y="1499" on="1"/>
        <pt x="811" y="1366" on="1"/>
        <pt x="779" y="1383" on="0"/>
        <pt x="676" y="1407" on="0"/>
        <pt x="620" y="1407" on="1"/>
        <pt x="537" y="1407" on="0"/>
        <pt x="442" y="1304" on="0"/>
        <pt x="442" y="1204" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 47 values pushed */
          16 8 12 0 77 159 2 175 2 2 159 1 175 1 2 6 78 2 78 0 4 81 13 12 78
          8 78 48 10 1 10 32 28 87 19 0 10 2 85 1 12 6 9 5 80 7 10
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01110]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MIRP[11101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[01110]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="five" xMin="74" yMin="-31" xMax="1077" yMax="1516">
      <contour>
        <pt x="317" y="894" on="1"/>
        <pt x="373" y="932" on="0"/>
        <pt x="491" y="971" on="0"/>
        <pt x="567" y="971" on="1"/>
        <pt x="679" y="971" on="0"/>
        <pt x="867" y="891" on="0"/>
        <pt x="1002" y="755" on="0"/>
        <pt x="1077" y="574" on="0"/>
        <pt x="1077" y="473" on="1"/>
        <pt x="1077" y="371" on="0"/>
        <pt x="1003" y="188" on="0"/>
        <pt x="867" y="50" on="0"/>
        <pt x="676" y="-31" on="0"/>
        <pt x="559" y="-31" on="1"/>
        <pt x="470" y="-31" on="0"/>
        <pt x="316" y="16" on="0"/>
        <pt x="192" y="101" on="0"/>
        <pt x="101" y="219" on="0"/>
        <pt x="74" y="289" on="1"/>
        <pt x="238" y="371" on="1"/>
        <pt x="254" y="320" on="0"/>
        <pt x="316" y="233" on="0"/>
        <pt x="400" y="170" on="0"/>
        <pt x="502" y="135" on="0"/>
        <pt x="559" y="135" on="1"/>
        <pt x="631" y="135" on="0"/>
        <pt x="754" y="188" on="0"/>
        <pt x="845" y="280" on="0"/>
        <pt x="897" y="403" on="0"/>
        <pt x="897" y="473" on="1"/>
        <pt x="897" y="544" on="0"/>
        <pt x="845" y="665" on="0"/>
        <pt x="753" y="754" on="0"/>
        <pt x="630" y="805" on="0"/>
        <pt x="559" y="805" on="1"/>
        <pt x="479" y="805" on="0"/>
        <pt x="344" y="748" on="0"/>
        <pt x="299" y="700" on="1"/>
        <pt x="152" y="723" on="1"/>
        <pt x="152" y="1516" on="1"/>
        <pt x="1006" y="1516" on="1"/>
        <pt x="1006" y="1350" on="1"/>
        <pt x="317" y="1350" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 44 values pushed */
          57 32 1 57 26 1 127 16 1 122 15 1 3 13 13 38 29 83 8 40 44 48 44 1 37
          42 68 18 48 38 1 38 43 41 80 39 2 24 87 13 11 34 87 3
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00110]	/* MoveDirectRelPt */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="four" xMin="90" yMin="0" xMax="1141" yMax="1516">
      <contour>
        <pt x="92" y="596" on="1"/>
        <pt x="631" y="1516" on="1"/>
        <pt x="844" y="1516" on="1"/>
        <pt x="331" y="610" on="1"/>
        <pt x="719" y="610" on="1"/>
        <pt x="719" y="860" on="1"/>
        <pt x="915" y="874" on="1"/>
        <pt x="915" y="610" on="1"/>
        <pt x="1141" y="610" on="1"/>
        <pt x="1141" y="438" on="1"/>
        <pt x="915" y="438" on="1"/>
        <pt x="915" y="172" on="1"/>
        <pt x="1065" y="172" on="1"/>
        <pt x="1065" y="0" on="1"/>
        <pt x="573" y="0" on="1"/>
        <pt x="573" y="172" on="1"/>
        <pt x="719" y="172" on="1"/>
        <pt x="719" y="438" on="1"/>
        <pt x="90" y="438" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 50 values pushed */
          59 6 1 59 5 1 5 16 81 10 6 20 2 3 0 1 2 1 3 106 0 1 20 0 1
          3 52 0 1 0 19 50 1 1 2 1 15 12 80 14 8 1 2 17 9 85 0 4 4 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="fourinferior" xMin="1735" yMin="0" xMax="2320" yMax="760">
      <contour>
        <pt x="1735" y="303" on="1"/>
        <pt x="2015" y="760" on="1"/>
        <pt x="2163" y="760" on="1"/>
        <pt x="1890" y="305" on="1"/>
        <pt x="2073" y="305" on="1"/>
        <pt x="2073" y="469" on="1"/>
        <pt x="2208" y="469" on="1"/>
        <pt x="2208" y="305" on="1"/>
        <pt x="2320" y="305" on="1"/>
        <pt x="2320" y="195" on="1"/>
        <pt x="2208" y="195" on="1"/>
        <pt x="2208" y="0" on="1"/>
        <pt x="2073" y="0" on="1"/>
        <pt x="2073" y="195" on="1"/>
        <pt x="1737" y="195" on="1"/>
      </contour>
      <instructions><assembly>
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="foursuperior" xMin="115" yMin="846" xMax="680" yMax="1604">
      <contour>
        <pt x="115" y="1137" on="1"/>
        <pt x="393" y="1604" on="1"/>
        <pt x="524" y="1604" on="1"/>
        <pt x="256" y="1141" on="1"/>
        <pt x="446" y="1141" on="1"/>
        <pt x="446" y="1278" on="1"/>
        <pt x="565" y="1284" on="1"/>
        <pt x="565" y="1141" on="1"/>
        <pt x="680" y="1141" on="1"/>
        <pt x="680" y="1040" on="1"/>
        <pt x="565" y="1040" on="1"/>
        <pt x="565" y="846" on="1"/>
        <pt x="446" y="846" on="1"/>
        <pt x="446" y="1040" on="1"/>
        <pt x="115" y="1040" on="1"/>
      </contour>
      <instructions><assembly>
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="fraction" xMin="-43" yMin="-61" xMax="1432" yMax="1577">
      <contour>
        <pt x="1233" y="1577" on="1"/>
        <pt x="1432" y="1577" on="1"/>
        <pt x="156" y="-61" on="1"/>
        <pt x="-43" y="-61" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 28 values pushed */
          1 2 3 0 1 0 2 77 3 0 20 3 0 2 3 4 5 127 0 1 0 3 8 48 0
          1 0 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIAP[1]	/* MoveIndirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDRP[00100]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="g" xMin="92" yMin="-457" xMax="1044" yMax="1061">
      <contour>
        <pt x="858" y="91" on="1"/>
        <pt x="807" y="37" on="0"/>
        <pt x="672" y="-23" on="0"/>
        <pt x="586" y="-23" on="1"/>
        <pt x="481" y="-23" on="0"/>
        <pt x="300" y="50" on="0"/>
        <pt x="167" y="191" on="0"/>
        <pt x="92" y="396" on="0"/>
        <pt x="92" y="528" on="1"/>
        <pt x="92" y="648" on="0"/>
        <pt x="164" y="845" on="0"/>
        <pt x="296" y="984" on="0"/>
        <pt x="482" y="1061" on="0"/>
        <pt x="596" y="1061" on="1"/>
        <pt x="674" y="1061" on="0"/>
        <pt x="799" y="1026" on="0"/>
        <pt x="858" y="983" on="1"/>
        <pt x="858" y="1036" on="1"/>
        <pt x="1044" y="1036" on="1"/>
        <pt x="1044" y="41" on="1"/>
        <pt x="1044" y="-205" on="0"/>
        <pt x="811" y="-457" on="0"/>
        <pt x="565" y="-457" on="1"/>
        <pt x="511" y="-457" on="0"/>
        <pt x="393" y="-441" on="0"/>
        <pt x="278" y="-406" on="0"/>
        <pt x="169" y="-352" on="0"/>
        <pt x="123" y="-313" on="1"/>
        <pt x="223" y="-162" on="1"/>
        <pt x="253" y="-188" on="0"/>
        <pt x="330" y="-232" on="0"/>
        <pt x="418" y="-263" on="0"/>
        <pt x="512" y="-281" on="0"/>
        <pt x="559" y="-281" on="1"/>
        <pt x="636" y="-281" on="0"/>
        <pt x="749" y="-249" on="0"/>
        <pt x="822" y="-168" on="0"/>
        <pt x="858" y="-30" on="0"/>
        <pt x="858" y="76" on="1"/>
      </contour>
      <contour>
        <pt x="610" y="139" on="1"/>
        <pt x="656" y="139" on="0"/>
        <pt x="732" y="157" on="0"/>
        <pt x="794" y="186" on="0"/>
        <pt x="841" y="224" on="0"/>
        <pt x="858" y="245" on="1"/>
        <pt x="858" y="812" on="1"/>
        <pt x="807" y="857" on="0"/>
        <pt x="674" y="897" on="0"/>
        <pt x="604" y="897" on="1"/>
        <pt x="538" y="897" on="0"/>
        <pt x="422" y="848" on="0"/>
        <pt x="335" y="754" on="0"/>
        <pt x="285" y="618" on="0"/>
        <pt x="285" y="530" on="1"/>
        <pt x="285" y="434" on="0"/>
        <pt x="333" y="288" on="0"/>
        <pt x="419" y="189" on="0"/>
        <pt x="539" y="139" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 43 values pushed */
          63 58 1 54 56 1 57 50 1 116 29 1 0 45 81 18 59 53 83 27 8 58 33 87 22
          14 18 6 56 53 50 3 39 48 87 8 3 13 7 39 87 3 11
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="germandbls" xMin="16" yMin="-14" xMax="1168" yMax="1556">
      <contour>
        <pt x="588" y="964" on="1"/>
        <pt x="666" y="964" on="1"/>
        <pt x="730" y="967" on="0"/>
        <pt x="789" y="1001" on="0"/>
        <pt x="833" y="1049" on="0"/>
        <pt x="857" y="1108" on="0"/>
        <pt x="857" y="1138" on="1"/>
        <pt x="857" y="1188" on="0"/>
        <pt x="821" y="1276" on="0"/>
        <pt x="756" y="1338" on="0"/>
        <pt x="665" y="1370" on="0"/>
        <pt x="610" y="1370" on="1"/>
        <pt x="562" y="1370" on="0"/>
        <pt x="482" y="1335" on="0"/>
        <pt x="427" y="1273" on="0"/>
        <pt x="397" y="1187" on="0"/>
        <pt x="397" y="1136" on="1"/>
        <pt x="397" y="0" on="1"/>
        <pt x="16" y="0" on="1"/>
        <pt x="16" y="172" on="1"/>
        <pt x="201" y="172" on="1"/>
        <pt x="201" y="1159" on="1"/>
        <pt x="201" y="1229" on="0"/>
        <pt x="256" y="1371" on="0"/>
        <pt x="360" y="1485" on="0"/>
        <pt x="512" y="1556" on="0"/>
        <pt x="612" y="1556" on="1"/>
        <pt x="705" y="1556" on="0"/>
        <pt x="865" y="1492" on="0"/>
        <pt x="982" y="1379" on="0"/>
        <pt x="1049" y="1226" on="0"/>
        <pt x="1049" y="1142" on="1"/>
        <pt x="1049" y="1096" on="0"/>
        <pt x="1031" y="1019" on="0"/>
        <pt x="1001" y="954" on="0"/>
        <pt x="963" y="903" on="0"/>
        <pt x="943" y="883" on="1"/>
        <pt x="994" y="850" on="0"/>
        <pt x="1077" y="762" on="0"/>
        <pt x="1135" y="665" on="0"/>
        <pt x="1168" y="542" on="0"/>
        <pt x="1168" y="474" on="1"/>
        <pt x="1168" y="373" on="0"/>
        <pt x="1089" y="190" on="0"/>
        <pt x="952" y="58" on="0"/>
        <pt x="769" y="-14" on="0"/>
        <pt x="666" y="-14" on="1"/>
        <pt x="627" y="-14" on="0"/>
        <pt x="588" y="-8" on="1"/>
        <pt x="588" y="180" on="1"/>
        <pt x="608" y="175" on="0"/>
        <pt x="646" y="170" on="0"/>
        <pt x="666" y="170" on="1"/>
        <pt x="731" y="170" on="0"/>
        <pt x="844" y="219" on="0"/>
        <pt x="928" y="305" on="0"/>
        <pt x="976" y="419" on="0"/>
        <pt x="976" y="474" on="1"/>
        <pt x="976" y="539" on="0"/>
        <pt x="926" y="654" on="0"/>
        <pt x="842" y="729" on="0"/>
        <pt x="730" y="778" on="0"/>
        <pt x="668" y="778" on="1"/>
        <pt x="588" y="778" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 50 values pushed */
          52 55 1 125 44 1 115 28 1 123 14 1 57 83 41 65 19 78 17 81 21 64 31 83 6
          20 80 64 36 63 14 8 8 6 11 1 87 63 63 11 52 87 46 11 11 87 26 0 18 10
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01100]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11100]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[01110]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="grave" xMin="100" yMin="1178" xMax="532" yMax="1477">
      <contour>
        <pt x="387" y="1178" on="1"/>
        <pt x="100" y="1460" on="1"/>
        <pt x="100" y="1477" on="1"/>
        <pt x="348" y="1477" on="1"/>
        <pt x="532" y="1178" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 7 values pushed */
          4 161 2 5 2 2 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="greater" xMin="164" yMin="184" xMax="1007" yMax="1184">
      <contour>
        <pt x="1007" y="605" on="1"/>
        <pt x="164" y="184" on="1"/>
        <pt x="164" y="369" on="1"/>
        <pt x="842" y="684" on="1"/>
        <pt x="164" y="999" on="1"/>
        <pt x="164" y="1184" on="1"/>
        <pt x="1007" y="761" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 54 values pushed */
          124 3 1 0 1 2 3 0 3 1 77 2 3 20 2 3 1 2 3 4 5 6 3 6 4
          77 5 6 20 5 6 4 5 8 48 6 1 6 5 2 6 6 2 123 5 1 5 115 2 1
          48 2 1 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDRP[00110]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[0]	/* SetFVectorToAxis */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[0]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[0]	/* SetFVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[0]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="guillemotleft" xMin="102" yMin="172" xMax="938" yMax="958">
      <contour>
        <pt x="514" y="172" on="1"/>
        <pt x="322" y="172" on="1"/>
        <pt x="102" y="565" on="1"/>
        <pt x="322" y="958" on="1"/>
        <pt x="514" y="958" on="1"/>
        <pt x="285" y="565" on="1"/>
      </contour>
      <contour>
        <pt x="938" y="172" on="1"/>
        <pt x="745" y="172" on="1"/>
        <pt x="526" y="565" on="1"/>
        <pt x="745" y="958" on="1"/>
        <pt x="938" y="958" on="1"/>
        <pt x="709" y="565" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 34 values pushed */
          11 81 8 5 81 2 7 9 9 1 63 3 127 3 175 3 3 3 3 48 2 112 2 160 2
          3 2 12 9 6 7 3 6 1
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="guillemotright" xMin="102" yMin="172" xMax="938" yMax="958">
      <contour>
        <pt x="332" y="565" on="1"/>
        <pt x="102" y="958" on="1"/>
        <pt x="295" y="958" on="1"/>
        <pt x="514" y="565" on="1"/>
        <pt x="295" y="172" on="1"/>
        <pt x="102" y="172" on="1"/>
      </contour>
      <contour>
        <pt x="756" y="565" on="1"/>
        <pt x="526" y="958" on="1"/>
        <pt x="719" y="958" on="1"/>
        <pt x="938" y="565" on="1"/>
        <pt x="719" y="172" on="1"/>
        <pt x="526" y="172" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 30 values pushed */
          9 81 6 3 10 8 8 4 48 2 112 2 160 2 3 2 2 3 81 127 0 1 0 12 11
          7 6 5 1 6
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="guilsinglleft" xMin="102" yMin="172" xMax="514" yMax="958">
      <contour>
        <pt x="514" y="172" on="1"/>
        <pt x="322" y="172" on="1"/>
        <pt x="102" y="565" on="1"/>
        <pt x="322" y="958" on="1"/>
        <pt x="514" y="958" on="1"/>
        <pt x="285" y="565" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 39 values pushed */
          63 7 111 7 127 7 3 7 5 81 2 1 63 3 111 3 127 3 143 3 175 3 5 3 3
          48 2 96 2 112 2 160 2 4 2 6 4 6 1
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          MDRP[01110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="guilsinglright" xMin="102" yMin="172" xMax="514" yMax="958">
      <contour>
        <pt x="332" y="565" on="1"/>
        <pt x="102" y="958" on="1"/>
        <pt x="295" y="958" on="1"/>
        <pt x="514" y="565" on="1"/>
        <pt x="295" y="172" on="1"/>
        <pt x="102" y="172" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 20 values pushed */
          4 48 2 112 2 160 2 3 2 2 3 81 127 0 1 0 6 5 1 6
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="h" xMin="100" yMin="0" xMax="1280" yMax="1556">
      <contour>
        <pt x="114" y="1556" on="1"/>
        <pt x="442" y="1556" on="1"/>
        <pt x="442" y="922" on="1"/>
        <pt x="448" y="922" on="1"/>
        <pt x="476" y="950" on="0"/>
        <pt x="549" y="999" on="0"/>
        <pt x="629" y="1035" on="0"/>
        <pt x="715" y="1055" on="0"/>
        <pt x="762" y="1055" on="1"/>
        <pt x="845" y="1055" on="0"/>
        <pt x="979" y="1009" on="0"/>
        <pt x="1073" y="915" on="0"/>
        <pt x="1124" y="768" on="0"/>
        <pt x="1124" y="668" on="1"/>
        <pt x="1124" y="172" on="1"/>
        <pt x="1280" y="172" on="1"/>
        <pt x="1280" y="0" on="1"/>
        <pt x="788" y="0" on="1"/>
        <pt x="788" y="172" on="1"/>
        <pt x="930" y="172" on="1"/>
        <pt x="930" y="645" on="1"/>
        <pt x="930" y="764" on="0"/>
        <pt x="809" y="887" on="0"/>
        <pt x="696" y="887" on="1"/>
        <pt x="632" y="887" on="0"/>
        <pt x="500" y="826" on="0"/>
        <pt x="442" y="780" on="1"/>
        <pt x="442" y="172" on="1"/>
        <pt x="592" y="172" on="1"/>
        <pt x="592" y="0" on="1"/>
        <pt x="100" y="0" on="1"/>
        <pt x="100" y="172" on="1"/>
        <pt x="256" y="172" on="1"/>
        <pt x="256" y="1384" on="1"/>
        <pt x="114" y="1384" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 11 values pushed */
          22 32 16 0 77 11 24 12 1 77 6
          PUSHW[ ]	/* 1 value pushed */
          -32
          NPUSHB[ ]	/* 65 values pushed */
          12 1 77 52 26 1 6 8 12 1 77 48 5 1 18 78 20 81 8 2 16 78 48 14 1
          14 36 207 36 1 31 34 78 32 28 78 26 2 81 192 32 1 48 32 1 32 35 28 32 80
          30 10 15 19 80 17 10 23 87 8 7 33 80 0 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11100]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          MIRP[11101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[01100]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11100]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[01110]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="hungarumlaut" xMin="512" yMin="1485" xMax="1174" yMax="1907">
      <contour>
        <pt x="1174" y="1860" on="1"/>
        <pt x="928" y="1485" on="1"/>
        <pt x="829" y="1530" on="1"/>
        <pt x="1067" y="1907" on="1"/>
      </contour>
      <contour>
        <pt x="852" y="1860" on="1"/>
        <pt x="610" y="1485" on="1"/>
        <pt x="512" y="1530" on="1"/>
        <pt x="745" y="1907" on="1"/>
      </contour>
      <instructions><assembly>
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="hyphen" xMin="94" yMin="496" xMax="645" yMax="668">
      <contour>
        <pt x="94" y="496" on="1"/>
        <pt x="94" y="668" on="1"/>
        <pt x="645" y="668" on="1"/>
        <pt x="645" y="496" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 12 values pushed */
          3 5 48 0 160 0 2 0 4 3 115 1
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01110]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="i" xMin="92" yMin="0" xMax="586" yMax="1532">
      <contour>
        <pt x="92" y="1036" on="1"/>
        <pt x="430" y="1036" on="1"/>
        <pt x="430" y="172" on="1"/>
        <pt x="586" y="172" on="1"/>
        <pt x="586" y="0" on="1"/>
        <pt x="94" y="0" on="1"/>
        <pt x="94" y="172" on="1"/>
        <pt x="242" y="172" on="1"/>
        <pt x="242" y="864" on="1"/>
        <pt x="92" y="864" on="1"/>
      </contour>
      <contour>
        <pt x="207" y="1403" on="1"/>
        <pt x="207" y="1429" on="0"/>
        <pt x="228" y="1476" on="0"/>
        <pt x="263" y="1511" on="0"/>
        <pt x="311" y="1532" on="0"/>
        <pt x="338" y="1532" on="1"/>
        <pt x="364" y="1532" on="0"/>
        <pt x="411" y="1511" on="0"/>
        <pt x="446" y="1476" on="0"/>
        <pt x="467" y="1429" on="0"/>
        <pt x="467" y="1403" on="1"/>
        <pt x="467" y="1376" on="0"/>
        <pt x="446" y="1328" on="0"/>
        <pt x="411" y="1291" on="0"/>
        <pt x="364" y="1270" on="0"/>
        <pt x="338" y="1270" on="1"/>
        <pt x="311" y="1270" on="0"/>
        <pt x="263" y="1291" on="0"/>
        <pt x="228" y="1328" on="0"/>
        <pt x="207" y="1376" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 39 values pushed */
          27 13 111 15 17 23 111 25 15 25 20 110 10 10 6 9 78 7 31 3 78 1 81 7 30
          3 7 80 5 10 15 127 25 1 25 8 80 0 6
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDRP[11110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDRP[01101]	/* MoveDirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11100]	/* MoveDirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[11110]	/* MoveIndirectRelPt */
          MDRP[01110]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="iacute" xMin="59" yMin="0" xMax="566" yMax="1477">
      <component glyphName="dotlessi" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="29" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="icircumflex" xMin="58" yMin="0" xMax="623" yMax="1489">
      <component glyphName="dotlessi" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="-159" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="idieresis" xMin="13" yMin="0" xMax="593" yMax="1532">
      <component glyphName="dotlessi" x="33" y="0" flags="0x4"/>
      <component glyphName="dotaccent" x="159" y="0" flags="0x4"/>
      <component glyphName="dotaccent" x="-161" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="igrave" xMin="0" yMin="0" xMax="553" yMax="1477">
      <component glyphName="dotlessi" x="0" y="0" flags="0x204"/>
      <component glyphName="grave" x="-100" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="j" xMin="61" yMin="-471" xMax="444" yMax="1520">
      <contour>
        <pt x="84" y="1036" on="1"/>
        <pt x="420" y="1036" on="1"/>
        <pt x="420" y="-80" on="1"/>
        <pt x="420" y="-169" on="0"/>
        <pt x="374" y="-312" on="0"/>
        <pt x="287" y="-413" on="0"/>
        <pt x="161" y="-469" on="0"/>
        <pt x="80" y="-471" on="1"/>
        <pt x="61" y="-332" on="1"/>
        <pt x="150" y="-319" on="0"/>
        <pt x="231" y="-176" on="0"/>
        <pt x="231" y="-59" on="1"/>
        <pt x="231" y="864" on="1"/>
        <pt x="84" y="864" on="1"/>
      </contour>
      <contour>
        <pt x="207" y="1403" on="1"/>
        <pt x="207" y="1427" on="0"/>
        <pt x="226" y="1469" on="0"/>
        <pt x="258" y="1501" on="0"/>
        <pt x="301" y="1520" on="0"/>
        <pt x="326" y="1520" on="1"/>
        <pt x="350" y="1520" on="0"/>
        <pt x="393" y="1501" on="0"/>
        <pt x="425" y="1469" on="0"/>
        <pt x="444" y="1427" on="0"/>
        <pt x="444" y="1403" on="1"/>
        <pt x="444" y="1378" on="0"/>
        <pt x="425" y="1334" on="0"/>
        <pt x="393" y="1301" on="0"/>
        <pt x="350" y="1282" on="0"/>
        <pt x="326" y="1282" on="1"/>
        <pt x="301" y="1282" on="0"/>
        <pt x="258" y="1301" on="0"/>
        <pt x="226" y="1334" on="0"/>
        <pt x="207" y="1378" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 34 values pushed */
          21 27 111 29 31 17 111 19 29 19 24 110 14 14 12 35 2 81 0 78 12 34 63 19 1
          19 127 29 1 29 12 80 0 6
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDRP[11110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDRP[01101]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MDRP[01110]	/* MoveDirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="k" xMin="92" yMin="0" xMax="1235" yMax="1556">
      <contour>
        <pt x="92" y="1556" on="1"/>
        <pt x="457" y="1556" on="1"/>
        <pt x="457" y="1384" on="1"/>
        <pt x="455" y="1384" on="1"/>
        <pt x="455" y="610" on="1"/>
        <pt x="635" y="610" on="1"/>
        <pt x="881" y="864" on="1"/>
        <pt x="819" y="864" on="1"/>
        <pt x="819" y="1036" on="1"/>
        <pt x="1212" y="1036" on="1"/>
        <pt x="1212" y="864" on="1"/>
        <pt x="1081" y="864" on="1"/>
        <pt x="766" y="539" on="1"/>
        <pt x="1110" y="172" on="1"/>
        <pt x="1235" y="172" on="1"/>
        <pt x="1235" y="0" on="1"/>
        <pt x="1016" y="0" on="1"/>
        <pt x="592" y="463" on="1"/>
        <pt x="455" y="463" on="1"/>
        <pt x="455" y="172" on="1"/>
        <pt x="541" y="172" on="1"/>
        <pt x="541" y="0" on="1"/>
        <pt x="98" y="0" on="1"/>
        <pt x="98" y="172" on="1"/>
        <pt x="268" y="172" on="1"/>
        <pt x="268" y="1384" on="1"/>
        <pt x="92" y="1384" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 87 values pushed */
          63 27 1 52 12 1 48 4 1 6 5 12 11 6 11 5 89 12 11 20 12 11 5 12 13
          16 17 12 17 13 89 16 17 20 16 17 13 16 121 17 1 17 17 192 20 1 20 78 18 4
          81 26 78 192 24 1 24 27 16 28 14 9 9 11 20 24 80 22 10 17 14 80 16 10 77
          11 1 11 11 10 80 8 6 25 80 0 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDRP[01110]	/* MoveDirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11100]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01110]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[01100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10100]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="l" xMin="92" yMin="0" xMax="584" yMax="1556">
      <contour>
        <pt x="92" y="1556" on="1"/>
        <pt x="428" y="1556" on="1"/>
        <pt x="428" y="172" on="1"/>
        <pt x="584" y="172" on="1"/>
        <pt x="584" y="0" on="1"/>
        <pt x="92" y="0" on="1"/>
        <pt x="92" y="172" on="1"/>
        <pt x="242" y="172" on="1"/>
        <pt x="242" y="1384" on="1"/>
        <pt x="92" y="1384" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 20 values pushed */
          6 9 78 7 10 11 4 78 2 81 8 3 7 80 5 10 8 80 0 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MDRP[01110]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11100]	/* MoveDirectRelPt */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="less" xMin="10" yMin="184" xMax="853" yMax="1184">
      <contour>
        <pt x="10" y="761" on="1"/>
        <pt x="853" y="1184" on="1"/>
        <pt x="853" y="999" on="1"/>
        <pt x="175" y="684" on="1"/>
        <pt x="853" y="369" on="1"/>
        <pt x="853" y="184" on="1"/>
        <pt x="10" y="605" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 51 values pushed */
          116 3 1 6 5 4 3 6 3 5 77 4 3 20 4 3 5 4 3 2 1 0 3 0 2
          77 1 0 20 1 0 2 1 63 0 1 0 0 0 1 116 4 1 48 4 1 4 123 1 1
          1
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDAP[1]	/* MoveDirectAbsPt */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[0]	/* SetFVectorToAxis */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[0]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[0]	/* SetFVectorToAxis */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[0]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="logicalnot" xMin="49" yMin="432" xMax="1143" yMax="999">
      <contour>
        <pt x="1143" y="999" on="1"/>
        <pt x="1143" y="432" on="1"/>
        <pt x="961" y="432" on="1"/>
        <pt x="961" y="815" on="1"/>
        <pt x="49" y="815" on="1"/>
        <pt x="49" y="999" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 9 values pushed */
          3 81 1 7 4 6 3 115 5
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00110]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="m" xMin="100" yMin="0" xMax="1950" yMax="1055">
      <contour>
        <pt x="100" y="1036" on="1"/>
        <pt x="430" y="1036" on="1"/>
        <pt x="430" y="915" on="1"/>
        <pt x="432" y="915" on="1"/>
        <pt x="466" y="944" on="0"/>
        <pt x="541" y="995" on="0"/>
        <pt x="623" y="1033" on="0"/>
        <pt x="712" y="1055" on="0"/>
        <pt x="760" y="1055" on="1"/>
        <pt x="872" y="1055" on="0"/>
        <pt x="1034" y="972" on="0"/>
        <pt x="1078" y="884" on="1"/>
        <pt x="1116" y="918" on="0"/>
        <pt x="1200" y="981" on="0"/>
        <pt x="1291" y="1027" on="0"/>
        <pt x="1391" y="1055" on="0"/>
        <pt x="1445" y="1055" on="1"/>
        <pt x="1529" y="1055" on="0"/>
        <pt x="1663" y="1009" on="0"/>
        <pt x="1757" y="915" on="0"/>
        <pt x="1806" y="768" on="0"/>
        <pt x="1806" y="668" on="1"/>
        <pt x="1806" y="172" on="1"/>
        <pt x="1950" y="172" on="1"/>
        <pt x="1950" y="0" on="1"/>
        <pt x="1466" y="0" on="1"/>
        <pt x="1466" y="172" on="1"/>
        <pt x="1612" y="172" on="1"/>
        <pt x="1612" y="645" on="1"/>
        <pt x="1612" y="764" on="0"/>
        <pt x="1492" y="887" on="0"/>
        <pt x="1379" y="887" on="1"/>
        <pt x="1312" y="887" on="0"/>
        <pt x="1172" y="823" on="0"/>
        <pt x="1122" y="774" on="1"/>
        <pt x="1122" y="172" on="1"/>
        <pt x="1265" y="172" on="1"/>
        <pt x="1265" y="0" on="1"/>
        <pt x="782" y="0" on="1"/>
        <pt x="782" y="172" on="1"/>
        <pt x="928" y="172" on="1"/>
        <pt x="928" y="645" on="1"/>
        <pt x="928" y="764" on="0"/>
        <pt x="807" y="887" on="0"/>
        <pt x="694" y="887" on="1"/>
        <pt x="629" y="887" on="0"/>
        <pt x="497" y="825" on="0"/>
        <pt x="438" y="779" on="1"/>
        <pt x="438" y="172" on="1"/>
        <pt x="584" y="172" on="1"/>
        <pt x="584" y="0" on="1"/>
        <pt x="100" y="0" on="1"/>
        <pt x="100" y="172" on="1"/>
        <pt x="244" y="172" on="1"/>
        <pt x="244" y="864" on="1"/>
        <pt x="100" y="864" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 100 values pushed */
          43 32 16 0 77 30 32 16 0 77 18 24 12 1 77 14 16 12 1 77 13 32 12 1 77
          10 32 12 1 77 5 16 12 1 77 4 32 12 1 77 11 11 41 37 78 35 81 207 39 1
          39 78 41 41 54 207 25 1 25 78 27 81 12 4 3 63 3 1 16 8 3 3 54 23 78
          48 21 1 21 57 127 57 207 57 2 2 1 1 50 78 48 81 52 0 78 54 56 34 47 47
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 35 values pushed */
          12 1 77 52 47 1 47 54 53 49 80 51 10 40 36 80 38 10 27 23 80 25 10 31 87
          16 7 44 87 8 7 54 80 0 6
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01110]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTHG[ ]	/* RoundToHalfGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="macron" xMin="39" yMin="1229" xMax="797" yMax="1346">
      <contour>
        <pt x="797" y="1229" on="1"/>
        <pt x="39" y="1229" on="1"/>
        <pt x="39" y="1346" on="1"/>
        <pt x="797" y="1346" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 7 values pushed */
          0 5 2 4 0 115 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00110]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="minus" xMin="51" yMin="485" xMax="1075" yMax="647">
      <contour>
        <pt x="51" y="647" on="1"/>
        <pt x="1075" y="647" on="1"/>
        <pt x="1075" y="485" on="1"/>
        <pt x="51" y="485" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 7 values pushed */
          2 5 3 4 2 115 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00110]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="mu" xMin="158" yMin="-471" xMax="1133" yMax="1036">
      <contour>
        <pt x="1018" y="172" on="1"/>
        <pt x="1133" y="172" on="1"/>
        <pt x="1133" y="0" on="1"/>
        <pt x="831" y="0" on="1"/>
        <pt x="831" y="96" on="1"/>
        <pt x="761" y="42" on="0"/>
        <pt x="596" y="-18" on="0"/>
        <pt x="502" y="-18" on="1"/>
        <pt x="417" y="-18" on="0"/>
        <pt x="354" y="7" on="1"/>
        <pt x="354" y="-471" on="1"/>
        <pt x="158" y="-471" on="1"/>
        <pt x="158" y="1036" on="1"/>
        <pt x="354" y="1036" on="1"/>
        <pt x="354" y="391" on="1"/>
        <pt x="354" y="272" on="0"/>
        <pt x="464" y="150" on="0"/>
        <pt x="567" y="150" on="1"/>
        <pt x="628" y="150" on="0"/>
        <pt x="763" y="194" on="0"/>
        <pt x="823" y="233" on="1"/>
        <pt x="823" y="1036" on="1"/>
        <pt x="1018" y="1036" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 42 values pushed */
          127 8 1 17 7 7 14 3 20 81 1 78 22 24 9 14 81 12 23 21 6 12 6 11 14
          20 4 61 4 125 4 2 4 1 17 87 7 11 1 80 3 10
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01110]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="multiply" xMin="133" yMin="96" xMax="1155" yMax="1247">
      <contour>
        <pt x="525" y="676" on="1"/>
        <pt x="152" y="1124" on="1"/>
        <pt x="297" y="1247" on="1"/>
        <pt x="650" y="825" on="1"/>
        <pt x="991" y="1233" on="1"/>
        <pt x="1151" y="1118" on="1"/>
        <pt x="778" y="671" on="1"/>
        <pt x="1155" y="221" on="1"/>
        <pt x="1004" y="102" on="1"/>
        <pt x="654" y="522" on="1"/>
        <pt x="299" y="96" on="1"/>
        <pt x="133" y="207" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 81 values pushed */
          63 12 1 122 10 1 57 10 1 54 2 118 2 2 13 9 10 5 8 1 6 10 5 7 2
          5 10 11 4 5 4 10 76 11 4 20 11 4 10 3 11 4 7 2 0 11 4 8 1 11
          2 7 7 76 8 1 20 8 1 58 8 1 8 59 4 1 4 12 1 11 53 8 1 8 7
          57 4 1 4 2 1
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MDRP[00110]	/* MoveDirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDPVTL[1]	/* SetDualPVectorToLine */
          CALL[ ]	/* CallFunction */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          ISECT[ ]	/* MovePtToIntersect */
          ISECT[ ]	/* MovePtToIntersect */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10100]	/* MoveDirectRelPt */
          ISECT[ ]	/* MovePtToIntersect */
          ISECT[ ]	/* MovePtToIntersect */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDRP[01110]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="n" xMin="100" yMin="0" xMax="1266" yMax="1055">
      <contour>
        <pt x="782" y="172" on="1"/>
        <pt x="928" y="172" on="1"/>
        <pt x="928" y="645" on="1"/>
        <pt x="928" y="764" on="0"/>
        <pt x="807" y="887" on="0"/>
        <pt x="694" y="887" on="1"/>
        <pt x="629" y="887" on="0"/>
        <pt x="497" y="825" on="0"/>
        <pt x="438" y="779" on="1"/>
        <pt x="438" y="172" on="1"/>
        <pt x="584" y="172" on="1"/>
        <pt x="584" y="0" on="1"/>
        <pt x="100" y="0" on="1"/>
        <pt x="100" y="172" on="1"/>
        <pt x="244" y="172" on="1"/>
        <pt x="244" y="864" on="1"/>
        <pt x="100" y="864" on="1"/>
        <pt x="100" y="1036" on="1"/>
        <pt x="430" y="1036" on="1"/>
        <pt x="430" y="914" on="1"/>
        <pt x="432" y="914" on="1"/>
        <pt x="465" y="943" on="0"/>
        <pt x="540" y="995" on="0"/>
        <pt x="622" y="1033" on="0"/>
        <pt x="711" y="1055" on="0"/>
        <pt x="760" y="1055" on="1"/>
        <pt x="843" y="1055" on="0"/>
        <pt x="977" y="1009" on="0"/>
        <pt x="1071" y="915" on="0"/>
        <pt x="1122" y="768" on="0"/>
        <pt x="1122" y="668" on="1"/>
        <pt x="1122" y="172" on="1"/>
        <pt x="1266" y="172" on="1"/>
        <pt x="1266" y="0" on="1"/>
        <pt x="782" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 19 values pushed */
          28 32 12 1 77 28 16 11 1 77 55 28 1 26 64 16 1 77 23
          PUSHW[ ]	/* 1 value pushed */
          -64
          PUSHB[ ]	/* 4 values pushed */
          16 1 77 23
          PUSHW[ ]	/* 1 value pushed */
          -16
          PUSHB[ ]	/* 4 values pushed */
          12 1 77 22
          PUSHW[ ]	/* 1 value pushed */
          -24
          NPUSHB[ ]	/* 38 values pushed */
          16 1 77 21 64 12 1 77 7 48 12 1 77 7 24 11 1 77 4 32 11 1 77 4 64
          16 0 77 141 4 1 27 16 11 12 1 76 21
          PUSHW[ ]	/* 1 value pushed */
          -24
          PUSHB[ ]	/* 4 values pushed */
          16 1 77 8
          PUSHW[ ]	/* 1 value pushed */
          -48
          PUSHB[ ]	/* 4 values pushed */
          16 1 77 8
          PUSHW[ ]	/* 1 value pushed */
          -32
          PUSHB[ ]	/* 7 values pushed */
          11 1 77 52 8 1 7
          PUSHW[ ]	/* 1 value pushed */
          -16
          PUSHB[ ]	/* 4 values pushed */
          16 1 77 7
          PUSHW[ ]	/* 1 value pushed */
          -32
          NPUSHB[ ]	/* 65 values pushed */
          11 1 77 3 32 11 1 77 235 20 1 132 20 1 77 20 1 43 20 1 20 25 14 31 34
          15 0 47 0 207 0 3 0 78 2 81 33 78 31 64 27 1 77 48 31 1 31 36 13 17
          78 14 19 10 78 8 81 192 14 1 14 35 3 28 28
          PUSHW[ ]	/* 1 value pushed */
          -8
          NPUSHB[ ]	/* 29 values pushed */
          11 0 77 28 32 25 32 1 80 34 10 5 87 25 7 8 128 19 1 19 15 80 17 6 10
          14 80 12 10
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11100]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01100]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11100]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[01110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="nine" xMin="103" yMin="0" xMax="1160" yMax="1541">
      <contour>
        <pt x="430" y="0" on="1"/>
        <pt x="779" y="572" on="1"/>
        <pt x="729" y="552" on="0"/>
        <pt x="647" y="538" on="0"/>
        <pt x="600" y="538" on="1"/>
        <pt x="512" y="538" on="0"/>
        <pt x="323" y="607" on="0"/>
        <pt x="190" y="732" on="0"/>
        <pt x="103" y="915" on="0"/>
        <pt x="103" y="1009" on="1"/>
        <pt x="103" y="1136" on="0"/>
        <pt x="189" y="1334" on="0"/>
        <pt x="335" y="1470" on="0"/>
        <pt x="528" y="1541" on="0"/>
        <pt x="636" y="1541" on="1"/>
        <pt x="744" y="1541" on="0"/>
        <pt x="931" y="1469" on="0"/>
        <pt x="1077" y="1334" on="0"/>
        <pt x="1160" y="1147" on="0"/>
        <pt x="1160" y="1033" on="1"/>
        <pt x="1160" y="945" on="0"/>
        <pt x="1093" y="773" on="0"/>
        <pt x="1043" y="679" on="1"/>
        <pt x="663" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="631" y="1367" on="1"/>
        <pt x="563" y="1367" on="0"/>
        <pt x="439" y="1319" on="0"/>
        <pt x="345" y="1231" on="0"/>
        <pt x="289" y="1109" on="0"/>
        <pt x="289" y="1035" on="1"/>
        <pt x="289" y="953" on="0"/>
        <pt x="349" y="828" on="0"/>
        <pt x="450" y="744" on="0"/>
        <pt x="575" y="702" on="0"/>
        <pt x="638" y="702" on="1"/>
        <pt x="730" y="702" on="0"/>
        <pt x="831" y="747" on="0"/>
        <pt x="921" y="828" on="0"/>
        <pt x="973" y="953" on="0"/>
        <pt x="973" y="1035" on="1"/>
        <pt x="973" y="1113" on="0"/>
        <pt x="921" y="1237" on="0"/>
        <pt x="829" y="1322" on="0"/>
        <pt x="704" y="1367" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 47 values pushed */
          123 22 1 123 1 1 6 12 17 16 60 12 1 53 16 1 3 12 16 9 39 70 19 45 29
          70 52 9 1 9 44 23 68 48 0 1 2 0 24 74 14 3 34 74 4 0 8
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="nonmarkingreturn"/><!-- contains no outline data -->

    <TTGlyph name="ntilde" xMin="100" yMin="0" xMax="1266" yMax="1415">
      <component glyphName="n" x="0" y="0" flags="0x204"/>
      <component glyphName="tilde" x="235" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="numbersign" xMin="20" yMin="0" xMax="1382" yMax="1516">
      <contour>
        <pt x="170" y="1198" on="1"/>
        <pt x="422" y="1198" on="1"/>
        <pt x="485" y="1516" on="1"/>
        <pt x="676" y="1516" on="1"/>
        <pt x="614" y="1198" on="1"/>
        <pt x="965" y="1198" on="1"/>
        <pt x="1028" y="1516" on="1"/>
        <pt x="1219" y="1516" on="1"/>
        <pt x="1157" y="1198" on="1"/>
        <pt x="1382" y="1198" on="1"/>
        <pt x="1343" y="999" on="1"/>
        <pt x="1118" y="999" on="1"/>
        <pt x="1037" y="584" on="1"/>
        <pt x="1276" y="584" on="1"/>
        <pt x="1239" y="389" on="1"/>
        <pt x="999" y="389" on="1"/>
        <pt x="924" y="0" on="1"/>
        <pt x="731" y="0" on="1"/>
        <pt x="807" y="389" on="1"/>
        <pt x="456" y="389" on="1"/>
        <pt x="381" y="0" on="1"/>
        <pt x="184" y="0" on="1"/>
        <pt x="261" y="389" on="1"/>
        <pt x="20" y="389" on="1"/>
        <pt x="61" y="584" on="1"/>
        <pt x="300" y="584" on="1"/>
        <pt x="382" y="999" on="1"/>
        <pt x="129" y="999" on="1"/>
      </contour>
      <contour>
        <pt x="494" y="584" on="1"/>
        <pt x="845" y="584" on="1"/>
        <pt x="926" y="999" on="1"/>
        <pt x="575" y="999" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 89 values pushed */
          121 22 1 117 8 1 4 31 28 19 20 3 3 20 21 2 3 2 20 76 21 2 20 21 2
          20 21 7 16 17 6 7 6 16 76 17 6 20 17 6 16 5 30 29 18 17 6 17 9 127
          6 1 6 2 13 29 29 24 23 19 19 18 14 72 28 112 24 1 24 21 8 17 8 6 2
          2 2 31 30 30 27 10 72 9 5 5 4 4 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          RDTG[ ]	/* RoundDownToGrid */
          SDPVTL[1]	/* SetDualPVectorToLine */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="o" xMin="86" yMin="-31" xMax="1124" yMax="1066">
      <contour>
        <pt x="86" y="518" on="1"/>
        <pt x="87" y="641" on="0"/>
        <pt x="164" y="843" on="0"/>
        <pt x="302" y="988" on="0"/>
        <pt x="492" y="1066" on="0"/>
        <pt x="606" y="1066" on="1"/>
        <pt x="721" y="1066" on="0"/>
        <pt x="912" y="988" on="0"/>
        <pt x="1048" y="845" on="0"/>
        <pt x="1124" y="643" on="0"/>
        <pt x="1124" y="520" on="1"/>
        <pt x="1124" y="399" on="0"/>
        <pt x="1048" y="196" on="0"/>
        <pt x="912" y="50" on="0"/>
        <pt x="721" y="-31" on="0"/>
        <pt x="606" y="-31" on="1"/>
        <pt x="489" y="-31" on="0"/>
        <pt x="299" y="49" on="0"/>
        <pt x="163" y="194" on="0"/>
        <pt x="87" y="396" on="0"/>
      </contour>
      <contour>
        <pt x="283" y="518" on="1"/>
        <pt x="283" y="429" on="0"/>
        <pt x="334" y="285" on="0"/>
        <pt x="423" y="184" on="0"/>
        <pt x="540" y="129" on="0"/>
        <pt x="606" y="129" on="1"/>
        <pt x="675" y="129" on="0"/>
        <pt x="794" y="183" on="0"/>
        <pt x="882" y="284" on="0"/>
        <pt x="932" y="428" on="0"/>
        <pt x="932" y="518" on="1"/>
        <pt x="932" y="612" on="0"/>
        <pt x="882" y="758" on="0"/>
        <pt x="795" y="856" on="0"/>
        <pt x="675" y="906" on="0"/>
        <pt x="606" y="906" on="1"/>
        <pt x="540" y="906" on="0"/>
        <pt x="423" y="856" on="0"/>
        <pt x="334" y="758" on="0"/>
        <pt x="283" y="612" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHW[ ]	/* 2 values pushed */
          38 -32
          PUSHB[ ]	/* 4 values pushed */
          14 1 77 37
          PUSHW[ ]	/* 1 value pushed */
          -32
          PUSHB[ ]	/* 4 values pushed */
          12 1 77 37
          PUSHW[ ]	/* 1 value pushed */
          -32
          NPUSHB[ ]	/* 34 values pushed */
          13 0 77 33 32 12 1 77 33 32 13 0 77 32 32 14 1 77 28 32 14 1 77 27 32
          12 1 77 27 32 13 0 77 23
          PUSHW[ ]	/* 1 value pushed */
          -32
          PUSHB[ ]	/* 4 values pushed */
          12 1 77 23
          PUSHW[ ]	/* 1 value pushed */
          -24
          PUSHB[ ]	/* 4 values pushed */
          13 0 77 22
          PUSHW[ ]	/* 1 value pushed */
          -32
          PUSHB[ ]	/* 4 values pushed */
          14 1 77 18
          PUSHW[ ]	/* 1 value pushed */
          -32
          PUSHB[ ]	/* 4 values pushed */
          14 1 77 18
          PUSHW[ ]	/* 1 value pushed */
          -32
          PUSHB[ ]	/* 4 values pushed */
          12 1 77 17
          PUSHW[ ]	/* 1 value pushed */
          -32
          NPUSHB[ ]	/* 9 values pushed */
          14 1 77 17 32 16 0 77 16
          PUSHW[ ]	/* 1 value pushed */
          -64
          PUSHB[ ]	/* 4 values pushed */
          14 1 77 16
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 24 values pushed */
          12 1 77 14 64 14 1 77 14 64 12 1 77 13 32 14 1 77 13 32 12 1 77 13
          PUSHW[ ]	/* 1 value pushed */
          -32
          NPUSHB[ ]	/* 24 values pushed */
          16 0 77 12 32 14 1 77 12 32 12 1 77 8 32 14 1 77 8 32 12 1 77 7
          PUSHW[ ]	/* 1 value pushed */
          -32
          NPUSHB[ ]	/* 9 values pushed */
          16 0 77 6 64 12 1 77 4
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 9 values pushed */
          12 1 77 3 32 16 0 77 2
          PUSHW[ ]	/* 1 value pushed */
          -32
          PUSHB[ ]	/* 4 values pushed */
          14 1 77 2
          PUSHW[ ]	/* 1 value pushed */
          -32
          PUSHB[ ]	/* 4 values pushed */
          12 1 77 18
          PUSHW[ ]	/* 1 value pushed */
          -32
          PUSHB[ ]	/* 4 values pushed */
          14 1 77 17
          PUSHW[ ]	/* 1 value pushed */
          -32
          PUSHB[ ]	/* 4 values pushed */
          14 1 77 13
          PUSHW[ ]	/* 1 value pushed */
          -32
          PUSHB[ ]	/* 4 values pushed */
          14 1 77 12
          PUSHW[ ]	/* 1 value pushed */
          -32
          NPUSHB[ ]	/* 75 values pushed */
          14 1 77 8 32 14 1 77 7 32 14 1 77 3 32 14 1 77 2 32 14 1 77 17 3
          7 13 13 10 15 15 5 3 5 0 30 83 32 10 192 10 2 10 41 20 83 32 0 192 0
          2 0 40 159 40 1 9 1 10 0 11 19 19 0 1 3 5 25 87 15 11 35 87 5 7
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="oacute" xMin="86" yMin="-31" xMax="1124" yMax="1477">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="295" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="ocircumflex" xMin="86" yMin="-31" xMax="1124" yMax="1489">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="106" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="odieresis" xMin="86" yMin="-31" xMax="1124" yMax="1489">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="210" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="ogonek" xMin="29" yMin="-457" xMax="487" yMax="106">
      <contour>
        <pt x="469" y="29" on="1"/>
        <pt x="403" y="0" on="0"/>
        <pt x="313" y="-54" on="0"/>
        <pt x="257" y="-111" on="0"/>
        <pt x="233" y="-171" on="0"/>
        <pt x="233" y="-205" on="1"/>
        <pt x="233" y="-224" on="0"/>
        <pt x="249" y="-250" on="0"/>
        <pt x="275" y="-265" on="0"/>
        <pt x="308" y="-272" on="0"/>
        <pt x="326" y="-272" on="1"/>
        <pt x="364" y="-272" on="0"/>
        <pt x="418" y="-259" on="0"/>
        <pt x="438" y="-250" on="1"/>
        <pt x="487" y="-416" on="1"/>
        <pt x="476" y="-422" on="0"/>
        <pt x="436" y="-436" on="0"/>
        <pt x="386" y="-449" on="0"/>
        <pt x="332" y="-457" on="0"/>
        <pt x="309" y="-457" on="1"/>
        <pt x="248" y="-457" on="0"/>
        <pt x="146" y="-430" on="0"/>
        <pt x="71" y="-378" on="0"/>
        <pt x="29" y="-301" on="0"/>
        <pt x="29" y="-250" on="1"/>
        <pt x="29" y="-199" on="0"/>
        <pt x="65" y="-110" on="0"/>
        <pt x="124" y="-36" on="0"/>
        <pt x="200" y="23" on="0"/>
        <pt x="279" y="68" on="0"/>
        <pt x="354" y="98" on="0"/>
        <pt x="383" y="106" on="1"/>
      </contour>
      <instructions><assembly>
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ograve" xMin="86" yMin="-31" xMax="1124" yMax="1477">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="grave" x="205" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="one" xMin="82" yMin="0" xMax="733" yMax="1559">
      <contour>
        <pt x="242" y="172" on="1"/>
        <pt x="389" y="172" on="1"/>
        <pt x="389" y="1281" on="1"/>
        <pt x="82" y="1114" on="1"/>
        <pt x="82" y="1323" on="1"/>
        <pt x="504" y="1559" on="1"/>
        <pt x="584" y="1559" on="1"/>
        <pt x="584" y="172" on="1"/>
        <pt x="733" y="172" on="1"/>
        <pt x="733" y="0" on="1"/>
        <pt x="242" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 28 values pushed */
          123 5 1 117 4 1 12 8 78 6 5 5 6 68 10 78 1 11 3 1 8 80 10 8 6
          2 3 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11100]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11110]	/* MoveIndirectRelPt */
          MDRP[01110]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="onehalf" xMin="0" yMin="-61" xMax="1545" yMax="1577">
      <contour>
        <pt x="1276" y="1577" on="1"/>
        <pt x="1475" y="1577" on="1"/>
        <pt x="199" y="-61" on="1"/>
        <pt x="0" y="-61" on="1"/>
      </contour>
      <contour>
        <pt x="1039" y="121" on="1"/>
        <pt x="1313" y="397" on="1"/>
        <pt x="1347" y="428" on="0"/>
        <pt x="1389" y="494" on="0"/>
        <pt x="1389" y="526" on="1"/>
        <pt x="1389" y="561" on="0"/>
        <pt x="1335" y="612" on="0"/>
        <pt x="1289" y="612" on="1"/>
        <pt x="1239" y="612" on="0"/>
        <pt x="1182" y="555" on="0"/>
        <pt x="1182" y="512" on="1"/>
        <pt x="1037" y="512" on="1"/>
        <pt x="1037" y="568" on="0"/>
        <pt x="1077" y="657" on="0"/>
        <pt x="1146" y="719" on="0"/>
        <pt x="1240" y="752" on="0"/>
        <pt x="1293" y="752" on="1"/>
        <pt x="1344" y="752" on="0"/>
        <pt x="1436" y="723" on="0"/>
        <pt x="1505" y="666" on="0"/>
        <pt x="1545" y="583" on="0"/>
        <pt x="1545" y="530" on="1"/>
        <pt x="1545" y="488" on="0"/>
        <pt x="1506" y="414" on="0"/>
        <pt x="1471" y="377" on="1"/>
        <pt x="1242" y="141" on="1"/>
        <pt x="1543" y="141" on="1"/>
        <pt x="1543" y="0" on="1"/>
        <pt x="1039" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="76" y="907" on="1"/>
        <pt x="160" y="907" on="1"/>
        <pt x="160" y="1311" on="1"/>
        <pt x="31" y="1239" on="1"/>
        <pt x="31" y="1401" on="1"/>
        <pt x="248" y="1522" on="1"/>
        <pt x="318" y="1522" on="1"/>
        <pt x="318" y="907" on="1"/>
        <pt x="400" y="907" on="1"/>
        <pt x="400" y="778" on="1"/>
        <pt x="76" y="778" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 74 values pushed */
          114 29 1 2 68 23 1 124 6 1 49 22 1 121 4 1 64 32 1 32 25 45 41 167 39
          168 43 167 34 44 1 2 3 0 1 0 2 77 3 0 20 3 0 2 3 63 0 127 0 2
          0 34 40 169 43 39 0 29 169 32 8 11 170 20 25 160 15 1 15 4 3 8 0 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDRP[01110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MDRP[11100]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10100]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[01110]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MDRP[01101]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="onequarter" xMin="0" yMin="-61" xMax="1665" yMax="1577">
      <contour>
        <pt x="1276" y="1577" on="1"/>
        <pt x="1475" y="1577" on="1"/>
        <pt x="199" y="-61" on="1"/>
        <pt x="0" y="-61" on="1"/>
      </contour>
      <contour>
        <pt x="1080" y="303" on="1"/>
        <pt x="1360" y="760" on="1"/>
        <pt x="1508" y="760" on="1"/>
        <pt x="1235" y="305" on="1"/>
        <pt x="1418" y="305" on="1"/>
        <pt x="1418" y="469" on="1"/>
        <pt x="1553" y="469" on="1"/>
        <pt x="1553" y="305" on="1"/>
        <pt x="1665" y="305" on="1"/>
        <pt x="1665" y="195" on="1"/>
        <pt x="1553" y="195" on="1"/>
        <pt x="1553" y="0" on="1"/>
        <pt x="1418" y="0" on="1"/>
        <pt x="1418" y="195" on="1"/>
        <pt x="1082" y="195" on="1"/>
      </contour>
      <contour>
        <pt x="64" y="907" on="1"/>
        <pt x="148" y="907" on="1"/>
        <pt x="148" y="1311" on="1"/>
        <pt x="19" y="1239" on="1"/>
        <pt x="19" y="1401" on="1"/>
        <pt x="236" y="1522" on="1"/>
        <pt x="306" y="1522" on="1"/>
        <pt x="306" y="907" on="1"/>
        <pt x="387" y="907" on="1"/>
        <pt x="387" y="778" on="1"/>
        <pt x="64" y="778" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 62 values pushed */
          123 5 1 7 81 18 16 8 168 112 14 1 14 31 28 78 25 168 29 167 20 30 1 2 3
          0 1 0 2 77 3 0 20 3 0 2 3 63 0 127 0 2 0 20 26 169 29 24 0 12
          10 5 8 169 18 14 16 8 3 8 0 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MDRP[11101]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[11101]	/* MoveIndirectRelPt */
          MDRP[01100]	/* MoveDirectRelPt */
          MDRP[01101]	/* MoveDirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MDRP[10100]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10100]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[01100]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[11101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[11101]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="onesuperior" xMin="33" yMin="840" xMax="389" yMax="1579">
      <contour>
        <pt x="92" y="952" on="1"/>
        <pt x="174" y="952" on="1"/>
        <pt x="174" y="1397" on="1"/>
        <pt x="33" y="1321" on="1"/>
        <pt x="33" y="1460" on="1"/>
        <pt x="250" y="1579" on="1"/>
        <pt x="309" y="1579" on="1"/>
        <pt x="309" y="952" on="1"/>
        <pt x="389" y="952" on="1"/>
        <pt x="389" y="840" on="1"/>
        <pt x="92" y="840" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 25 values pushed */
          12 9 167 6 168 10 167 1 11 1 7 169 10 173 48 2 160 2 176 2 3 2 169 5 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10100]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[01100]	/* MoveIndirectRelPt */
          MDRP[01100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ordfeminine" xMin="102" yMin="867" xMax="778" yMax="1580">
      <contour>
        <pt x="551" y="942" on="1"/>
        <pt x="509" y="908" on="0"/>
        <pt x="413" y="867" on="0"/>
        <pt x="350" y="867" on="1"/>
        <pt x="295" y="867" on="0"/>
        <pt x="204" y="899" on="0"/>
        <pt x="138" y="955" on="0"/>
        <pt x="102" y="1030" on="0"/>
        <pt x="102" y="1072" on="1"/>
        <pt x="102" y="1130" on="0"/>
        <pt x="156" y="1213" on="0"/>
        <pt x="242" y="1265" on="0"/>
        <pt x="349" y="1289" on="0"/>
        <pt x="401" y="1289" on="1"/>
        <pt x="448" y="1289" on="0"/>
        <pt x="521" y="1281" on="0"/>
        <pt x="551" y="1275" on="1"/>
        <pt x="551" y="1324" on="1"/>
        <pt x="551" y="1392" on="0"/>
        <pt x="466" y="1453" on="0"/>
        <pt x="397" y="1453" on="1"/>
        <pt x="332" y="1453" on="0"/>
        <pt x="228" y="1426" on="0"/>
        <pt x="193" y="1406" on="1"/>
        <pt x="143" y="1502" on="1"/>
        <pt x="200" y="1537" on="0"/>
        <pt x="343" y="1580" on="0"/>
        <pt x="416" y="1580" on="1"/>
        <pt x="480" y="1580" on="0"/>
        <pt x="584" y="1551" on="0"/>
        <pt x="657" y="1491" on="0"/>
        <pt x="696" y="1396" on="0"/>
        <pt x="696" y="1330" on="1"/>
        <pt x="696" y="1017" on="1"/>
        <pt x="778" y="1017" on="1"/>
        <pt x="778" y="886" on="1"/>
        <pt x="551" y="886" on="1"/>
      </contour>
      <contour>
        <pt x="375" y="984" on="1"/>
        <pt x="429" y="984" on="0"/>
        <pt x="524" y="1024" on="0"/>
        <pt x="551" y="1051" on="1"/>
        <pt x="551" y="1187" on="1"/>
        <pt x="395" y="1187" on="1"/>
        <pt x="363" y="1187" on="0"/>
        <pt x="307" y="1173" on="0"/>
        <pt x="267" y="1147" on="0"/>
        <pt x="244" y="1109" on="0"/>
        <pt x="244" y="1084" on="1"/>
        <pt x="244" y="1035" on="0"/>
        <pt x="315" y="984" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 67 values pushed */
          124 24 1 2 54 29 1 52 11 1 118 10 1 121 6 1 57 5 1 41 16 168 35 167 112
          33 192 33 2 33 51 112 51 1 47 168 48 8 112 8 2 8 50 34 170 36 173 42 13 13
          27 192 37 1 37 181 3 3 35 173 207 20 1 20 181 27 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01001]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIAP[1]	/* MoveIndirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01001]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDRP[01101]	/* MoveDirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11100]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ordmasculine" xMin="102" yMin="857" xMax="831" yMax="1580">
      <contour>
        <pt x="102" y="1217" on="1"/>
        <pt x="102" y="1295" on="0"/>
        <pt x="156" y="1428" on="0"/>
        <pt x="252" y="1525" on="0"/>
        <pt x="386" y="1580" on="0"/>
        <pt x="467" y="1580" on="1"/>
        <pt x="548" y="1580" on="0"/>
        <pt x="682" y="1527" on="0"/>
        <pt x="778" y="1431" on="0"/>
        <pt x="831" y="1299" on="0"/>
        <pt x="831" y="1220" on="1"/>
        <pt x="831" y="1140" on="0"/>
        <pt x="779" y="1007" on="0"/>
        <pt x="683" y="911" on="0"/>
        <pt x="549" y="857" on="0"/>
        <pt x="467" y="857" on="1"/>
        <pt x="385" y="857" on="0"/>
        <pt x="250" y="910" on="0"/>
        <pt x="154" y="1006" on="0"/>
        <pt x="102" y="1138" on="0"/>
      </contour>
      <contour>
        <pt x="254" y="1217" on="1"/>
        <pt x="254" y="1165" on="0"/>
        <pt x="288" y="1081" on="0"/>
        <pt x="346" y="1022" on="0"/>
        <pt x="423" y="990" on="0"/>
        <pt x="467" y="990" on="1"/>
        <pt x="512" y="990" on="0"/>
        <pt x="590" y="1022" on="0"/>
        <pt x="647" y="1081" on="0"/>
        <pt x="680" y="1165" on="0"/>
        <pt x="680" y="1217" on="1"/>
        <pt x="680" y="1272" on="0"/>
        <pt x="647" y="1358" on="0"/>
        <pt x="590" y="1415" on="0"/>
        <pt x="512" y="1445" on="0"/>
        <pt x="467" y="1445" on="1"/>
        <pt x="423" y="1445" on="0"/>
        <pt x="346" y="1415" on="0"/>
        <pt x="288" y="1358" on="0"/>
        <pt x="254" y="1272" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 19 values pushed */
          30 168 10 41 20 168 48 0 1 0 40 25 170 15 173 35 170 5 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="oslash" xMin="52" yMin="-61" xMax="1211" yMax="1167">
      <contour>
        <pt x="213" y="145" on="1"/>
        <pt x="154" y="217" on="0"/>
        <pt x="92" y="405" on="0"/>
        <pt x="92" y="518" on="1"/>
        <pt x="92" y="640" on="0"/>
        <pt x="167" y="842" on="0"/>
        <pt x="304" y="987" on="0"/>
        <pt x="494" y="1067" on="0"/>
        <pt x="608" y="1067" on="1"/>
        <pt x="686" y="1067" on="0"/>
        <pt x="822" y="1031" on="0"/>
        <pt x="880" y="997" on="1"/>
        <pt x="1013" y="1167" on="1"/>
        <pt x="1211" y="1167" on="1"/>
        <pt x="1000" y="897" on="1"/>
        <pt x="1060" y="825" on="0"/>
        <pt x="1126" y="635" on="0"/>
        <pt x="1126" y="520" on="1"/>
        <pt x="1126" y="396" on="0"/>
        <pt x="1053" y="193" on="0"/>
        <pt x="918" y="48" on="0"/>
        <pt x="726" y="-31" on="0"/>
        <pt x="608" y="-31" on="1"/>
        <pt x="528" y="-31" on="0"/>
        <pt x="390" y="7" on="0"/>
        <pt x="331" y="42" on="1"/>
        <pt x="251" y="-61" on="1"/>
        <pt x="52" y="-61" on="1"/>
      </contour>
      <contour>
        <pt x="934" y="587" on="0"/>
        <pt x="907" y="701" on="0"/>
        <pt x="882" y="746" on="1"/>
        <pt x="441" y="182" on="1"/>
        <pt x="478" y="157" on="0"/>
        <pt x="562" y="131" on="0"/>
        <pt x="608" y="131" on="1"/>
        <pt x="677" y="131" on="0"/>
        <pt x="796" y="185" on="0"/>
        <pt x="884" y="285" on="0"/>
        <pt x="934" y="428" on="0"/>
        <pt x="934" y="518" on="1"/>
      </contour>
      <contour>
        <pt x="285" y="455" on="0"/>
        <pt x="311" y="346" on="0"/>
        <pt x="335" y="301" on="1"/>
        <pt x="774" y="862" on="1"/>
        <pt x="738" y="885" on="0"/>
        <pt x="654" y="907" on="0"/>
        <pt x="608" y="907" on="1"/>
        <pt x="542" y="907" on="0"/>
        <pt x="425" y="856" on="0"/>
        <pt x="336" y="758" on="0"/>
        <pt x="285" y="612" on="0"/>
        <pt x="285" y="518" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHW[ ]	/* 2 values pushed */
          43 -16
          NPUSHB[ ]	/* 9 values pushed */
          12 1 77 31 16 12 1 77 15
          PUSHW[ ]	/* 1 value pushed */
          -32
          NPUSHB[ ]	/* 14 values pushed */
          12 1 77 1 32 12 1 77 44 24 16 1 77 41
          PUSHW[ ]	/* 1 value pushed */
          -24
          NPUSHB[ ]	/* 19 values pushed */
          16 1 77 24 32 16 1 77 24 40 12 1 77 24 48 12 0 77 10
          PUSHW[ ]	/* 1 value pushed */
          -16
          PUSHB[ ]	/* 4 values pushed */
          16 1 77 10
          PUSHW[ ]	/* 1 value pushed */
          -32
          PUSHB[ ]	/* 4 values pushed */
          12 1 77 10
          PUSHW[ ]	/* 1 value pushed */
          -56
          NPUSHB[ ]	/* 88 values pushed */
          12 0 77 46 8 34 22 14 30 31 25 26 13 13 26 27 12 13 12 26 77 27 12 20 27
          12 26 11 43 42 0 27 12 27 166 12 1 108 12 1 75 12 1 60 12 1 12 22 8 3
          3 39 83 17 53 52 27 1 27 52 51 83 3 52 34 87 100 27 116 27 2 50 27 1 27
          22 11 46 87 162 12 1 58 12 1 12 8 7
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          RDTG[ ]	/* RoundDownToGrid */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="otilde" xMin="86" yMin="-31" xMax="1124" yMax="1415">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="tilde" x="157" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="p" xMin="59" yMin="-471" xMax="1157" yMax="1061">
      <contour>
        <pt x="59" y="1036" on="1"/>
        <pt x="389" y="1036" on="1"/>
        <pt x="389" y="950" on="1"/>
        <pt x="455" y="1001" on="0"/>
        <pt x="611" y="1061" on="0"/>
        <pt x="694" y="1061" on="1"/>
        <pt x="796" y="1061" on="0"/>
        <pt x="966" y="985" on="0"/>
        <pt x="1089" y="847" on="0"/>
        <pt x="1157" y="654" on="0"/>
        <pt x="1157" y="537" on="1"/>
        <pt x="1157" y="412" on="0"/>
        <pt x="1081" y="206" on="0"/>
        <pt x="946" y="59" on="0"/>
        <pt x="760" y="-23" on="0"/>
        <pt x="649" y="-23" on="1"/>
        <pt x="570" y="-23" on="0"/>
        <pt x="447" y="10" on="0"/>
        <pt x="391" y="36" on="1"/>
        <pt x="391" y="-299" on="1"/>
        <pt x="553" y="-299" on="1"/>
        <pt x="553" y="-471" on="1"/>
        <pt x="61" y="-471" on="1"/>
        <pt x="61" y="-299" on="1"/>
        <pt x="203" y="-299" on="1"/>
        <pt x="203" y="864" on="1"/>
        <pt x="59" y="864" on="1"/>
      </contour>
      <contour>
        <pt x="645" y="897" on="1"/>
        <pt x="573" y="897" on="0"/>
        <pt x="440" y="839" on="0"/>
        <pt x="391" y="788" on="1"/>
        <pt x="391" y="227" on="1"/>
        <pt x="424" y="193" on="0"/>
        <pt x="547" y="139" on="0"/>
        <pt x="639" y="139" on="1"/>
        <pt x="703" y="139" on="0"/>
        <pt x="821" y="189" on="0"/>
        <pt x="911" y="288" on="0"/>
        <pt x="965" y="434" on="0"/>
        <pt x="965" y="530" on="1"/>
        <pt x="965" y="618" on="0"/>
        <pt x="914" y="754" on="0"/>
        <pt x="827" y="848" on="0"/>
        <pt x="711" y="897" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 43 values pushed */
          54 36 1 39 83 10 122 45 20 78 18 18 30 81 23 0 78 25 44 20 24 80 22 14 36
          39 42 3 27 34 87 10 5 15 11 27 87 5 7 25 80 0 6
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01110]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11110]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="paragraph" xMin="41" yMin="-369" xMax="1135" yMax="1516">
      <contour>
        <pt x="465" y="701" on="1"/>
        <pt x="372" y="707" on="0"/>
        <pt x="216" y="772" on="0"/>
        <pt x="103" y="877" on="0"/>
        <pt x="41" y="1020" on="0"/>
        <pt x="41" y="1104" on="1"/>
        <pt x="41" y="1206" on="0"/>
        <pt x="111" y="1360" on="0"/>
        <pt x="241" y="1464" on="0"/>
        <pt x="424" y="1516" on="0"/>
        <pt x="537" y="1516" on="1"/>
        <pt x="1135" y="1516" on="1"/>
        <pt x="1135" y="1354" on="1"/>
        <pt x="1055" y="1354" on="1"/>
        <pt x="1055" y="-369" on="1"/>
        <pt x="874" y="-369" on="1"/>
        <pt x="874" y="1354" on="1"/>
        <pt x="645" y="1354" on="1"/>
        <pt x="645" y="-369" on="1"/>
        <pt x="465" y="-369" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 20 values pushed */
          21 11 78 13 68 15 68 17 68 0 162 5 20 19 14 12 80 0 10 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MDRP[01101]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[11110]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MDRP[01110]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="parenleft" xMin="141" yMin="-451" xMax="668" yMax="1630">
      <contour>
        <pt x="530" y="-451" on="1"/>
        <pt x="440" y="-339" on="0"/>
        <pt x="296" y="-92" on="0"/>
        <pt x="195" y="171" on="0"/>
        <pt x="141" y="448" on="0"/>
        <pt x="141" y="590" on="1"/>
        <pt x="141" y="732" on="0"/>
        <pt x="195" y="1009" on="0"/>
        <pt x="296" y="1271" on="0"/>
        <pt x="440" y="1518" on="0"/>
        <pt x="530" y="1630" on="1"/>
        <pt x="668" y="1520" on="1"/>
        <pt x="589" y="1420" on="0"/>
        <pt x="466" y="1198" on="0"/>
        <pt x="382" y="962" on="0"/>
        <pt x="338" y="715" on="0"/>
        <pt x="338" y="590" on="1"/>
        <pt x="338" y="465" on="0"/>
        <pt x="382" y="218" on="0"/>
        <pt x="466" y="-19" on="0"/>
        <pt x="589" y="-240" on="0"/>
        <pt x="668" y="-340" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 12 values pushed */
          23 21 11 16 70 10 0 5 22 10 16 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[11101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[01110]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="parenright" xMin="53" yMin="-451" xMax="580" yMax="1630">
      <contour>
        <pt x="53" y="-340" on="1"/>
        <pt x="132" y="-240" on="0"/>
        <pt x="255" y="-19" on="0"/>
        <pt x="339" y="218" on="0"/>
        <pt x="383" y="465" on="0"/>
        <pt x="383" y="590" on="1"/>
        <pt x="383" y="715" on="0"/>
        <pt x="339" y="962" on="0"/>
        <pt x="255" y="1198" on="0"/>
        <pt x="132" y="1420" on="0"/>
        <pt x="53" y="1520" on="1"/>
        <pt x="190" y="1630" on="1"/>
        <pt x="280" y="1518" on="0"/>
        <pt x="424" y="1271" on="0"/>
        <pt x="526" y="1009" on="0"/>
        <pt x="580" y="732" on="0"/>
        <pt x="580" y="590" on="1"/>
        <pt x="580" y="448" on="0"/>
        <pt x="526" y="171" on="0"/>
        <pt x="424" y="-92" on="0"/>
        <pt x="280" y="-339" on="0"/>
        <pt x="190" y="-451" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 12 values pushed */
          23 21 11 16 70 10 0 5 22 21 11 16
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[11101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[00110]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="percent" xMin="75" yMin="-16" xMax="1625" yMax="1540">
      <contour>
        <pt x="75" y="1167" on="1"/>
        <pt x="75" y="1234" on="0"/>
        <pt x="125" y="1355" on="0"/>
        <pt x="216" y="1446" on="0"/>
        <pt x="342" y="1499" on="0"/>
        <pt x="417" y="1499" on="1"/>
        <pt x="492" y="1499" on="0"/>
        <pt x="618" y="1446" on="0"/>
        <pt x="708" y="1355" on="0"/>
        <pt x="759" y="1234" on="0"/>
        <pt x="759" y="1167" on="1"/>
        <pt x="759" y="1099" on="0"/>
        <pt x="710" y="979" on="0"/>
        <pt x="620" y="887" on="0"/>
        <pt x="494" y="834" on="0"/>
        <pt x="417" y="834" on="1"/>
        <pt x="339" y="834" on="0"/>
        <pt x="213" y="887" on="0"/>
        <pt x="124" y="979" on="0"/>
        <pt x="75" y="1099" on="0"/>
      </contour>
      <contour>
        <pt x="417" y="1335" on="1"/>
        <pt x="381" y="1335" on="0"/>
        <pt x="318" y="1310" on="0"/>
        <pt x="271" y="1265" on="0"/>
        <pt x="244" y="1203" on="0"/>
        <pt x="244" y="1167" on="1"/>
        <pt x="244" y="1132" on="0"/>
        <pt x="271" y="1069" on="0"/>
        <pt x="318" y="1022" on="0"/>
        <pt x="381" y="995" on="0"/>
        <pt x="417" y="995" on="1"/>
        <pt x="452" y="995" on="0"/>
        <pt x="514" y="1022" on="0"/>
        <pt x="560" y="1068" on="0"/>
        <pt x="587" y="1131" on="0"/>
        <pt x="587" y="1167" on="1"/>
        <pt x="587" y="1203" on="0"/>
        <pt x="560" y="1265" on="0"/>
        <pt x="514" y="1310" on="0"/>
        <pt x="452" y="1335" on="0"/>
      </contour>
      <contour>
        <pt x="1252" y="1540" on="1"/>
        <pt x="1447" y="1540" on="1"/>
        <pt x="406" y="-16" on="1"/>
        <pt x="212" y="-16" on="1"/>
      </contour>
      <contour>
        <pt x="941" y="323" on="1"/>
        <pt x="941" y="390" on="0"/>
        <pt x="991" y="510" on="0"/>
        <pt x="1082" y="601" on="0"/>
        <pt x="1208" y="655" on="0"/>
        <pt x="1283" y="655" on="1"/>
        <pt x="1358" y="655" on="0"/>
        <pt x="1484" y="601" on="0"/>
        <pt x="1575" y="510" on="0"/>
        <pt x="1625" y="390" on="0"/>
        <pt x="1625" y="323" on="1"/>
        <pt x="1625" y="255" on="0"/>
        <pt x="1576" y="134" on="0"/>
        <pt x="1487" y="43" on="0"/>
        <pt x="1361" y="-11" on="0"/>
        <pt x="1283" y="-11" on="1"/>
        <pt x="1205" y="-11" on="0"/>
        <pt x="1079" y="43" on="0"/>
        <pt x="990" y="134" on="0"/>
        <pt x="941" y="255" on="0"/>
      </contour>
      <contour>
        <pt x="1283" y="491" on="1"/>
        <pt x="1248" y="491" on="0"/>
        <pt x="1185" y="465" on="0"/>
        <pt x="1138" y="420" on="0"/>
        <pt x="1111" y="359" on="0"/>
        <pt x="1111" y="323" on="1"/>
        <pt x="1111" y="288" on="0"/>
        <pt x="1138" y="225" on="0"/>
        <pt x="1185" y="178" on="0"/>
        <pt x="1248" y="151" on="0"/>
        <pt x="1283" y="151" on="1"/>
        <pt x="1318" y="151" on="0"/>
        <pt x="1380" y="178" on="0"/>
        <pt x="1426" y="224" on="0"/>
        <pt x="1453" y="287" on="0"/>
        <pt x="1453" y="323" on="1"/>
        <pt x="1453" y="359" on="0"/>
        <pt x="1426" y="420" on="0"/>
        <pt x="1380" y="465" on="0"/>
        <pt x="1318" y="491" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 64 values pushed */
          69 44 35 10 44 10 44 10 0 79 54 85 25 0 84 42 41 40 43 42 43 41 77 40 43
          20 40 43 41 40 114 43 1 52 43 1 43 127 40 1 2 63 40 1 40 30 15 64 49 15
          49 15 49 5 74 59 11 43 8 40 0 20 5 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MDRP[01101]	/* MoveDirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MDRP[01101]	/* MoveDirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01101]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01101]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MDRP[01101]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MDRP[01101]	/* MoveDirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01101]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01101]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="period" xMin="96" yMin="-12" xMax="356" yMax="250">
      <contour>
        <pt x="96" y="121" on="1"/>
        <pt x="96" y="147" on="0"/>
        <pt x="117" y="194" on="0"/>
        <pt x="153" y="229" on="0"/>
        <pt x="200" y="250" on="0"/>
        <pt x="227" y="250" on="1"/>
        <pt x="253" y="250" on="0"/>
        <pt x="300" y="229" on="0"/>
        <pt x="335" y="194" on="0"/>
        <pt x="356" y="147" on="0"/>
        <pt x="356" y="121" on="1"/>
        <pt x="356" y="94" on="0"/>
        <pt x="335" y="46" on="0"/>
        <pt x="300" y="9" on="0"/>
        <pt x="253" y="-12" on="0"/>
        <pt x="227" y="-12" on="1"/>
        <pt x="200" y="-12" on="0"/>
        <pt x="153" y="9" on="0"/>
        <pt x="117" y="46" on="0"/>
        <pt x="96" y="94" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 37 values pushed */
          7 117 13 1 52 13 1 13 111 15 15 17 122 3 1 59 3 1 3 111 5 5 0 21 48
          10 1 10 110 48 0 1 0 20 15 10 5
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[11101]	/* MoveIndirectRelPt */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          MDRP[01110]	/* MoveDirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01001]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01001]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="periodcentered" xMin="174" yMin="532" xMax="434" yMax="795">
      <contour>
        <pt x="174" y="666" on="1"/>
        <pt x="174" y="692" on="0"/>
        <pt x="195" y="739" on="0"/>
        <pt x="230" y="774" on="0"/>
        <pt x="278" y="795" on="0"/>
        <pt x="305" y="795" on="1"/>
        <pt x="331" y="795" on="0"/>
        <pt x="378" y="774" on="0"/>
        <pt x="413" y="739" on="0"/>
        <pt x="434" y="692" on="0"/>
        <pt x="434" y="666" on="1"/>
        <pt x="434" y="639" on="0"/>
        <pt x="413" y="590" on="0"/>
        <pt x="378" y="554" on="0"/>
        <pt x="331" y="532" on="0"/>
        <pt x="305" y="532" on="1"/>
        <pt x="278" y="532" on="0"/>
        <pt x="230" y="554" on="0"/>
        <pt x="195" y="590" on="0"/>
        <pt x="174" y="639" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 23 values pushed */
          17 3 7 13 163 3 1 172 13 1 13 15 5 3 4 0 21 10 110 0 20 15 5
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MDRP[01110]	/* MoveDirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="plus" xMin="143" yMin="186" xMax="1167" yMax="1210">
      <contour>
        <pt x="143" y="791" on="1"/>
        <pt x="563" y="791" on="1"/>
        <pt x="563" y="1210" on="1"/>
        <pt x="745" y="1210" on="1"/>
        <pt x="745" y="791" on="1"/>
        <pt x="1167" y="791" on="1"/>
        <pt x="1167" y="608" on="1"/>
        <pt x="745" y="608" on="1"/>
        <pt x="745" y="186" on="1"/>
        <pt x="563" y="186" on="1"/>
        <pt x="563" y="608" on="1"/>
        <pt x="143" y="608" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 16 values pushed */
          13 7 7 3 81 2 10 12 11 0 4 73 6 11 9 80
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MDRP[11110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01110]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="plusminus" xMin="102" yMin="0" xMax="1126" yMax="1313">
      <contour>
        <pt x="102" y="893" on="1"/>
        <pt x="522" y="893" on="1"/>
        <pt x="522" y="1313" on="1"/>
        <pt x="705" y="1313" on="1"/>
        <pt x="705" y="893" on="1"/>
        <pt x="1126" y="893" on="1"/>
        <pt x="1126" y="711" on="1"/>
        <pt x="705" y="711" on="1"/>
        <pt x="705" y="309" on="1"/>
        <pt x="522" y="309" on="1"/>
        <pt x="522" y="711" on="1"/>
        <pt x="102" y="711" on="1"/>
      </contour>
      <contour>
        <pt x="102" y="162" on="1"/>
        <pt x="1126" y="162" on="1"/>
        <pt x="1126" y="0" on="1"/>
        <pt x="102" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 21 values pushed */
          11 12 16 6 13 13 17 3 81 10 16 0 4 73 7 11 9 13 80 15 10
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MDRP[11110]	/* MoveDirectRelPt */
          MDRP[11110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11100]	/* MoveDirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MDRP[01100]	/* MoveDirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="q" xMin="92" yMin="-471" xMax="1190" yMax="1061">
      <contour>
        <pt x="698" y="-299" on="1"/>
        <pt x="848" y="-299" on="1"/>
        <pt x="848" y="81" on="1"/>
        <pt x="798" y="32" on="0"/>
        <pt x="668" y="-23" on="0"/>
        <pt x="586" y="-23" on="1"/>
        <pt x="481" y="-23" on="0"/>
        <pt x="300" y="50" on="0"/>
        <pt x="167" y="191" on="0"/>
        <pt x="92" y="396" on="0"/>
        <pt x="92" y="528" on="1"/>
        <pt x="92" y="648" on="0"/>
        <pt x="164" y="845" on="0"/>
        <pt x="296" y="984" on="0"/>
        <pt x="482" y="1061" on="0"/>
        <pt x="596" y="1061" on="1"/>
        <pt x="671" y="1061" on="0"/>
        <pt x="791" y="1028" on="0"/>
        <pt x="848" y="990" on="1"/>
        <pt x="848" y="1036" on="1"/>
        <pt x="1034" y="1036" on="1"/>
        <pt x="1034" y="-299" on="1"/>
        <pt x="1190" y="-299" on="1"/>
        <pt x="1190" y="-471" on="1"/>
        <pt x="698" y="-471" on="1"/>
      </contour>
      <contour>
        <pt x="610" y="139" on="1"/>
        <pt x="695" y="139" on="0"/>
        <pt x="813" y="195" on="0"/>
        <pt x="848" y="233" on="1"/>
        <pt x="848" y="820" on="1"/>
        <pt x="798" y="861" on="0"/>
        <pt x="671" y="897" on="0"/>
        <pt x="604" y="897" on="1"/>
        <pt x="538" y="897" on="0"/>
        <pt x="422" y="848" on="0"/>
        <pt x="335" y="753" on="0"/>
        <pt x="285" y="617" on="0"/>
        <pt x="285" y="530" on="1"/>
        <pt x="285" y="434" on="0"/>
        <pt x="333" y="288" on="0"/>
        <pt x="419" y="189" on="0"/>
        <pt x="539" y="139" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 42 values pushed */
          63 42 1 54 40 1 57 34 1 1 29 81 15 10 21 43 37 83 10 42 0 22 80 24 14
          20 6 40 37 34 3 25 32 87 10 5 15 7 25 87 5 11
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="question" xMin="121" yMin="-12" xMax="995" yMax="1551">
      <contour>
        <pt x="338" y="121" on="1"/>
        <pt x="338" y="147" on="0"/>
        <pt x="359" y="194" on="0"/>
        <pt x="394" y="229" on="0"/>
        <pt x="442" y="250" on="0"/>
        <pt x="469" y="250" on="1"/>
        <pt x="495" y="250" on="0"/>
        <pt x="542" y="229" on="0"/>
        <pt x="577" y="194" on="0"/>
        <pt x="598" y="147" on="0"/>
        <pt x="598" y="121" on="1"/>
        <pt x="598" y="94" on="0"/>
        <pt x="577" y="46" on="0"/>
        <pt x="542" y="9" on="0"/>
        <pt x="495" y="-12" on="0"/>
        <pt x="469" y="-12" on="1"/>
        <pt x="442" y="-12" on="0"/>
        <pt x="394" y="9" on="0"/>
        <pt x="359" y="46" on="0"/>
        <pt x="338" y="94" on="0"/>
      </contour>
      <contour>
        <pt x="381" y="336" on="1"/>
        <pt x="381" y="440" on="0"/>
        <pt x="396" y="585" on="0"/>
        <pt x="438" y="706" on="0"/>
        <pt x="512" y="796" on="0"/>
        <pt x="571" y="846" on="1"/>
        <pt x="624" y="891" on="0"/>
        <pt x="711" y="957" on="0"/>
        <pt x="773" y="1020" on="0"/>
        <pt x="807" y="1093" on="0"/>
        <pt x="807" y="1145" on="1"/>
        <pt x="807" y="1190" on="0"/>
        <pt x="771" y="1274" on="0"/>
        <pt x="710" y="1339" on="0"/>
        <pt x="627" y="1379" on="0"/>
        <pt x="580" y="1379" on="1"/>
        <pt x="499" y="1379" on="0"/>
        <pt x="391" y="1323" on="0"/>
        <pt x="325" y="1244" on="0"/>
        <pt x="297" y="1156" on="0"/>
        <pt x="297" y="1125" on="1"/>
        <pt x="121" y="1137" on="1"/>
        <pt x="126" y="1221" on="0"/>
        <pt x="197" y="1371" on="0"/>
        <pt x="317" y="1484" on="0"/>
        <pt x="481" y="1551" on="0"/>
        <pt x="580" y="1551" on="1"/>
        <pt x="680" y="1551" on="0"/>
        <pt x="835" y="1485" on="0"/>
        <pt x="941" y="1375" on="0"/>
        <pt x="995" y="1230" on="0"/>
        <pt x="995" y="1151" on="1"/>
        <pt x="995" y="1049" on="0"/>
        <pt x="891" y="877" on="0"/>
        <pt x="788" y="805" on="1"/>
        <pt x="741" y="772" on="0"/>
        <pt x="620" y="668" on="0"/>
        <pt x="569" y="515" on="0"/>
        <pt x="561" y="412" on="0"/>
        <pt x="561" y="336" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 87 values pushed */
          70 38 1 75 55 1 74 53 1 74 37 1 74 33 1 6 27 1 66 23 1 7 4 13 1
          13 111 15 17 11 3 1 12 3 111 5 15 5 10 110 15 0 31 0 2 63 111 0 127 0
          2 0 0 20 68 47 59 1 63 59 1 59 59 46 41 30 70 51 61 40 70 32 41 1 48
          41 1 41 60 35 74 46 3 15 10 59 5
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MDRP[01110]	/* MoveDirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01001]	/* MoveIndirectRelPt */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01001]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="questiondown" xMin="8" yMin="-455" xMax="883" yMax="1151">
      <contour>
        <pt x="406" y="1022" on="1"/>
        <pt x="406" y="1048" on="0"/>
        <pt x="427" y="1095" on="0"/>
        <pt x="462" y="1130" on="0"/>
        <pt x="510" y="1151" on="0"/>
        <pt x="537" y="1151" on="1"/>
        <pt x="563" y="1151" on="0"/>
        <pt x="610" y="1130" on="0"/>
        <pt x="645" y="1095" on="0"/>
        <pt x="666" y="1048" on="0"/>
        <pt x="666" y="1022" on="1"/>
        <pt x="666" y="995" on="0"/>
        <pt x="645" y="947" on="0"/>
        <pt x="610" y="910" on="0"/>
        <pt x="563" y="889" on="0"/>
        <pt x="537" y="889" on="1"/>
        <pt x="510" y="889" on="0"/>
        <pt x="462" y="910" on="0"/>
        <pt x="427" y="947" on="0"/>
        <pt x="406" y="995" on="0"/>
      </contour>
      <contour>
        <pt x="623" y="780" on="1"/>
        <pt x="623" y="676" on="0"/>
        <pt x="608" y="521" on="0"/>
        <pt x="566" y="400" on="0"/>
        <pt x="491" y="300" on="0"/>
        <pt x="432" y="250" on="1"/>
        <pt x="379" y="205" on="0"/>
        <pt x="292" y="139" on="0"/>
        <pt x="231" y="76" on="0"/>
        <pt x="197" y="3" on="0"/>
        <pt x="197" y="-49" on="1"/>
        <pt x="197" y="-94" on="0"/>
        <pt x="233" y="-178" on="0"/>
        <pt x="294" y="-243" on="0"/>
        <pt x="377" y="-283" on="0"/>
        <pt x="424" y="-283" on="1"/>
        <pt x="505" y="-283" on="0"/>
        <pt x="613" y="-227" on="0"/>
        <pt x="679" y="-148" on="0"/>
        <pt x="707" y="-61" on="0"/>
        <pt x="707" y="-29" on="1"/>
        <pt x="883" y="-41" on="1"/>
        <pt x="877" y="-125" on="0"/>
        <pt x="806" y="-275" on="0"/>
        <pt x="686" y="-388" on="0"/>
        <pt x="522" y="-455" on="0"/>
        <pt x="424" y="-455" on="1"/>
        <pt x="323" y="-455" on="0"/>
        <pt x="168" y="-389" on="0"/>
        <pt x="63" y="-279" on="0"/>
        <pt x="8" y="-134" on="0"/>
        <pt x="8" y="-55" on="1"/>
        <pt x="8" y="47" on="0"/>
        <pt x="113" y="220" on="0"/>
        <pt x="215" y="291" on="1"/>
        <pt x="262" y="324" on="0"/>
        <pt x="332" y="380" on="0"/>
        <pt x="383" y="438" on="0"/>
        <pt x="415" y="504" on="0"/>
        <pt x="434" y="591" on="0"/>
        <pt x="442" y="704" on="0"/>
        <pt x="442" y="780" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 48 values pushed */
          117 54 1 35 46 46 51 40 70 41 63 17 3 7 13 164 3 1 171 13 1 13 15 5 3
          4 10 110 0 0 20 68 48 61 1 61 61 30 70 127 51 1 51 62 38 32 37 37
          PUSHW[ ]	/* 1 value pushed */
          -72
          NPUSHB[ ]	/* 38 values pushed */
          16 73 52 37 1 37 40 40 46 63 57 23 25 51 30 44 43 63 25 127 25 2 116 43 1
          43 30 25 3 61 35 74 46 14 61 15 5 6
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MDRP[11101]	/* MoveDirectRelPt */
          MDRP[01110]	/* MoveDirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="quotedbl" xMin="41" yMin="1059" xMax="635" yMax="1577">
      <contour>
        <pt x="251" y="1059" on="1"/>
        <pt x="82" y="1059" on="1"/>
        <pt x="41" y="1577" on="1"/>
        <pt x="269" y="1577" on="1"/>
      </contour>
      <contour>
        <pt x="588" y="1059" on="1"/>
        <pt x="419" y="1059" on="1"/>
        <pt x="405" y="1577" on="1"/>
        <pt x="635" y="1577" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 12 values pushed */
          127 2 1 123 1 1 9 4 6 0 2 8
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MDRP[11101]	/* MoveDirectRelPt */
          MDRP[11110]	/* MoveDirectRelPt */
          MDRP[11101]	/* MoveDirectRelPt */
          MDRP[01110]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="quotedblbase" xMin="20" yMin="-340" xMax="885" yMax="283">
      <contour>
        <pt x="205" y="283" on="1"/>
        <pt x="424" y="197" on="1"/>
        <pt x="164" y="-340" on="1"/>
        <pt x="20" y="-287" on="1"/>
      </contour>
      <contour>
        <pt x="666" y="283" on="1"/>
        <pt x="885" y="197" on="1"/>
        <pt x="625" y="-340" on="1"/>
        <pt x="481" y="-287" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 21 values pushed */
          9 9 48 5 1 5 161 6 78 48 7 112 7 2 7 175 2 1 2 78 1
          PUSHW[ ]	/* 1 value pushed */
          -32
          NPUSHB[ ]	/* 22 values pushed */
          12 0 77 52 1 1 1 161 3 6 48 2 1 2 80 8 4 127 0 1 0 17
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01001]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          MIRP[01101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[11001]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDRP[01010]	/* MoveDirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="quotedblleft" xMin="129" yMin="979" xMax="936" yMax="1556">
      <contour>
        <pt x="805" y="1556" on="1"/>
        <pt x="936" y="1493" on="1"/>
        <pt x="745" y="979" on="1"/>
        <pt x="555" y="1057" on="1"/>
      </contour>
      <contour>
        <pt x="379" y="1556" on="1"/>
        <pt x="510" y="1493" on="1"/>
        <pt x="319" y="979" on="1"/>
        <pt x="129" y="1057" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 40 values pushed */
          6 64 19 1 77 6 7 4 4 116 5 1 5 161 7 2 64 19 1 77 2 3 0 0 116
          1 1 1 161 3 7 8 6 6 4 0 2 6 0 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MDRP[11100]	/* MoveDirectRelPt */
          MIRP[01001]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01001]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          CALL[ ]	/* CallFunction */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="quotedblright" xMin="92" yMin="979" xMax="899" yMax="1556">
      <contour>
        <pt x="223" y="979" on="1"/>
        <pt x="92" y="1042" on="1"/>
        <pt x="283" y="1556" on="1"/>
        <pt x="473" y="1479" on="1"/>
      </contour>
      <contour>
        <pt x="649" y="979" on="1"/>
        <pt x="518" y="1042" on="1"/>
        <pt x="709" y="1556" on="1"/>
        <pt x="899" y="1479" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 28 values pushed */
          4 6 116 7 1 7 161 5 0 2 116 3 1 3 161 121 1 1 1 8 6 0 4 6 2
          0 0 6
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDRP[10100]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="quoteleft" xMin="113" yMin="979" xMax="494" yMax="1556">
      <contour>
        <pt x="362" y="1556" on="1"/>
        <pt x="494" y="1493" on="1"/>
        <pt x="303" y="979" on="1"/>
        <pt x="113" y="1057" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 32 values pushed */
          2 64 19 1 77 2 54 0 1 0 0 3 1 5 5 116 1 1 50 1 1 1 161 48 3
          1 3 4 2 6 0 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[11001]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDRP[01010]	/* MoveDirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IP[ ]	/* InterpolatePts */
          CALL[ ]	/* CallFunction */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="quoteright" xMin="92" yMin="942" xMax="496" yMax="1565">
      <contour>
        <pt x="276" y="1565" on="1"/>
        <pt x="496" y="1479" on="1"/>
        <pt x="236" y="942" on="1"/>
        <pt x="92" y="995" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 23 values pushed */
          171 2 1 164 0 1 0 2 2 116 1 1 1 161 121 3 1 3 4 2 6 0 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="quotesingle" xMin="37" yMin="1059" xMax="264" yMax="1593">
      <contour>
        <pt x="216" y="1059" on="1"/>
        <pt x="37" y="1059" on="1"/>
        <pt x="37" y="1577" on="1"/>
        <pt x="264" y="1593" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 13 values pushed */
          5 3 110 1 4 1 48 0 1 0 162 2 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MDRP[01110]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="r" xMin="100" yMin="0" xMax="845" yMax="1044">
      <contour>
        <pt x="845" y="817" on="1"/>
        <pt x="655" y="817" on="1"/>
        <pt x="655" y="881" on="1"/>
        <pt x="622" y="881" on="0"/>
        <pt x="553" y="856" on="0"/>
        <pt x="493" y="805" on="0"/>
        <pt x="448" y="726" on="0"/>
        <pt x="438" y="672" on="1"/>
        <pt x="438" y="172" on="1"/>
        <pt x="614" y="172" on="1"/>
        <pt x="614" y="0" on="1"/>
        <pt x="100" y="0" on="1"/>
        <pt x="100" y="172" on="1"/>
        <pt x="243" y="172" on="1"/>
        <pt x="244" y="864" on="1"/>
        <pt x="100" y="864" on="1"/>
        <pt x="100" y="1036" on="1"/>
        <pt x="431" y="1036" on="1"/>
        <pt x="431" y="893" on="1"/>
        <pt x="449" y="925" on="0"/>
        <pt x="494" y="980" on="0"/>
        <pt x="549" y="1021" on="0"/>
        <pt x="616" y="1044" on="0"/>
        <pt x="655" y="1044" on="1"/>
        <pt x="707" y="1044" on="0"/>
        <pt x="799" y="1044" on="0"/>
        <pt x="845" y="1042" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 50 values pushed */
          35 5 1 1 81 47 26 1 26 26 9 28 12 16 78 13 9 78 17 7 81 64 13 1 13
          27 1 0 82 7 2 87 26 6 14 80 16 6 12 9 80 11 10 20 48 5 80 5 2 5
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11100]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[11101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[01110]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01100]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="registered" xMin="102" yMin="-25" xMax="1817" yMax="1686">
      <contour>
        <pt x="102" y="831" on="1"/>
        <pt x="102" y="949" on="0"/>
        <pt x="163" y="1168" on="0"/>
        <pt x="274" y="1358" on="0"/>
        <pt x="430" y="1514" on="0"/>
        <pt x="620" y="1625" on="0"/>
        <pt x="839" y="1686" on="0"/>
        <pt x="958" y="1686" on="1"/>
        <pt x="1076" y="1686" on="0"/>
        <pt x="1296" y="1625" on="0"/>
        <pt x="1487" y="1514" on="0"/>
        <pt x="1644" y="1358" on="0"/>
        <pt x="1756" y="1168" on="0"/>
        <pt x="1817" y="949" on="0"/>
        <pt x="1817" y="831" on="1"/>
        <pt x="1817" y="712" on="0"/>
        <pt x="1756" y="493" on="0"/>
        <pt x="1644" y="303" on="0"/>
        <pt x="1487" y="147" on="0"/>
        <pt x="1296" y="36" on="0"/>
        <pt x="1076" y="-25" on="0"/>
        <pt x="958" y="-25" on="1"/>
        <pt x="839" y="-25" on="0"/>
        <pt x="620" y="36" on="0"/>
        <pt x="430" y="147" on="0"/>
        <pt x="274" y="303" on="0"/>
        <pt x="163" y="493" on="0"/>
        <pt x="102" y="712" on="0"/>
      </contour>
      <contour>
        <pt x="283" y="831" on="1"/>
        <pt x="283" y="689" on="0"/>
        <pt x="388" y="442" on="0"/>
        <pt x="571" y="259" on="0"/>
        <pt x="817" y="154" on="0"/>
        <pt x="958" y="154" on="1"/>
        <pt x="1099" y="154" on="0"/>
        <pt x="1344" y="259" on="0"/>
        <pt x="1529" y="442" on="0"/>
        <pt x="1634" y="689" on="0"/>
        <pt x="1634" y="831" on="1"/>
        <pt x="1634" y="925" on="0"/>
        <pt x="1529" y="1230" on="0"/>
        <pt x="1344" y="1402" on="0"/>
        <pt x="1099" y="1507" on="0"/>
        <pt x="958" y="1507" on="1"/>
        <pt x="817" y="1507" on="0"/>
        <pt x="571" y="1402" on="0"/>
        <pt x="388" y="1230" on="0"/>
        <pt x="283" y="971" on="0"/>
      </contour>
      <contour>
        <pt x="555" y="518" on="1"/>
        <pt x="653" y="518" on="1"/>
        <pt x="653" y="1188" on="1"/>
        <pt x="551" y="1188" on="1"/>
        <pt x="551" y="1346" on="1"/>
        <pt x="1034" y="1346" on="1"/>
        <pt x="1107" y="1346" on="0"/>
        <pt x="1225" y="1304" on="0"/>
        <pt x="1307" y="1230" on="0"/>
        <pt x="1352" y="1129" on="0"/>
        <pt x="1352" y="1071" on="1"/>
        <pt x="1352" y="1022" on="0"/>
        <pt x="1332" y="946" on="0"/>
        <pt x="1291" y="887" on="0"/>
        <pt x="1231" y="843" on="0"/>
        <pt x="1192" y="826" on="1"/>
        <pt x="1223" y="809" on="0"/>
        <pt x="1272" y="738" on="0"/>
        <pt x="1284" y="686" on="1"/>
        <pt x="1325" y="518" on="1"/>
        <pt x="1407" y="518" on="1"/>
        <pt x="1409" y="360" on="1"/>
        <pt x="1153" y="360" on="1"/>
        <pt x="1102" y="614" on="1"/>
        <pt x="1088" y="698" on="0"/>
        <pt x="988" y="772" on="0"/>
        <pt x="909" y="772" on="1"/>
        <pt x="842" y="772" on="1"/>
        <pt x="842" y="518" on="1"/>
        <pt x="934" y="518" on="1"/>
        <pt x="934" y="360" on="1"/>
        <pt x="555" y="360" on="1"/>
      </contour>
      <contour>
        <pt x="842" y="1188" on="1"/>
        <pt x="842" y="928" on="1"/>
        <pt x="985" y="928" on="1"/>
        <pt x="1059" y="928" on="0"/>
        <pt x="1147" y="989" on="0"/>
        <pt x="1147" y="1057" on="1"/>
        <pt x="1147" y="1119" on="0"/>
        <pt x="1064" y="1188" on="0"/>
        <pt x="977" y="1188" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 103 values pushed */
          74 72 122 72 2 59 72 1 123 41 1 124 36 1 70 68 67 116 67 1 67 85 68 63 58
          1 58 38 70 31 45 35 41 116 45 1 50 45 1 62 41 1 41 7 45 3 0 14 90 79
          90 1 81 48 78 1 78 167 76 68 51 48 167 79 50 1 50 28 70 0 89 63 75 72 82
          82 78 53 68 77 77 48 93 70 78 33 74 21 9 51 160 80 1 80 112 53 128 53 2 53
          43 74 7
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MDRP[11110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDRP[01101]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MDRP[11110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MDRP[11110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MIRP[11101]	/* MoveIndirectRelPt */
          MDRP[11110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ring" xMin="354" yMin="956" xMax="866" yMax="1468">
      <contour>
        <pt x="506" y="1212" on="1"/>
        <pt x="506" y="1191" on="0"/>
        <pt x="523" y="1154" on="0"/>
        <pt x="552" y="1125" on="0"/>
        <pt x="589" y="1108" on="0"/>
        <pt x="610" y="1108" on="1"/>
        <pt x="631" y="1108" on="0"/>
        <pt x="669" y="1125" on="0"/>
        <pt x="698" y="1154" on="0"/>
        <pt x="715" y="1191" on="0"/>
        <pt x="715" y="1212" on="1"/>
        <pt x="715" y="1233" on="0"/>
        <pt x="698" y="1271" on="0"/>
        <pt x="669" y="1300" on="0"/>
        <pt x="631" y="1317" on="0"/>
        <pt x="610" y="1317" on="1"/>
        <pt x="589" y="1317" on="0"/>
        <pt x="552" y="1300" on="0"/>
        <pt x="523" y="1271" on="0"/>
        <pt x="506" y="1233" on="0"/>
      </contour>
      <contour>
        <pt x="610" y="1468" on="1"/>
        <pt x="662" y="1468" on="0"/>
        <pt x="756" y="1427" on="0"/>
        <pt x="825" y="1358" on="0"/>
        <pt x="866" y="1264" on="0"/>
        <pt x="866" y="1212" on="1"/>
        <pt x="866" y="1160" on="0"/>
        <pt x="825" y="1067" on="0"/>
        <pt x="756" y="997" on="0"/>
        <pt x="662" y="956" on="0"/>
        <pt x="610" y="956" on="1"/>
        <pt x="558" y="956" on="0"/>
        <pt x="465" y="997" on="0"/>
        <pt x="395" y="1067" on="0"/>
        <pt x="354" y="1160" on="0"/>
        <pt x="354" y="1212" on="1"/>
        <pt x="354" y="1264" on="0"/>
        <pt x="395" y="1358" on="0"/>
        <pt x="465" y="1427" on="0"/>
        <pt x="558" y="1468" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 11 values pushed */
          37 32 12 0 77 33 24 12 0 77 27
          PUSHW[ ]	/* 1 value pushed */
          -24
          PUSHB[ ]	/* 4 values pushed */
          12 0 77 23
          PUSHW[ ]	/* 1 value pushed */
          -24
          NPUSHB[ ]	/* 12 values pushed */
          12 0 77 0 35 40 10 25 5 30 15 20
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MDRP[00101]	/* MoveDirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDRP[00101]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MDRP[01101]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MDRP[01101]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="s" xMin="82" yMin="-31" xMax="903" yMax="1067">
      <contour>
        <pt x="698" y="800" on="0"/>
        <pt x="659" y="859" on="0"/>
        <pt x="597" y="896" on="0"/>
        <pt x="521" y="913" on="0"/>
        <pt x="485" y="913" on="1"/>
        <pt x="445" y="913" on="0"/>
        <pt x="378" y="895" on="0"/>
        <pt x="330" y="861" on="0"/>
        <pt x="303" y="812" on="0"/>
        <pt x="303" y="782" on="1"/>
        <pt x="303" y="730" on="0"/>
        <pt x="366" y="669" on="0"/>
        <pt x="440" y="643" on="1"/>
        <pt x="639" y="573" on="1"/>
        <pt x="767" y="530" on="0"/>
        <pt x="885" y="382" on="0"/>
        <pt x="885" y="279" on="1"/>
        <pt x="885" y="210" on="0"/>
        <pt x="830" y="95" on="0"/>
        <pt x="729" y="14" on="0"/>
        <pt x="587" y="-31" on="0"/>
        <pt x="500" y="-31" on="1"/>
        <pt x="379" y="-31" on="0"/>
        <pt x="227" y="47" on="0"/>
        <pt x="186" y="111" on="1"/>
        <pt x="82" y="111" on="1"/>
        <pt x="82" y="283" on="1"/>
        <pt x="289" y="283" on="1"/>
        <pt x="289" y="240" on="0"/>
        <pt x="326" y="179" on="0"/>
        <pt x="387" y="141" on="0"/>
        <pt x="464" y="123" on="0"/>
        <pt x="504" y="123" on="1"/>
        <pt x="543" y="123" on="0"/>
        <pt x="615" y="142" on="0"/>
        <pt x="670" y="179" on="0"/>
        <pt x="702" y="231" on="0"/>
        <pt x="702" y="264" on="1"/>
        <pt x="702" y="314" on="0"/>
        <pt x="637" y="384" on="0"/>
        <pt x="559" y="412" on="1"/>
        <pt x="361" y="486" on="1"/>
        <pt x="240" y="529" on="0"/>
        <pt x="123" y="662" on="0"/>
        <pt x="123" y="762" on="1"/>
        <pt x="123" y="828" on="0"/>
        <pt x="172" y="940" on="0"/>
        <pt x="265" y="1021" on="0"/>
        <pt x="399" y="1067" on="0"/>
        <pt x="485" y="1067" on="1"/>
        <pt x="596" y="1067" on="0"/>
        <pt x="746" y="1005" on="0"/>
        <pt x="806" y="930" on="1"/>
        <pt x="903" y="930" on="1"/>
        <pt x="903" y="758" on="1"/>
        <pt x="698" y="758" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 7 values pushed */
          59 42 1 164 41 1 29
          PUSHW[ ]	/* 1 value pushed */
          -32
          PUSHB[ ]	/* 7 values pushed */
          16 0 77 52 14 1 13
          PUSHW[ ]	/* 1 value pushed */
          -32
          NPUSHB[ ]	/* 14 values pushed */
          16 0 77 12 40 19 1 77 1 48 16 0 77 43
          PUSHW[ ]	/* 1 value pushed */
          -32
          NPUSHB[ ]	/* 15 values pushed */
          19 1 77 150 41 1 155 39 1 15 32 19 1 77 15
          PUSHW[ ]	/* 1 value pushed */
          -24
          PUSHB[ ]	/* 4 values pushed */
          19 0 77 15
          PUSHW[ ]	/* 1 value pushed */
          -32
          NPUSHB[ ]	/* 25 values pushed */
          16 0 77 153 13 1 148 11 1 20 50 50 64 20 1 77 50 49 54 26 54 16 48 22 22
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 56 values pushed */
          20 1 77 194 22 1 160 22 1 22 21 44 37 83 16 57 26 9 83 48 44 64 44 2 44
          56 184 12 1 182 40 1 12 40 49 21 53 80 191 55 1 55 55 17 43 45 15 43 8 12
          0 77 144 43 1 15
          PUSHW[ ]	/* 1 value pushed */
          -8
          NPUSHB[ ]	/* 24 values pushed */
          12 0 77 159 15 1 43 15 32 4 87 49 7 25 80 176 27 1 27 27 32 87 21 11
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="scaron" xMin="82" yMin="-31" xMax="903" yMax="1488">
      <component glyphName="s" x="0" y="0" flags="0x204"/>
      <component glyphName="caron" x="-6" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="section" xMin="74" yMin="-471" xMax="1053" yMax="1548">
      <contour>
        <pt x="74" y="-25" on="1"/>
        <pt x="311" y="-25" on="1"/>
        <pt x="311" y="-49" on="1"/>
        <pt x="311" y="-104" on="0"/>
        <pt x="347" y="-192" on="0"/>
        <pt x="414" y="-255" on="0"/>
        <pt x="509" y="-289" on="0"/>
        <pt x="567" y="-289" on="1"/>
        <pt x="671" y="-289" on="0"/>
        <pt x="788" y="-180" on="0"/>
        <pt x="788" y="-84" on="1"/>
        <pt x="788" y="-31" on="0"/>
        <pt x="751" y="45" on="0"/>
        <pt x="694" y="97" on="0"/>
        <pt x="622" y="130" on="0"/>
        <pt x="588" y="141" on="1"/>
        <pt x="542" y="155" on="0"/>
        <pt x="452" y="183" on="0"/>
        <pt x="406" y="197" on="1"/>
        <pt x="342" y="216" on="0"/>
        <pt x="235" y="276" on="0"/>
        <pt x="158" y="363" on="0"/>
        <pt x="115" y="480" on="0"/>
        <pt x="115" y="557" on="1"/>
        <pt x="115" y="660" on="0"/>
        <pt x="212" y="828" on="0"/>
        <pt x="305" y="880" on="1"/>
        <pt x="239" y="928" on="0"/>
        <pt x="156" y="1082" on="0"/>
        <pt x="156" y="1190" on="1"/>
        <pt x="156" y="1268" on="0"/>
        <pt x="211" y="1399" on="0"/>
        <pt x="319" y="1494" on="0"/>
        <pt x="477" y="1548" on="0"/>
        <pt x="580" y="1548" on="1"/>
        <pt x="662" y="1548" on="0"/>
        <pt x="797" y="1513" on="0"/>
        <pt x="901" y="1450" on="0"/>
        <pt x="971" y="1364" on="0"/>
        <pt x="988" y="1313" on="1"/>
        <pt x="1053" y="1313" on="1"/>
        <pt x="1053" y="1147" on="1"/>
        <pt x="821" y="1147" on="1"/>
        <pt x="821" y="1203" on="1"/>
        <pt x="821" y="1203" on="0"/>
        <pt x="821" y="1203" on="0"/>
        <pt x="821" y="1203" on="1"/>
        <pt x="821" y="1203" on="1"/>
        <pt x="813" y="1243" on="0"/>
        <pt x="765" y="1305" on="0"/>
        <pt x="698" y="1348" on="0"/>
        <pt x="617" y="1370" on="0"/>
        <pt x="575" y="1370" on="1"/>
        <pt x="518" y="1370" on="0"/>
        <pt x="435" y="1345" on="0"/>
        <pt x="381" y="1300" on="0"/>
        <pt x="354" y="1239" on="0"/>
        <pt x="354" y="1202" on="1"/>
        <pt x="354" y="1156" on="0"/>
        <pt x="389" y="1089" on="0"/>
        <pt x="444" y="1040" on="0"/>
        <pt x="513" y="1007" on="0"/>
        <pt x="547" y="995" on="1"/>
        <pt x="624" y="968" on="0"/>
        <pt x="758" y="919" on="0"/>
        <pt x="869" y="867" on="0"/>
        <pt x="956" y="806" on="0"/>
        <pt x="1016" y="728" on="0"/>
        <pt x="1047" y="629" on="0"/>
        <pt x="1047" y="563" on="1"/>
        <pt x="1047" y="457" on="0"/>
        <pt x="942" y="286" on="0"/>
        <pt x="851" y="232" on="1"/>
        <pt x="921" y="182" on="0"/>
        <pt x="995" y="35" on="0"/>
        <pt x="995" y="-72" on="1"/>
        <pt x="995" y="-158" on="0"/>
        <pt x="930" y="-304" on="0"/>
        <pt x="814" y="-411" on="0"/>
        <pt x="654" y="-471" on="0"/>
        <pt x="559" y="-471" on="1"/>
        <pt x="461" y="-471" on="0"/>
        <pt x="319" y="-425" on="0"/>
        <pt x="221" y="-347" on="0"/>
        <pt x="160" y="-245" on="0"/>
        <pt x="144" y="-190" on="1"/>
        <pt x="74" y="-190" on="1"/>
      </contour>
      <contour>
        <pt x="313" y="567" on="1"/>
        <pt x="313" y="513" on="0"/>
        <pt x="354" y="447" on="0"/>
        <pt x="418" y="406" on="0"/>
        <pt x="495" y="382" on="1"/>
        <pt x="599" y="344" on="1"/>
        <pt x="710" y="348" on="0"/>
        <pt x="840" y="459" on="0"/>
        <pt x="840" y="553" on="1"/>
        <pt x="840" y="604" on="0"/>
        <pt x="796" y="675" on="0"/>
        <pt x="727" y="724" on="0"/>
        <pt x="643" y="756" on="0"/>
        <pt x="602" y="767" on="1"/>
        <pt x="581" y="766" on="0"/>
        <pt x="575" y="766" on="1"/>
        <pt x="510" y="766" on="0"/>
        <pt x="412" y="735" on="0"/>
        <pt x="346" y="681" on="0"/>
        <pt x="313" y="609" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHW[ ]	/* 2 values pushed */
          71 -24
          NPUSHB[ ]	/* 9 values pushed */
          12 0 77 25 24 12 0 77 60
          PUSHW[ ]	/* 1 value pushed */
          -32
          NPUSHB[ ]	/* 63 values pushed */
          12 0 77 13 24 12 0 77 2 70 85 85 23 57 70 29 29 87 70 23 107 10 70 160 75
          1 75 75 69 43 70 39 39 95 70 69 54 62 1 62 98 90 15 4 80 34 1 50 0 1
          0 41 0 41 52 7 74 80 14 52 74 34 8
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="semicolon" xMin="-20" yMin="-340" xMax="383" yMax="1036">
      <contour>
        <pt x="96" y="907" on="1"/>
        <pt x="96" y="933" on="0"/>
        <pt x="117" y="980" on="0"/>
        <pt x="153" y="1015" on="0"/>
        <pt x="200" y="1036" on="0"/>
        <pt x="227" y="1036" on="1"/>
        <pt x="253" y="1036" on="0"/>
        <pt x="300" y="1015" on="0"/>
        <pt x="335" y="980" on="0"/>
        <pt x="356" y="933" on="0"/>
        <pt x="356" y="907" on="1"/>
        <pt x="356" y="880" on="0"/>
        <pt x="335" y="832" on="0"/>
        <pt x="300" y="796" on="0"/>
        <pt x="253" y="774" on="0"/>
        <pt x="227" y="774" on="1"/>
        <pt x="200" y="774" on="0"/>
        <pt x="153" y="796" on="0"/>
        <pt x="117" y="832" on="0"/>
        <pt x="96" y="880" on="0"/>
      </contour>
      <contour>
        <pt x="164" y="283" on="1"/>
        <pt x="383" y="197" on="1"/>
        <pt x="123" y="-340" on="1"/>
        <pt x="-20" y="-287" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 58 values pushed */
          63 24 1 121 20 1 48 22 1 32 20 1 25 25 48 21 112 21 2 21 161 63 23 1 23
          24 7 116 13 1 13 111 15 17 123 3 1 3 111 5 15 5 10 110 0 22 80 24 48 20
          1 20 47 15 1 15 5 6
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01100]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01001]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01001]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[11001]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDRP[00010]	/* MoveDirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="seven" xMin="41" yMin="0" xMax="1036" yMax="1516">
      <contour>
        <pt x="182" y="172" on="1"/>
        <pt x="299" y="172" on="1"/>
        <pt x="353" y="326" on="0"/>
        <pt x="483" y="643" on="0"/>
        <pt x="617" y="943" on="0"/>
        <pt x="747" y="1214" on="0"/>
        <pt x="801" y="1323" on="1"/>
        <pt x="233" y="1323" on="1"/>
        <pt x="233" y="1206" on="1"/>
        <pt x="41" y="1206" on="1"/>
        <pt x="41" y="1516" on="1"/>
        <pt x="1036" y="1516" on="1"/>
        <pt x="1036" y="1366" on="1"/>
        <pt x="970" y="1236" on="0"/>
        <pt x="826" y="945" on="0"/>
        <pt x="685" y="639" on="0"/>
        <pt x="553" y="325" on="0"/>
        <pt x="499" y="172" on="1"/>
        <pt x="625" y="172" on="1"/>
        <pt x="625" y="0" on="1"/>
        <pt x="182" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 59 values pushed */
          116 22 1 118 12 1 118 11 1 112 12 1 2 7 68 9 21 19 78 17 22 52 12 1 17
          12 6 1 17 1 12 106 6 1 20 6 1 12 127 6 1 52 6 1 6 52 1 1 1 1
          80 20 8 11 2 6 72 10 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[0]	/* SetFVectorToAxis */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          RTG[ ]	/* RoundToGrid */
          MDRP[01110]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="six" xMin="94" yMin="-20" xMax="1151" yMax="1516">
      <contour>
        <pt x="815" y="1516" on="1"/>
        <pt x="475" y="949" on="1"/>
        <pt x="536" y="975" on="0"/>
        <pt x="635" y="983" on="0"/>
        <pt x="674" y="983" on="1"/>
        <pt x="766" y="983" on="0"/>
        <pt x="938" y="914" on="0"/>
        <pt x="1071" y="789" on="0"/>
        <pt x="1151" y="616" on="0"/>
        <pt x="1151" y="512" on="1"/>
        <pt x="1151" y="385" on="0"/>
        <pt x="1065" y="187" on="0"/>
        <pt x="919" y="51" on="0"/>
        <pt x="726" y="-20" on="0"/>
        <pt x="618" y="-20" on="1"/>
        <pt x="516" y="-20" on="0"/>
        <pt x="327" y="54" on="0"/>
        <pt x="181" y="187" on="0"/>
        <pt x="94" y="374" on="0"/>
        <pt x="94" y="488" on="1"/>
        <pt x="94" y="576" on="0"/>
        <pt x="161" y="748" on="0"/>
        <pt x="211" y="842" on="1"/>
        <pt x="582" y="1516" on="1"/>
      </contour>
      <contour>
        <pt x="596" y="819" on="1"/>
        <pt x="524" y="819" on="0"/>
        <pt x="423" y="774" on="0"/>
        <pt x="333" y="693" on="0"/>
        <pt x="281" y="568" on="0"/>
        <pt x="281" y="486" on="1"/>
        <pt x="281" y="408" on="0"/>
        <pt x="333" y="284" on="0"/>
        <pt x="425" y="199" on="0"/>
        <pt x="550" y="154" on="0"/>
        <pt x="623" y="154" on="1"/>
        <pt x="691" y="154" on="0"/>
        <pt x="815" y="202" on="0"/>
        <pt x="909" y="290" on="0"/>
        <pt x="965" y="412" on="0"/>
        <pt x="965" y="486" on="1"/>
        <pt x="965" y="568" on="0"/>
        <pt x="905" y="693" on="0"/>
        <pt x="804" y="777" on="0"/>
        <pt x="670" y="819" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 87 values pushed */
          116 26 1 115 22 1 37 22 1 59 18 1 59 16 1 50 12 1 54 11 1 50 8 1 52
          6 1 124 2 1 48 1 112 1 2 116 26 1 51 26 1 115 2 1 54 2 1 117 1 1
          48 1 1 24 14 4 4 19 39 70 9 45 0 68 63 23 127 23 2 23 23 29 70 48 19
          1 19 44 23 2 34 74 14 9 24 74 4
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="slash" xMin="37" yMin="-29" xMax="811" yMax="1569">
      <contour>
        <pt x="637" y="1569" on="1"/>
        <pt x="811" y="1569" on="1"/>
        <pt x="211" y="-29" on="1"/>
        <pt x="37" y="-29" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 27 values pushed */
          5 1 2 3 0 1 0 2 77 3 0 20 3 0 2 3 127 0 1 59 0 1 0 3 8
          0 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDRP[01110]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="space" xMin="0" yMin="0" xMax="0" yMax="0">
      <contour>
        <pt x="0" y="0" on="0"/>
      </contour>
      <instructions><assembly>
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="sterling" xMin="33" yMin="4" xMax="866" yMax="1458">
      <contour>
        <pt x="33" y="807" on="1"/>
        <pt x="228" y="807" on="1"/>
        <pt x="202" y="876" on="0"/>
        <pt x="164" y="1022" on="0"/>
        <pt x="164" y="1104" on="1"/>
        <pt x="164" y="1182" on="0"/>
        <pt x="218" y="1312" on="0"/>
        <pt x="316" y="1406" on="0"/>
        <pt x="452" y="1458" on="0"/>
        <pt x="535" y="1458" on="1"/>
        <pt x="609" y="1458" on="0"/>
        <pt x="733" y="1405" on="0"/>
        <pt x="821" y="1311" on="0"/>
        <pt x="866" y="1181" on="0"/>
        <pt x="862" y="1104" on="1"/>
        <pt x="696" y="1094" on="1"/>
        <pt x="695" y="1132" on="0"/>
        <pt x="674" y="1204" on="0"/>
        <pt x="634" y="1260" on="0"/>
        <pt x="575" y="1294" on="0"/>
        <pt x="537" y="1294" on="1"/>
        <pt x="494" y="1294" on="0"/>
        <pt x="428" y="1269" on="0"/>
        <pt x="383" y="1226" on="0"/>
        <pt x="358" y="1168" on="0"/>
        <pt x="356" y="1135" on="1"/>
        <pt x="354" y="1110" on="0"/>
        <pt x="358" y="1063" on="0"/>
        <pt x="368" y="1012" on="0"/>
        <pt x="386" y="952" on="0"/>
        <pt x="397" y="915" on="1"/>
        <pt x="404" y="888" on="0"/>
        <pt x="420" y="834" on="0"/>
        <pt x="428" y="807" on="1"/>
        <pt x="707" y="807" on="1"/>
        <pt x="707" y="662" on="1"/>
        <pt x="473" y="662" on="1"/>
        <pt x="487" y="619" on="0"/>
        <pt x="508" y="542" on="0"/>
        <pt x="516" y="510" on="1"/>
        <pt x="525" y="472" on="0"/>
        <pt x="516" y="382" on="0"/>
        <pt x="481" y="290" on="0"/>
        <pt x="419" y="205" on="0"/>
        <pt x="374" y="172" on="1"/>
        <pt x="860" y="172" on="1"/>
        <pt x="860" y="4" on="1"/>
        <pt x="61" y="4" on="1"/>
        <pt x="61" y="172" on="1"/>
        <pt x="171" y="172" on="1"/>
        <pt x="232" y="207" on="0"/>
        <pt x="306" y="304" on="0"/>
        <pt x="336" y="419" on="0"/>
        <pt x="325" y="550" on="0"/>
        <pt x="301" y="618" on="1"/>
        <pt x="285" y="662" on="1"/>
        <pt x="33" y="662" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 59 values pushed */
          15 70 52 14 116 14 2 14 58 46 48 57 33 36 70 1 55 1 127 1 1 2 63 1 1
          1 4 49 0 127 0 1 0 57 26 70 48 4 112 4 2 4 57 1 33 72 35 56 56 9
          48 45 80 47 8 20 74 9 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10100]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MDRP[00101]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="t" xMin="51" yMin="-25" xMax="711" yMax="1370">
      <contour>
        <pt x="400" y="1036" on="1"/>
        <pt x="643" y="1036" on="1"/>
        <pt x="643" y="885" on="1"/>
        <pt x="398" y="885" on="1"/>
        <pt x="395" y="287" on="1"/>
        <pt x="395" y="226" on="0"/>
        <pt x="423" y="150" on="0"/>
        <pt x="485" y="121" on="0"/>
        <pt x="524" y="121" on="1"/>
        <pt x="566" y="121" on="0"/>
        <pt x="630" y="136" on="0"/>
        <pt x="668" y="154" on="1"/>
        <pt x="711" y="29" on="1"/>
        <pt x="663" y="4" on="0"/>
        <pt x="557" y="-25" on="0"/>
        <pt x="485" y="-25" on="1"/>
        <pt x="417" y="-25" on="0"/>
        <pt x="316" y="8" on="0"/>
        <pt x="247" y="86" on="0"/>
        <pt x="213" y="217" on="0"/>
        <pt x="213" y="315" on="1"/>
        <pt x="216" y="885" on="1"/>
        <pt x="51" y="885" on="1"/>
        <pt x="51" y="1036" on="1"/>
        <pt x="218" y="1036" on="1"/>
        <pt x="218" y="1284" on="1"/>
        <pt x="400" y="1370" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 42 values pushed */
          159 2 175 2 2 159 1 175 1 2 17 32 12 0 77 28 63 2 1 2 121 4 0 0 4
          81 21 24 24 23 78 21 27 21 3 85 23 6 8 87 15 11
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDRP[01110]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="thorn" xMin="55" yMin="-471" xMax="1153" yMax="1577">
      <contour>
        <pt x="57" y="1577" on="1"/>
        <pt x="385" y="1577" on="1"/>
        <pt x="385" y="950" on="1"/>
        <pt x="451" y="1001" on="0"/>
        <pt x="607" y="1061" on="0"/>
        <pt x="690" y="1061" on="1"/>
        <pt x="792" y="1061" on="0"/>
        <pt x="962" y="985" on="0"/>
        <pt x="1085" y="847" on="0"/>
        <pt x="1153" y="654" on="0"/>
        <pt x="1153" y="537" on="1"/>
        <pt x="1153" y="412" on="0"/>
        <pt x="1077" y="209" on="0"/>
        <pt x="942" y="63" on="0"/>
        <pt x="756" y="-16" on="0"/>
        <pt x="645" y="-16" on="1"/>
        <pt x="568" y="-16" on="0"/>
        <pt x="433" y="28" on="0"/>
        <pt x="385" y="65" on="1"/>
        <pt x="385" y="-299" on="1"/>
        <pt x="547" y="-299" on="1"/>
        <pt x="547" y="-471" on="1"/>
        <pt x="55" y="-471" on="1"/>
        <pt x="55" y="-299" on="1"/>
        <pt x="199" y="-299" on="1"/>
        <pt x="199" y="1405" on="1"/>
        <pt x="57" y="1405" on="1"/>
      </contour>
      <contour>
        <pt x="641" y="897" on="1"/>
        <pt x="568" y="897" on="0"/>
        <pt x="434" y="837" on="0"/>
        <pt x="385" y="786" on="1"/>
        <pt x="385" y="229" on="1"/>
        <pt x="417" y="196" on="0"/>
        <pt x="541" y="145" on="0"/>
        <pt x="635" y="145" on="1"/>
        <pt x="699" y="145" on="0"/>
        <pt x="817" y="193" on="0"/>
        <pt x="907" y="290" on="0"/>
        <pt x="961" y="434" on="0"/>
        <pt x="961" y="530" on="1"/>
        <pt x="961" y="618" on="0"/>
        <pt x="910" y="754" on="0"/>
        <pt x="823" y="848" on="0"/>
        <pt x="707" y="897" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 30 values pushed */
          39 83 10 45 20 87 2 30 81 26 22 78 24 44 19 80 22 14 34 87 15 11 27 87 5
          7 25 80 0 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[11101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[01100]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="three" xMin="41" yMin="-14" xMax="987" yMax="1546">
      <contour>
        <pt x="780" y="1120" on="1"/>
        <pt x="780" y="1159" on="0"/>
        <pt x="747" y="1248" on="0"/>
        <pt x="678" y="1323" on="0"/>
        <pt x="573" y="1372" on="0"/>
        <pt x="502" y="1372" on="1"/>
        <pt x="443" y="1372" on="0"/>
        <pt x="346" y="1331" on="0"/>
        <pt x="250" y="1219" on="0"/>
        <pt x="246" y="1151" on="1"/>
        <pt x="56" y="1151" on="1"/>
        <pt x="61" y="1238" on="0"/>
        <pt x="138" y="1378" on="0"/>
        <pt x="256" y="1484" on="0"/>
        <pt x="414" y="1546" on="0"/>
        <pt x="500" y="1546" on="1"/>
        <pt x="607" y="1546" on="0"/>
        <pt x="781" y="1475" on="0"/>
        <pt x="904" y="1358" on="0"/>
        <pt x="971" y="1208" on="0"/>
        <pt x="971" y="1130" on="1"/>
        <pt x="971" y="1082" on="0"/>
        <pt x="947" y="986" on="0"/>
        <pt x="896" y="899" on="0"/>
        <pt x="816" y="825" on="0"/>
        <pt x="759" y="797" on="1"/>
        <pt x="806" y="779" on="0"/>
        <pt x="889" y="714" on="0"/>
        <pt x="951" y="624" on="0"/>
        <pt x="987" y="510" on="0"/>
        <pt x="987" y="442" on="1"/>
        <pt x="987" y="344" on="0"/>
        <pt x="911" y="177" on="0"/>
        <pt x="781" y="55" on="0"/>
        <pt x="606" y="-14" on="0"/>
        <pt x="506" y="-14" on="1"/>
        <pt x="414" y="-14" on="0"/>
        <pt x="233" y="51" on="0"/>
        <pt x="107" y="171" on="0"/>
        <pt x="47" y="301" on="0"/>
        <pt x="41" y="365" on="1"/>
        <pt x="233" y="365" on="1"/>
        <pt x="262" y="272" on="0"/>
        <pt x="411" y="166" on="0"/>
        <pt x="526" y="166" on="1"/>
        <pt x="578" y="166" on="0"/>
        <pt x="677" y="208" on="0"/>
        <pt x="753" y="283" on="0"/>
        <pt x="799" y="384" on="0"/>
        <pt x="799" y="444" on="1"/>
        <pt x="799" y="507" on="0"/>
        <pt x="753" y="609" on="0"/>
        <pt x="675" y="680" on="0"/>
        <pt x="572" y="719" on="0"/>
        <pt x="514" y="719" on="1"/>
        <pt x="428" y="719" on="1"/>
        <pt x="428" y="870" on="1"/>
        <pt x="498" y="870" on="1"/>
        <pt x="564" y="870" on="0"/>
        <pt x="669" y="909" on="0"/>
        <pt x="741" y="977" on="0"/>
        <pt x="780" y="1068" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 67 values pushed */
          117 18 1 124 12 1 123 38 1 38 40 33 30 35 35 40 49 70 30 63 25 56 20 3 5
          7 3 9 0 70 20 63 48 63 1 9 41 70 10 48 40 1 40 62 48 56 1 56 25 25
          57 74 20 15 30 35 55 55 15 44 74 35 9 5 74 15 3
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          RTHG[ ]	/* RoundToHalfGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTHG[ ]	/* RoundToHalfGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="threequarters" xMin="0" yMin="-61" xMax="1560" yMax="1577">
      <contour>
        <pt x="1337" y="1577" on="1"/>
        <pt x="1536" y="1577" on="1"/>
        <pt x="260" y="-61" on="1"/>
        <pt x="61" y="-61" on="1"/>
      </contour>
      <contour>
        <pt x="373" y="1309" on="1"/>
        <pt x="373" y="1324" on="0"/>
        <pt x="359" y="1355" on="0"/>
        <pt x="332" y="1382" on="0"/>
        <pt x="291" y="1399" on="0"/>
        <pt x="264" y="1399" on="1"/>
        <pt x="249" y="1399" on="0"/>
        <pt x="213" y="1389" on="0"/>
        <pt x="182" y="1366" on="0"/>
        <pt x="162" y="1331" on="0"/>
        <pt x="162" y="1307" on="1"/>
        <pt x="12" y="1307" on="1"/>
        <pt x="13" y="1354" on="0"/>
        <pt x="51" y="1437" on="0"/>
        <pt x="117" y="1498" on="0"/>
        <pt x="209" y="1534" on="0"/>
        <pt x="264" y="1534" on="1"/>
        <pt x="320" y="1534" on="0"/>
        <pt x="416" y="1499" on="0"/>
        <pt x="485" y="1439" on="0"/>
        <pt x="524" y="1360" on="0"/>
        <pt x="524" y="1317" on="1"/>
        <pt x="524" y="1268" on="0"/>
        <pt x="481" y="1189" on="0"/>
        <pt x="440" y="1165" on="1"/>
        <pt x="459" y="1156" on="0"/>
        <pt x="493" y="1125" on="0"/>
        <pt x="519" y="1083" on="0"/>
        <pt x="534" y="1033" on="0"/>
        <pt x="534" y="1006" on="1"/>
        <pt x="534" y="958" on="0"/>
        <pt x="493" y="872" on="0"/>
        <pt x="421" y="807" on="0"/>
        <pt x="323" y="770" on="0"/>
        <pt x="266" y="770" on="1"/>
        <pt x="212" y="770" on="0"/>
        <pt x="116" y="802" on="0"/>
        <pt x="43" y="862" on="0"/>
        <pt x="0" y="947" on="0"/>
        <pt x="0" y="1001" on="1"/>
        <pt x="151" y="1001" on="1"/>
        <pt x="158" y="956" on="0"/>
        <pt x="219" y="905" on="0"/>
        <pt x="270" y="905" on="1"/>
        <pt x="294" y="905" on="0"/>
        <pt x="335" y="921" on="0"/>
        <pt x="366" y="950" on="0"/>
        <pt x="383" y="987" on="0"/>
        <pt x="383" y="1008" on="1"/>
        <pt x="383" y="1051" on="0"/>
        <pt x="320" y="1106" on="0"/>
        <pt x="266" y="1106" on="1"/>
        <pt x="201" y="1106" on="1"/>
        <pt x="201" y="1219" on="1"/>
        <pt x="268" y="1219" on="1"/>
        <pt x="318" y="1219" on="0"/>
        <pt x="373" y="1270" on="0"/>
      </contour>
      <contour>
        <pt x="975" y="303" on="1"/>
        <pt x="1255" y="760" on="1"/>
        <pt x="1403" y="760" on="1"/>
        <pt x="1130" y="305" on="1"/>
        <pt x="1313" y="305" on="1"/>
        <pt x="1313" y="469" on="1"/>
        <pt x="1448" y="469" on="1"/>
        <pt x="1448" y="305" on="1"/>
        <pt x="1560" y="305" on="1"/>
        <pt x="1560" y="195" on="1"/>
        <pt x="1448" y="195" on="1"/>
        <pt x="1448" y="0" on="1"/>
        <pt x="1313" y="0" on="1"/>
        <pt x="1313" y="195" on="1"/>
        <pt x="977" y="195" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 76 values pushed */
          75 63 1 51 35 1 66 28 1 53 28 1 51 23 1 77 36 1 66 22 114 22 2 64 81
          64 75 1 75 74 65 168 71 77 1 2 3 0 1 0 2 77 3 0 20 3 0 2 3 127
          0 1 0 62 65 169 74 71 73 8 28 28 20 47 170 43 38 9 170 15 20 0 3 8 0
          0
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MDRP[00101]	/* MoveDirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MDRP[11100]	/* MoveDirectRelPt */
          MDRP[01101]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTHG[ ]	/* RoundToHalfGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          MIAP[1]	/* MoveIndirectAbsPt */
          MDRP[11101]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MIRP[11101]	/* MoveIndirectRelPt */
          MDRP[01100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[11101]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="threesuperior" xMin="51" yMin="831" xMax="569" yMax="1581">
      <contour>
        <pt x="428" y="1364" on="1"/>
        <pt x="428" y="1380" on="0"/>
        <pt x="412" y="1415" on="0"/>
        <pt x="381" y="1443" on="0"/>
        <pt x="336" y="1462" on="0"/>
        <pt x="307" y="1462" on="1"/>
        <pt x="291" y="1462" on="0"/>
        <pt x="251" y="1451" on="0"/>
        <pt x="217" y="1427" on="0"/>
        <pt x="193" y="1390" on="0"/>
        <pt x="193" y="1364" on="1"/>
        <pt x="61" y="1364" on="1"/>
        <pt x="64" y="1408" on="0"/>
        <pt x="102" y="1487" on="0"/>
        <pt x="166" y="1546" on="0"/>
        <pt x="254" y="1581" on="0"/>
        <pt x="305" y="1581" on="1"/>
        <pt x="361" y="1581" on="0"/>
        <pt x="455" y="1546" on="0"/>
        <pt x="522" y="1488" on="0"/>
        <pt x="559" y="1412" on="0"/>
        <pt x="559" y="1370" on="1"/>
        <pt x="559" y="1322" on="0"/>
        <pt x="513" y="1243" on="0"/>
        <pt x="467" y="1218" on="1"/>
        <pt x="509" y="1199" on="0"/>
        <pt x="569" y="1116" on="0"/>
        <pt x="569" y="1057" on="1"/>
        <pt x="569" y="1009" on="0"/>
        <pt x="529" y="926" on="0"/>
        <pt x="458" y="865" on="0"/>
        <pt x="362" y="831" on="0"/>
        <pt x="307" y="831" on="1"/>
        <pt x="259" y="831" on="0"/>
        <pt x="167" y="860" on="0"/>
        <pt x="95" y="917" on="0"/>
        <pt x="51" y="998" on="0"/>
        <pt x="51" y="1051" on="1"/>
        <pt x="184" y="1051" on="1"/>
        <pt x="192" y="1003" on="0"/>
        <pt x="259" y="952" on="0"/>
        <pt x="313" y="952" on="1"/>
        <pt x="338" y="952" on="0"/>
        <pt x="384" y="967" on="0"/>
        <pt x="418" y="995" on="0"/>
        <pt x="438" y="1032" on="0"/>
        <pt x="438" y="1055" on="1"/>
        <pt x="438" y="1106" on="0"/>
        <pt x="366" y="1161" on="0"/>
        <pt x="309" y="1161" on="1"/>
        <pt x="252" y="1161" on="1"/>
        <pt x="252" y="1268" on="1"/>
        <pt x="307" y="1268" on="1"/>
        <pt x="364" y="1268" on="0"/>
        <pt x="428" y="1322" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 22 values pushed */
          50 32 19 1 77 64 24 1 30 24 12 0 77 105 30 121 30 2 77 30 1 18
          PUSHW[ ]	/* 1 value pushed */
          -16
          NPUSHB[ ]	/* 58 values pushed */
          12 0 77 116 18 1 102 18 1 68 18 1 11 11 160 10 1 10 168 37 55 0 168 21 21
          46 168 27 51 50 50 5 41 170 175 37 1 37 111 32 1 48 32 1 32 24 24 32 55 10
          160 11 1 11 5 170 16 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDRP[01001]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          RTHG[ ]	/* RoundToHalfGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDRP[01001]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDRP[01101]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[01110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="tilde" xMin="88" yMin="1178" xMax="809" yMax="1415">
      <contour>
        <pt x="313" y="1415" on="1"/>
        <pt x="363" y="1415" on="0"/>
        <pt x="436" y="1382" on="0"/>
        <pt x="499" y="1343" on="0"/>
        <pt x="561" y="1311" on="0"/>
        <pt x="600" y="1311" on="1"/>
        <pt x="628" y="1311" on="0"/>
        <pt x="681" y="1349" on="0"/>
        <pt x="690" y="1391" on="1"/>
        <pt x="809" y="1356" on="1"/>
        <pt x="789" y="1271" on="0"/>
        <pt x="673" y="1178" on="0"/>
        <pt x="592" y="1178" on="1"/>
        <pt x="536" y="1178" on="0"/>
        <pt x="458" y="1209" on="0"/>
        <pt x="394" y="1245" on="0"/>
        <pt x="338" y="1276" on="0"/>
        <pt x="305" y="1276" on="1"/>
        <pt x="290" y="1276" on="0"/>
        <pt x="259" y="1272" on="0"/>
        <pt x="229" y="1257" on="0"/>
        <pt x="204" y="1226" on="0"/>
        <pt x="197" y="1198" on="1"/>
        <pt x="88" y="1251" on="1"/>
        <pt x="101" y="1298" on="0"/>
        <pt x="149" y="1361" on="0"/>
        <pt x="209" y="1399" on="0"/>
        <pt x="278" y="1415" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 21 values pushed */
          53 10 1 52 2 1 9 29 50 23 1 23 28 8 2 22 12 5 17 0 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MDRP[01101]	/* MoveDirectRelPt */
          MDRP[11100]	/* MoveDirectRelPt */
          MDRP[01101]	/* MoveDirectRelPt */
          MDRP[01100]	/* MoveDirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00110]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="two" xMin="86" yMin="0" xMax="979" yMax="1542">
      <contour>
        <pt x="88" y="147" on="1"/>
        <pt x="621" y="791" on="1"/>
        <pt x="648" y="823" on="0"/>
        <pt x="707" y="897" on="0"/>
        <pt x="758" y="979" on="0"/>
        <pt x="791" y="1068" on="0"/>
        <pt x="791" y="1116" on="1"/>
        <pt x="791" y="1166" on="0"/>
        <pt x="751" y="1254" on="0"/>
        <pt x="681" y="1320" on="0"/>
        <pt x="584" y="1358" on="0"/>
        <pt x="526" y="1358" on="1"/>
        <pt x="474" y="1358" on="0"/>
        <pt x="381" y="1325" on="0"/>
        <pt x="311" y="1261" on="0"/>
        <pt x="268" y="1166" on="0"/>
        <pt x="266" y="1104" on="1"/>
        <pt x="86" y="1104" on="1"/>
        <pt x="87" y="1199" on="0"/>
        <pt x="159" y="1360" on="0"/>
        <pt x="280" y="1477" on="0"/>
        <pt x="440" y="1542" on="0"/>
        <pt x="528" y="1542" on="1"/>
        <pt x="630" y="1542" on="0"/>
        <pt x="796" y="1477" on="0"/>
        <pt x="914" y="1363" on="0"/>
        <pt x="979" y="1207" on="0"/>
        <pt x="979" y="1116" on="1"/>
        <pt x="979" y="1080" on="0"/>
        <pt x="962" y="999" on="0"/>
        <pt x="921" y="906" on="0"/>
        <pt x="854" y="800" on="0"/>
        <pt x="803" y="739" on="1"/>
        <pt x="330" y="176" on="1"/>
        <pt x="977" y="176" on="1"/>
        <pt x="977" y="0" on="1"/>
        <pt x="88" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 41 values pushed */
          33 31 31 106 2 0 20 2 0 31 2 2 27 0 37 19 22 27 16 70 17 38 27 34 34
          27 70 6 2 11 33 34 72 0 72 36 8 11 74 22 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01110]	/* MoveDirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01110]	/* MoveDirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          CALL[ ]	/* CallFunction */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="twoinferior" xMin="100" yMin="0" xMax="608" yMax="752">
      <contour>
        <pt x="102" y="121" on="1"/>
        <pt x="376" y="397" on="1"/>
        <pt x="393" y="412" on="0"/>
        <pt x="421" y="444" on="0"/>
        <pt x="441" y="477" on="0"/>
        <pt x="452" y="510" on="0"/>
        <pt x="452" y="526" on="1"/>
        <pt x="452" y="561" on="0"/>
        <pt x="398" y="612" on="0"/>
        <pt x="352" y="612" on="1"/>
        <pt x="327" y="612" on="0"/>
        <pt x="288" y="597" on="0"/>
        <pt x="260" y="570" on="0"/>
        <pt x="245" y="533" on="0"/>
        <pt x="245" y="512" on="1"/>
        <pt x="100" y="512" on="1"/>
        <pt x="100" y="568" on="0"/>
        <pt x="140" y="657" on="0"/>
        <pt x="209" y="719" on="0"/>
        <pt x="303" y="752" on="0"/>
        <pt x="356" y="752" on="1"/>
        <pt x="407" y="752" on="0"/>
        <pt x="499" y="723" on="0"/>
        <pt x="568" y="666" on="0"/>
        <pt x="608" y="583" on="0"/>
        <pt x="608" y="530" on="1"/>
        <pt x="608" y="509" on="0"/>
        <pt x="598" y="470" on="0"/>
        <pt x="579" y="432" on="0"/>
        <pt x="552" y="395" on="0"/>
        <pt x="534" y="377" on="1"/>
        <pt x="305" y="141" on="1"/>
        <pt x="606" y="141" on="1"/>
        <pt x="606" y="0" on="1"/>
        <pt x="102" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 43 values pushed */
          29 31 0 2 29 2 31 119 0 2 20 0 0 2 2 0 32 6 113 25 36 14 113 15 15
          0 35 34 8 2 15 15 9 31 31 0 169 33 8 9 170 20 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          IP[ ]	/* InterpolatePts */
          MIAP[1]	/* MoveIndirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SRP0[ ]	/* SetRefPoint0 */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="twosuperior" xMin="53" yMin="842" xMax="545" yMax="1579">
      <contour>
        <pt x="55" y="944" on="1"/>
        <pt x="330" y="1221" on="1"/>
        <pt x="361" y="1253" on="0"/>
        <pt x="412" y="1324" on="0"/>
        <pt x="412" y="1362" on="1"/>
        <pt x="412" y="1381" on="0"/>
        <pt x="396" y="1416" on="0"/>
        <pt x="366" y="1442" on="0"/>
        <pt x="323" y="1458" on="0"/>
        <pt x="297" y="1458" on="1"/>
        <pt x="244" y="1458" on="0"/>
        <pt x="180" y="1398" on="0"/>
        <pt x="178" y="1350" on="1"/>
        <pt x="53" y="1350" on="1"/>
        <pt x="53" y="1402" on="0"/>
        <pt x="92" y="1487" on="0"/>
        <pt x="160" y="1547" on="0"/>
        <pt x="249" y="1579" on="0"/>
        <pt x="299" y="1579" on="1"/>
        <pt x="351" y="1579" on="0"/>
        <pt x="441" y="1549" on="0"/>
        <pt x="507" y="1492" on="0"/>
        <pt x="545" y="1412" on="0"/>
        <pt x="545" y="1362" on="1"/>
        <pt x="545" y="1324" on="0"/>
        <pt x="507" y="1240" on="0"/>
        <pt x="465" y="1198" on="1"/>
        <pt x="230" y="963" on="1"/>
        <pt x="543" y="963" on="1"/>
        <pt x="543" y="842" on="1"/>
        <pt x="55" y="842" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHW[ ]	/* 2 values pushed */
          25 -32
          NPUSHB[ ]	/* 13 values pushed */
          16 0 77 175 12 1 171 11 1 173 25 1 20
          PUSHW[ ]	/* 1 value pushed */
          -24
          PUSHB[ ]	/* 4 values pushed */
          12 0 77 16
          PUSHW[ ]	/* 1 value pushed */
          -16
          NPUSHB[ ]	/* 48 values pushed */
          12 0 77 173 0 1 18 13 28 4 168 23 30 13 13 30 31 27 26 2 0 27 0 26 119
          2 0 20 2 0 26 2 0 2 9 0 28 169 48 30 1 30 30 31 9 170 18 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11101]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="u" xMin="60" yMin="-18" xMax="1173" yMax="1036">
      <contour>
        <pt x="724" y="1036" on="1"/>
        <pt x="1058" y="1036" on="1"/>
        <pt x="1058" y="172" on="1"/>
        <pt x="1173" y="172" on="1"/>
        <pt x="1173" y="0" on="1"/>
        <pt x="871" y="0" on="1"/>
        <pt x="871" y="96" on="1"/>
        <pt x="801" y="42" on="0"/>
        <pt x="636" y="-18" on="0"/>
        <pt x="542" y="-18" on="1"/>
        <pt x="464" y="-18" on="0"/>
        <pt x="337" y="27" on="0"/>
        <pt x="248" y="122" on="0"/>
        <pt x="200" y="268" on="0"/>
        <pt x="200" y="369" on="1"/>
        <pt x="200" y="864" on="1"/>
        <pt x="60" y="864" on="1"/>
        <pt x="60" y="1036" on="1"/>
        <pt x="394" y="1036" on="1"/>
        <pt x="394" y="391" on="1"/>
        <pt x="394" y="272" on="0"/>
        <pt x="504" y="150" on="0"/>
        <pt x="607" y="150" on="1"/>
        <pt x="668" y="150" on="0"/>
        <pt x="803" y="194" on="0"/>
        <pt x="863" y="233" on="1"/>
        <pt x="863" y="864" on="1"/>
        <pt x="724" y="864" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 57 values pushed */
          12 32 16 0 77 11 32 16 0 77 27 78 25 81 9 15 3 78 1 64 27 1 77 159 1
          1 1 29 19 81 17 78 15 28 15 80 17 6 25 6 61 6 1 6 2 22 87 9 11 2
          80 4 10 26 80 0 6
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          MIRP[01110]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[01110]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uacute" xMin="60" yMin="-18" xMax="1173" yMax="1477">
      <component glyphName="u" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="306" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="ucircumflex" xMin="60" yMin="-18" xMax="1173" yMax="1489">
      <component glyphName="u" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="117" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="udieresis" xMin="60" yMin="-18" xMax="1173" yMax="1489">
      <component glyphName="u" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="221" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="ugrave" xMin="60" yMin="-18" xMax="1173" yMax="1477">
      <component glyphName="u" x="0" y="0" flags="0x204"/>
      <component glyphName="grave" x="216" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="underscore" xMin="0" yMin="-256" xMax="1024" yMax="-154">
      <contour>
        <pt x="0" y="-154" on="1"/>
        <pt x="1024" y="-154" on="1"/>
        <pt x="1024" y="-256" on="1"/>
        <pt x="0" y="-256" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 7 values pushed */
          1 5 0 4 3 1 4
          SVTCA[0]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MDRP[01101]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="v" xMin="20" yMin="-16" xMax="1052" yMax="1036">
      <contour>
        <pt x="20" y="1036" on="1"/>
        <pt x="378" y="1036" on="1"/>
        <pt x="378" y="864" on="1"/>
        <pt x="281" y="864" on="1"/>
        <pt x="537" y="150" on="1"/>
        <pt x="787" y="864" on="1"/>
        <pt x="724" y="864" on="1"/>
        <pt x="724" y="1036" on="1"/>
        <pt x="1052" y="1036" on="1"/>
        <pt x="1052" y="864" on="1"/>
        <pt x="963" y="864" on="1"/>
        <pt x="624" y="-16" on="1"/>
        <pt x="440" y="-16" on="1"/>
        <pt x="102" y="864" on="1"/>
        <pt x="20" y="864" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 61 values pushed */
          115 4 1 1 177 3 6 7 177 5 11 5 4 5 89 10 11 20 10 11 5 10 12 3 4
          3 89 13 12 20 13 12 3 13 4 13 8 178 10 16 0 178 48 13 1 13 15 4 4 0
          11 12 10 10 80 7 6 13 80 0 6
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          CALL[ ]	/* CallFunction */
          SDPVTL[1]	/* SetDualPVectorToLine */
          RDTG[ ]	/* RoundDownToGrid */
          MDRP[00100]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          CALL[ ]	/* CallFunction */
          SDPVTL[1]	/* SetDualPVectorToLine */
          RDTG[ ]	/* RoundDownToGrid */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="w" xMin="20" yMin="-16" xMax="1579" yMax="1036">
      <contour>
        <pt x="20" y="1036" on="1"/>
        <pt x="348" y="1036" on="1"/>
        <pt x="348" y="864" on="1"/>
        <pt x="300" y="864" on="1"/>
        <pt x="481" y="203" on="1"/>
        <pt x="729" y="1036" on="1"/>
        <pt x="885" y="1036" on="1"/>
        <pt x="1122" y="205" on="1"/>
        <pt x="1311" y="864" on="1"/>
        <pt x="1251" y="864" on="1"/>
        <pt x="1251" y="1036" on="1"/>
        <pt x="1579" y="1036" on="1"/>
        <pt x="1579" y="864" on="1"/>
        <pt x="1490" y="864" on="1"/>
        <pt x="1206" y="-16" on="1"/>
        <pt x="1034" y="-16" on="1"/>
        <pt x="799" y="811" on="1"/>
        <pt x="565" y="-16" on="1"/>
        <pt x="391" y="-16" on="1"/>
        <pt x="109" y="864" on="1"/>
        <pt x="20" y="864" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 9 values pushed */
          18 24 12 0 77 39 17 1 14
          PUSHW[ ]	/* 1 value pushed */
          -24
          NPUSHB[ ]	/* 93 values pushed */
          12 0 77 52 10 1 1 177 3 66 10 1 10 177 8 6 15 16 15 89 7 6 20 7 6
          7 8 13 14 7 14 8 89 13 14 20 13 14 8 13 5 17 16 17 89 4 5 20 4 5
          17 4 3 19 18 4 18 3 89 19 18 20 19 19 18 223 14 239 14 2 14 32 30 33 72
          79 14 1 43 14 171 14 235 14 3 14 13 208 18 224 18 2 18
          PUSHW[ ]	/* 1 value pushed */
          -32
          NPUSHB[ ]	/* 60 values pushed */
          30 33 72 64 18 1 36 18 164 18 228 18 3 18 123 16 139 16 2 16 16 19 11 178 13
          22 0 178 64 19 1 48 19 64 19 144 19 3 19 21 18 10 16 15 10 14 10 13 80 10
          6 6 5 6 19 19 3 80 0 6
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTHG[ ]	/* RoundToHalfGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SDPVTL[1]	/* SetDualPVectorToLine */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10100]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          CALL[ ]	/* CallFunction */
          SDPVTL[1]	/* SetDualPVectorToLine */
          RDTG[ ]	/* RoundDownToGrid */
          MDRP[00100]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          RTG[ ]	/* RoundToGrid */
          CALL[ ]	/* CallFunction */
          SDPVTL[1]	/* SetDualPVectorToLine */
          RDTG[ ]	/* RoundDownToGrid */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[00001]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01001]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="x" xMin="51" yMin="0" xMax="1038" yMax="1036">
      <contour>
        <pt x="694" y="172" on="1"/>
        <pt x="753" y="172" on="1"/>
        <pt x="547" y="428" on="1"/>
        <pt x="346" y="172" on="1"/>
        <pt x="397" y="172" on="1"/>
        <pt x="397" y="0" on="1"/>
        <pt x="53" y="0" on="1"/>
        <pt x="53" y="172" on="1"/>
        <pt x="137" y="172" on="1"/>
        <pt x="452" y="539" on="1"/>
        <pt x="156" y="864" on="1"/>
        <pt x="51" y="864" on="1"/>
        <pt x="51" y="1036" on="1"/>
        <pt x="395" y="1036" on="1"/>
        <pt x="395" y="864" on="1"/>
        <pt x="356" y="864" on="1"/>
        <pt x="547" y="618" on="1"/>
        <pt x="740" y="864" on="1"/>
        <pt x="690" y="864" on="1"/>
        <pt x="690" y="1036" on="1"/>
        <pt x="1034" y="1036" on="1"/>
        <pt x="1034" y="864" on="1"/>
        <pt x="945" y="864" on="1"/>
        <pt x="652" y="526" on="1"/>
        <pt x="962" y="172" on="1"/>
        <pt x="1038" y="172" on="1"/>
        <pt x="1038" y="0" on="1"/>
        <pt x="694" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 139 values pushed */
          100 23 1 25 25 192 20 1 20 178 22 18 47 19 1 19 177 17 4 32 5 1 5 177 3
          23 22 3 24 15 166 16 1 16 24 15 8 17 9 8 17 2 22 3 1 10 194 17 1 169
          17 1 17 3 22 3 89 8 17 20 8 17 3 8 22 22 24 14 32 13 1 13 177 15 0
          47 27 1 27 177 1 15 1 10 1 89 24 15 20 24 15 32 24 112 24 2 24 29 207 29
          1 7 7 12 178 10 10 0 8 1 224 8 1 8 28 1 1 24 80 27 10 22 22 17 80
          20 6 19 6 15 15 10 80 12 6 8 80 6 10
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11000]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDPVTL[1]	/* SetDualPVectorToLine */
          CALL[ ]	/* CallFunction */
          SDPVTL[1]	/* SetDualPVectorToLine */
          RDTG[ ]	/* RoundDownToGrid */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01001]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01001]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          CALL[ ]	/* CallFunction */
          SDPVTL[1]	/* SetDualPVectorToLine */
          RDTG[ ]	/* RoundDownToGrid */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          ISECT[ ]	/* MovePtToIntersect */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          MDRP[00100]	/* MoveDirectRelPt */
          ISECT[ ]	/* MovePtToIntersect */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          ISECT[ ]	/* MovePtToIntersect */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01001]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01001]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="y" xMin="31" yMin="-471" xMax="1069" yMax="1036">
      <contour>
        <pt x="31" y="1036" on="1"/>
        <pt x="424" y="1036" on="1"/>
        <pt x="424" y="864" on="1"/>
        <pt x="301" y="864" on="1"/>
        <pt x="544" y="203" on="1"/>
        <pt x="798" y="864" on="1"/>
        <pt x="676" y="864" on="1"/>
        <pt x="676" y="1036" on="1"/>
        <pt x="1069" y="1036" on="1"/>
        <pt x="1069" y="864" on="1"/>
        <pt x="962" y="864" on="1"/>
        <pt x="501" y="-299" on="1"/>
        <pt x="643" y="-299" on="1"/>
        <pt x="643" y="-471" on="1"/>
        <pt x="225" y="-471" on="1"/>
        <pt x="225" y="-299" on="1"/>
        <pt x="351" y="-299" on="1"/>
        <pt x="461" y="-14" on="1"/>
        <pt x="115" y="864" on="1"/>
        <pt x="31" y="864" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 81 values pushed */
          63 21 1 118 17 1 123 12 1 118 11 1 51 11 1 119 4 1 53 0 1 62 17 1 114
          4 1 4 3 5 16 3 89 18 17 20 18 17 3 18 11 10 5 16 11 16 10 89 5 16
          20 5 16 10 5 17 4 5 16 118 16 1 16 127 5 1 5 17 10 16 80 14 14 5 80
          7 6 18 80 0 6
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          RDTG[ ]	/* RoundDownToGrid */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          MDRP[00100]	/* MoveDirectRelPt */
          SFVTCA[1]	/* SetFVectorToAxis */
          MDRP[00100]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          CALL[ ]	/* CallFunction */
          SFVTL[0]	/* SetFVectorToLine */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="yacute" xMin="31" yMin="-471" xMax="1069" yMax="1477">
      <component glyphName="y" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="331" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="ydieresis" xMin="31" yMin="-471" xMax="1069" yMax="1490">
      <component glyphName="dotaccent" x="14" y="-42" flags="0x4"/>
      <component glyphName="dotaccent" x="473" y="-42" flags="0x4"/>
      <component glyphName="y" x="0" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="yen" xMin="51" yMin="0" xMax="1324" yMax="1516">
      <contour>
        <pt x="51" y="1516" on="1"/>
        <pt x="543" y="1516" on="1"/>
        <pt x="543" y="1344" on="1"/>
        <pt x="398" y="1344" on="1"/>
        <pt x="684" y="856" on="1"/>
        <pt x="989" y="1344" on="1"/>
        <pt x="832" y="1344" on="1"/>
        <pt x="832" y="1516" on="1"/>
        <pt x="1324" y="1516" on="1"/>
        <pt x="1324" y="1344" on="1"/>
        <pt x="1195" y="1344" on="1"/>
        <pt x="867" y="848" on="1"/>
        <pt x="1051" y="848" on="1"/>
        <pt x="1051" y="707" on="1"/>
        <pt x="768" y="707" on="1"/>
        <pt x="768" y="559" on="1"/>
        <pt x="1051" y="559" on="1"/>
        <pt x="1051" y="418" on="1"/>
        <pt x="768" y="418" on="1"/>
        <pt x="768" y="172" on="1"/>
        <pt x="924" y="172" on="1"/>
        <pt x="924" y="0" on="1"/>
        <pt x="432" y="0" on="1"/>
        <pt x="432" y="172" on="1"/>
        <pt x="571" y="172" on="1"/>
        <pt x="571" y="418" on="1"/>
        <pt x="301" y="418" on="1"/>
        <pt x="301" y="559" on="1"/>
        <pt x="571" y="559" on="1"/>
        <pt x="571" y="707" on="1"/>
        <pt x="301" y="707" on="1"/>
        <pt x="301" y="848" on="1"/>
        <pt x="479" y="848" on="1"/>
        <pt x="168" y="1344" on="1"/>
        <pt x="51" y="1344" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 83 values pushed */
          30 26 24 11 10 5 4 11 4 10 77 5 4 20 5 4 10 5 5 36 17 13 18 32 33
          3 4 32 4 33 76 3 4 20 3 4 33 3 4 14 18 68 3 35 29 22 78 24 35 30
          13 4 31 31 4 12 12 4 26 192 17 1 17 15 28 15 4 15 4 15 7 19 80 22 8
          5 80 7 2 3 80 0 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01101]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01101]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10100]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IP[ ]	/* InterpolatePts */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDRP[00110]	/* MoveDirectRelPt */
          IP[ ]	/* InterpolatePts */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00010]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="z" xMin="76" yMin="0" xMax="850" yMax="1036">
      <contour>
        <pt x="76" y="115" on="1"/>
        <pt x="601" y="881" on="1"/>
        <pt x="270" y="881" on="1"/>
        <pt x="270" y="735" on="1"/>
        <pt x="86" y="735" on="1"/>
        <pt x="86" y="1036" on="1"/>
        <pt x="827" y="1036" on="1"/>
        <pt x="827" y="918" on="1"/>
        <pt x="303" y="156" on="1"/>
        <pt x="657" y="156" on="1"/>
        <pt x="657" y="332" on="1"/>
        <pt x="850" y="332" on="1"/>
        <pt x="850" y="0" on="1"/>
        <pt x="76" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 61 values pushed */
          116 8 1 122 7 1 3 124 1 1 118 0 1 115 7 1 2 96 7 1 9 81 11 11 15
          8 7 7 89 1 0 20 1 0 7 1 2 81 4 4 144 0 1 0 14 48 1 1 1 8
          9 85 13 10 11 1 85 5 6 4 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[0]	/* SetFVectorToAxis */
          CALL[ ]	/* CallFunction */
          SFVTCA[1]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDRP[01110]	/* MoveDirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="zcaron" xMin="76" yMin="0" xMax="850" yMax="1488">
      <component glyphName="z" x="0" y="0" flags="0x204"/>
      <component glyphName="caron" x="-35" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="zero" xMin="88" yMin="-18" xMax="1227" yMax="1540">
      <contour>
        <pt x="655" y="-18" on="1"/>
        <pt x="493" y="-18" on="0"/>
        <pt x="275" y="102" on="0"/>
        <pt x="144" y="312" on="0"/>
        <pt x="88" y="594" on="0"/>
        <pt x="88" y="756" on="1"/>
        <pt x="88" y="929" on="0"/>
        <pt x="164" y="1230" on="0"/>
        <pt x="292" y="1412" on="0"/>
        <pt x="487" y="1540" on="0"/>
        <pt x="657" y="1540" on="1"/>
        <pt x="818" y="1540" on="0"/>
        <pt x="1032" y="1438" on="0"/>
        <pt x="1171" y="1227" on="0"/>
        <pt x="1227" y="929" on="0"/>
        <pt x="1227" y="762" on="1"/>
        <pt x="1227" y="599" on="0"/>
        <pt x="1171" y="315" on="0"/>
        <pt x="1038" y="104" on="0"/>
        <pt x="818" y="-18" on="0"/>
      </contour>
      <contour>
        <pt x="655" y="160" on="1"/>
        <pt x="772" y="160" on="0"/>
        <pt x="915" y="255" on="0"/>
        <pt x="988" y="419" on="0"/>
        <pt x="1024" y="638" on="0"/>
        <pt x="1024" y="762" on="1"/>
        <pt x="1024" y="881" on="0"/>
        <pt x="996" y="1100" on="0"/>
        <pt x="916" y="1268" on="0"/>
        <pt x="772" y="1368" on="0"/>
        <pt x="657" y="1368" on="1"/>
        <pt x="538" y="1368" on="0"/>
        <pt x="400" y="1268" on="0"/>
        <pt x="332" y="1127" on="0"/>
        <pt x="293" y="881" on="0"/>
        <pt x="293" y="762" on="1"/>
        <pt x="293" y="638" on="0"/>
        <pt x="318" y="419" on="0"/>
        <pt x="395" y="255" on="0"/>
        <pt x="538" y="160" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 5 values pushed */
          38 32 22 28 32
          PUSHW[ ]	/* 1 value pushed */
          -32
          PUSHB[ ]	/* 4 values pushed */
          16 0 77 32
          PUSHW[ ]	/* 1 value pushed */
          -32
          NPUSHB[ ]	/* 51 values pushed */
          12 0 77 28 32 16 0 77 28 48 12 0 77 28 30 32 3 35 25 70 8 2 12 18 18
          0 2 3 5 15 41 48 41 112 41 2 35 70 48 5 1 5 40 30 74 10 3 20 74 0
          9
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11110]	/* MoveDirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

  </glyf>

  <kern>
    <version value="0"/>
    <kernsubtable coverage="1" format="0">
      <pair l="A" r="T" v="-184"/>
      <pair l="A" r="U" v="-125"/>
      <pair l="A" r="V" v="-102"/>
      <pair l="A" r="W" v="-100"/>
      <pair l="A" r="Y" v="-125"/>
      <pair l="A" r="v" v="-102"/>
      <pair l="A" r="y" v="-76"/>
      <pair l="F" r="A" v="-76"/>
      <pair l="F" r="a" v="-102"/>
      <pair l="F" r="c" v="-111"/>
      <pair l="F" r="comma" v="-256"/>
      <pair l="F" r="e" v="-111"/>
      <pair l="F" r="o" v="-111"/>
      <pair l="F" r="period" v="-256"/>
      <pair l="K" r="O" v="-76"/>
      <pair l="L" r="T" v="-154"/>
      <pair l="L" r="V" v="-102"/>
      <pair l="L" r="W" v="-100"/>
      <pair l="L" r="Y" v="-219"/>
      <pair l="O" r="X" v="-102"/>
      <pair l="O" r="Y" v="-51"/>
      <pair l="P" r="A" v="-125"/>
      <pair l="P" r="a" v="-76"/>
      <pair l="P" r="comma" v="-399"/>
      <pair l="P" r="period" v="-410"/>
      <pair l="T" r="A" v="-184"/>
      <pair l="T" r="a" v="-205"/>
      <pair l="T" r="c" v="-246"/>
      <pair l="T" r="comma" v="-299"/>
      <pair l="T" r="d" v="-246"/>
      <pair l="T" r="e" v="-246"/>
      <pair l="T" r="n" v="-170"/>
      <pair l="T" r="o" v="-246"/>
      <pair l="T" r="period" v="-299"/>
      <pair l="T" r="q" v="-250"/>
      <pair l="T" r="u" v="-184"/>
      <pair l="U" r="comma" v="-76"/>
      <pair l="U" r="period" v="-76"/>
      <pair l="V" r="A" v="-102"/>
      <pair l="V" r="o" v="-125"/>
      <pair l="V" r="period" v="-190"/>
      <pair l="X" r="O" v="-76"/>
      <pair l="Y" r="A" v="-154"/>
      <pair l="Y" r="comma" v="-201"/>
      <pair l="Y" r="period" v="-215"/>
      <pair l="Y" r="s" v="-184"/>
      <pair l="comma" r="space" v="-236"/>
      <pair l="o" r="period" v="-49"/>
      <pair l="r" r="comma" v="-170"/>
      <pair l="r" r="period" v="-150"/>
      <pair l="v" r="comma" v="-236"/>
      <pair l="v" r="period" v="-190"/>
      <pair l="w" r="period" v="-190"/>
      <pair l="y" r="comma" v="-215"/>
      <pair l="y" r="period" v="-215"/>
    </kernsubtable>
  </kern>

  <name>
    <namerecord nameID="0" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Copyright 2010 Anton Koovit.
    </namerecord>
    <namerecord nameID="1" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Arvo
    </namerecord>
    <namerecord nameID="2" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Regular
    </namerecord>
    <namerecord nameID="3" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Arvo beta: 1.004 2010
    </namerecord>
    <namerecord nameID="4" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Arvo
    </namerecord>
    <namerecord nameID="5" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Version 1.004 2010 beta release
    </namerecord>
    <namerecord nameID="6" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Arvo
    </namerecord>
    <namerecord nameID="7" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Copyright (c) 2010 by Anton Koovit.
    </namerecord>
    <namerecord nameID="8" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Anton Koovit
    </namerecord>
    <namerecord nameID="9" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Anton Koovit
    </namerecord>
    <namerecord nameID="10" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Copyright (c) 2010 by Anton Koovit. All rights reserved under SIL openfont License 1.1
    </namerecord>
    <namerecord nameID="11" platformID="1" platEncID="0" langID="0x0" unicode="True">
      http://www.korkork.com/
    </namerecord>
    <namerecord nameID="12" platformID="1" platEncID="0" langID="0x0" unicode="True">
      http://www.kork.ee
    </namerecord>
    <namerecord nameID="13" platformID="1" platEncID="0" langID="0x0" unicode="True">
      SIL openfont License 1.1
    </namerecord>
    <namerecord nameID="14" platformID="1" platEncID="0" langID="0x0" unicode="True">
      http://www.korkork.com/license/arvo/
    </namerecord>
    <namerecord nameID="16" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Arvo
    </namerecord>
    <namerecord nameID="17" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Regular
    </namerecord>
    <namerecord nameID="18" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Arvo
    </namerecord>
    <namerecord nameID="0" platformID="3" platEncID="1" langID="0x409">
      Copyright (c) 2010 Anton Koovit.
    </namerecord>
    <namerecord nameID="1" platformID="3" platEncID="1" langID="0x409">
      Arvo
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x409">
      Regular
    </namerecord>
    <namerecord nameID="3" platformID="3" platEncID="1" langID="0x409">
      Arvo beta: 1.004 2010;KORK
    </namerecord>
    <namerecord nameID="4" platformID="3" platEncID="1" langID="0x409">
      Arvo
    </namerecord>
    <namerecord nameID="5" platformID="3" platEncID="1" langID="0x409">
      Version 1.004 2010 beta release
    </namerecord>
    <namerecord nameID="6" platformID="3" platEncID="1" langID="0x409">
      Arvo
    </namerecord>
    <namerecord nameID="7" platformID="3" platEncID="1" langID="0x409">
      Arvo is a trademark of Anton Koovit. 2010
    </namerecord>
    <namerecord nameID="8" platformID="3" platEncID="1" langID="0x409">
      Anton Koovit
    </namerecord>
    <namerecord nameID="9" platformID="3" platEncID="1" langID="0x409">
      Anton Koovit
    </namerecord>
    <namerecord nameID="10" platformID="3" platEncID="1" langID="0x409">
      Copyright (c) 2010 by Anton Koovit. All rights reserved under SIL openfont License 1.1
    </namerecord>
    <namerecord nameID="11" platformID="3" platEncID="1" langID="0x409">
      http://www.korkork.com/
    </namerecord>
    <namerecord nameID="12" platformID="3" platEncID="1" langID="0x409">
      http://www.kork.ee
    </namerecord>
    <namerecord nameID="13" platformID="3" platEncID="1" langID="0x409">
      SIL openfont License 1.1
    </namerecord>
    <namerecord nameID="14" platformID="3" platEncID="1" langID="0x409">
      http://www.korkork.com/license/arvo/
    </namerecord>
    <namerecord nameID="16" platformID="3" platEncID="1" langID="0x409">
      Arvo
    </namerecord>
    <namerecord nameID="17" platformID="3" platEncID="1" langID="0x409">
      Regular
    </namerecord>
  </name>

  <post>
    <formatType value="2.0"/>
    <italicAngle value="0.0"/>
    <underlinePosition value="-75"/>
    <underlineThickness value="50"/>
    <isFixedPitch value="0"/>
    <minMemType42 value="0"/>
    <maxMemType42 value="0"/>
    <minMemType1 value="0"/>
    <maxMemType1 value="0"/>
    <psNames>
      <!-- This file uses unique glyph names based on the information
           found in the 'post' table. Since these names might not be unique,
           we have to invent artificial names in case of clashes. In order to
           be able to retain the original information, we need a name to
           ps name mapping for those cases where they differ. That's what
           you see below.
            -->
    </psNames>
    <extraNames>
      <!-- following are the name that are not taken from the standard Mac glyph order -->
      <psName name="macron"/>
      <psName name="periodcentered"/>
      <psName name="divisionslash"/>
      <psName name="twoinferior"/>
      <psName name="fourinferior"/>
      <psName name="foursuperior"/>
    </extraNames>
  </post>

  <gasp>
    <gaspRange rangeMaxPPEM="8" rangeGaspBehavior="10"/>
    <gaspRange rangeMaxPPEM="12" rangeGaspBehavior="5"/>
    <gaspRange rangeMaxPPEM="13" rangeGaspBehavior="7"/>
    <gaspRange rangeMaxPPEM="56" rangeGaspBehavior="7"/>
    <gaspRange rangeMaxPPEM="65535" rangeGaspBehavior="10"/>
  </gasp>

</ttFont>
