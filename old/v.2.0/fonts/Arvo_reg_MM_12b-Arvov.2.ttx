<?xml version="1.0" encoding="UTF-8"?>
<ttFont sfntVersion="\x00\x01\x00\x00" ttLibVersion="3.0">

  <GlyphOrder>
    <!-- The 'id' attribute is only for humans; it is ignored when parsed. -->
    <GlyphID id="0" name=".notdef"/>
    <GlyphID id="1" name="nonmarkingreturn"/>
    <GlyphID id="2" name="space"/>
    <GlyphID id="3" name="A"/>
    <GlyphID id="4" name="Aacute"/>
    <GlyphID id="5" name="Acircumflex"/>
    <GlyphID id="6" name="Adieresis"/>
    <GlyphID id="7" name="Agrave"/>
    <GlyphID id="8" name="Aring"/>
    <GlyphID id="9" name="Atilde"/>
    <GlyphID id="10" name="AE"/>
    <GlyphID id="11" name="B"/>
    <GlyphID id="12" name="C"/>
    <GlyphID id="13" name="Ccaron"/>
    <GlyphID id="14" name="Ccedilla"/>
    <GlyphID id="15" name="D"/>
    <GlyphID id="16" name="Eth"/>
    <GlyphID id="17" name="E"/>
    <GlyphID id="18" name="Eacute"/>
    <GlyphID id="19" name="Ecircumflex"/>
    <GlyphID id="20" name="Edieresis"/>
    <GlyphID id="21" name="Egrave"/>
    <GlyphID id="22" name="F"/>
    <GlyphID id="23" name="G"/>
    <GlyphID id="24" name="H"/>
    <GlyphID id="25" name="I"/>
    <GlyphID id="26" name="Iacute"/>
    <GlyphID id="27" name="Icircumflex"/>
    <GlyphID id="28" name="Idieresis"/>
    <GlyphID id="29" name="Igrave"/>
    <GlyphID id="30" name="J"/>
    <GlyphID id="31" name="K"/>
    <GlyphID id="32" name="L"/>
    <GlyphID id="33" name="M"/>
    <GlyphID id="34" name="N"/>
    <GlyphID id="35" name="Ntilde"/>
    <GlyphID id="36" name="O"/>
    <GlyphID id="37" name="Oacute"/>
    <GlyphID id="38" name="Ocircumflex"/>
    <GlyphID id="39" name="Odieresis"/>
    <GlyphID id="40" name="Ograve"/>
    <GlyphID id="41" name="Oslash"/>
    <GlyphID id="42" name="Otilde"/>
    <GlyphID id="43" name="P"/>
    <GlyphID id="44" name="Thorn"/>
    <GlyphID id="45" name="Q"/>
    <GlyphID id="46" name="R"/>
    <GlyphID id="47" name="S"/>
    <GlyphID id="48" name="Scaron"/>
    <GlyphID id="49" name="T"/>
    <GlyphID id="50" name="U"/>
    <GlyphID id="51" name="Uacute"/>
    <GlyphID id="52" name="Ucircumflex"/>
    <GlyphID id="53" name="Udieresis"/>
    <GlyphID id="54" name="Ugrave"/>
    <GlyphID id="55" name="V"/>
    <GlyphID id="56" name="W"/>
    <GlyphID id="57" name="X"/>
    <GlyphID id="58" name="Y"/>
    <GlyphID id="59" name="Yacute"/>
    <GlyphID id="60" name="Ydieresis"/>
    <GlyphID id="61" name="Z"/>
    <GlyphID id="62" name="Zcaron"/>
    <GlyphID id="63" name="a"/>
    <GlyphID id="64" name="aacute"/>
    <GlyphID id="65" name="acircumflex"/>
    <GlyphID id="66" name="adieresis"/>
    <GlyphID id="67" name="agrave"/>
    <GlyphID id="68" name="aring"/>
    <GlyphID id="69" name="atilde"/>
    <GlyphID id="70" name="ae"/>
    <GlyphID id="71" name="b"/>
    <GlyphID id="72" name="c"/>
    <GlyphID id="73" name="ccaron"/>
    <GlyphID id="74" name="ccedilla"/>
    <GlyphID id="75" name="d"/>
    <GlyphID id="76" name="eth"/>
    <GlyphID id="77" name="e"/>
    <GlyphID id="78" name="eacute"/>
    <GlyphID id="79" name="ecircumflex"/>
    <GlyphID id="80" name="edieresis"/>
    <GlyphID id="81" name="egrave"/>
    <GlyphID id="82" name="f"/>
    <GlyphID id="83" name="g"/>
    <GlyphID id="84" name="h"/>
    <GlyphID id="85" name="i"/>
    <GlyphID id="86" name="dotlessi"/>
    <GlyphID id="87" name="iacute"/>
    <GlyphID id="88" name="icircumflex"/>
    <GlyphID id="89" name="idieresis"/>
    <GlyphID id="90" name="igrave"/>
    <GlyphID id="91" name="j"/>
    <GlyphID id="92" name="k"/>
    <GlyphID id="93" name="l"/>
    <GlyphID id="94" name="m"/>
    <GlyphID id="95" name="n"/>
    <GlyphID id="96" name="ntilde"/>
    <GlyphID id="97" name="o"/>
    <GlyphID id="98" name="oacute"/>
    <GlyphID id="99" name="ocircumflex"/>
    <GlyphID id="100" name="odieresis"/>
    <GlyphID id="101" name="ograve"/>
    <GlyphID id="102" name="oslash"/>
    <GlyphID id="103" name="otilde"/>
    <GlyphID id="104" name="p"/>
    <GlyphID id="105" name="thorn"/>
    <GlyphID id="106" name="q"/>
    <GlyphID id="107" name="r"/>
    <GlyphID id="108" name="s"/>
    <GlyphID id="109" name="scaron"/>
    <GlyphID id="110" name="germandbls"/>
    <GlyphID id="111" name="t"/>
    <GlyphID id="112" name="u"/>
    <GlyphID id="113" name="uacute"/>
    <GlyphID id="114" name="ucircumflex"/>
    <GlyphID id="115" name="udieresis"/>
    <GlyphID id="116" name="ugrave"/>
    <GlyphID id="117" name="v"/>
    <GlyphID id="118" name="w"/>
    <GlyphID id="119" name="x"/>
    <GlyphID id="120" name="y"/>
    <GlyphID id="121" name="yacute"/>
    <GlyphID id="122" name="ydieresis"/>
    <GlyphID id="123" name="z"/>
    <GlyphID id="124" name="zcaron"/>
    <GlyphID id="125" name="ccaron.001"/>
    <GlyphID id="126" name="scaron.001"/>
    <GlyphID id="127" name="zcaron.001"/>
    <GlyphID id="128" name="ordfeminine"/>
    <GlyphID id="129" name="ordmasculine"/>
    <GlyphID id="130" name="zero"/>
    <GlyphID id="131" name="one"/>
    <GlyphID id="132" name="two"/>
    <GlyphID id="133" name="three"/>
    <GlyphID id="134" name="four"/>
    <GlyphID id="135" name="five"/>
    <GlyphID id="136" name="six"/>
    <GlyphID id="137" name="seven"/>
    <GlyphID id="138" name="eight"/>
    <GlyphID id="139" name="nine"/>
    <GlyphID id="140" name="uni2082"/>
    <GlyphID id="141" name="uni2084"/>
    <GlyphID id="142" name="uni00B9"/>
    <GlyphID id="143" name="uni00B2"/>
    <GlyphID id="144" name="uni00B3"/>
    <GlyphID id="145" name="uni2074"/>
    <GlyphID id="146" name="fraction"/>
    <GlyphID id="147" name="onehalf"/>
    <GlyphID id="148" name="onequarter"/>
    <GlyphID id="149" name="threequarters"/>
    <GlyphID id="150" name="asterisk"/>
    <GlyphID id="151" name="backslash"/>
    <GlyphID id="152" name="periodcentered"/>
    <GlyphID id="153" name="bullet"/>
    <GlyphID id="154" name="colon"/>
    <GlyphID id="155" name="comma"/>
    <GlyphID id="156" name="ellipsis"/>
    <GlyphID id="157" name="exclam"/>
    <GlyphID id="158" name="exclamdown"/>
    <GlyphID id="159" name="numbersign"/>
    <GlyphID id="160" name="period"/>
    <GlyphID id="161" name="question"/>
    <GlyphID id="162" name="questiondown"/>
    <GlyphID id="163" name="quotedbl"/>
    <GlyphID id="164" name="quotesingle"/>
    <GlyphID id="165" name="semicolon"/>
    <GlyphID id="166" name="slash"/>
    <GlyphID id="167" name="underscore"/>
    <GlyphID id="168" name="braceleft"/>
    <GlyphID id="169" name="braceright"/>
    <GlyphID id="170" name="bracketleft"/>
    <GlyphID id="171" name="bracketright"/>
    <GlyphID id="172" name="parenleft"/>
    <GlyphID id="173" name="parenright"/>
    <GlyphID id="174" name="emdash"/>
    <GlyphID id="175" name="endash"/>
    <GlyphID id="176" name="hyphen"/>
    <GlyphID id="177" name="guillemotleft"/>
    <GlyphID id="178" name="guillemotright"/>
    <GlyphID id="179" name="guilsinglleft"/>
    <GlyphID id="180" name="guilsinglright"/>
    <GlyphID id="181" name="quotedblbase"/>
    <GlyphID id="182" name="quotedblleft"/>
    <GlyphID id="183" name="quotedblright"/>
    <GlyphID id="184" name="quoteleft"/>
    <GlyphID id="185" name="quoteright"/>
    <GlyphID id="186" name="cent"/>
    <GlyphID id="187" name="currency"/>
    <GlyphID id="188" name="dollar"/>
    <GlyphID id="189" name="sterling"/>
    <GlyphID id="190" name="yen"/>
    <GlyphID id="191" name="uni2215"/>
    <GlyphID id="192" name="plus"/>
    <GlyphID id="193" name="minus"/>
    <GlyphID id="194" name="multiply"/>
    <GlyphID id="195" name="divide"/>
    <GlyphID id="196" name="equal"/>
    <GlyphID id="197" name="greater"/>
    <GlyphID id="198" name="less"/>
    <GlyphID id="199" name="plusminus"/>
    <GlyphID id="200" name="asciitilde"/>
    <GlyphID id="201" name="logicalnot"/>
    <GlyphID id="202" name="uni00B5"/>
    <GlyphID id="203" name="percent"/>
    <GlyphID id="204" name="at"/>
    <GlyphID id="205" name="ampersand"/>
    <GlyphID id="206" name="paragraph"/>
    <GlyphID id="207" name="section"/>
    <GlyphID id="208" name="copyright"/>
    <GlyphID id="209" name="registered"/>
    <GlyphID id="210" name="degree"/>
    <GlyphID id="211" name="bar"/>
    <GlyphID id="212" name="brokenbar"/>
    <GlyphID id="213" name="asciicircum"/>
    <GlyphID id="214" name="acute"/>
    <GlyphID id="215" name="breve"/>
    <GlyphID id="216" name="caron"/>
    <GlyphID id="217" name="cedilla"/>
    <GlyphID id="218" name="circumflex"/>
    <GlyphID id="219" name="dieresis"/>
    <GlyphID id="220" name="dotaccent"/>
    <GlyphID id="221" name="grave"/>
    <GlyphID id="222" name="hungarumlaut"/>
    <GlyphID id="223" name="macron"/>
    <GlyphID id="224" name="ogonek"/>
    <GlyphID id="225" name="ring"/>
    <GlyphID id="226" name="tilde"/>
  </GlyphOrder>

  <head>
    <!-- Most of this table will be recalculated by the compiler -->
    <tableVersion value="1.0"/>
    <fontRevision value="1.0"/>
    <checkSumAdjustment value="0xd7294469"/>
    <magicNumber value="0x5f0f3cf5"/>
    <flags value="00000000 00000011"/>
    <unitsPerEm value="1000"/>
    <created value="Mon Apr 19 19:43:45 2010"/>
    <modified value="Wed Oct 12 20:25:03 2016"/>
    <xMin value="-103"/>
    <yMin value="-274"/>
    <xMax value="1155"/>
    <yMax value="1003"/>
    <macStyle value="00000000 00000000"/>
    <lowestRecPPEM value="7"/>
    <fontDirectionHint value="2"/>
    <indexToLocFormat value="0"/>
    <glyphDataFormat value="0"/>
  </head>

  <hhea>
    <tableVersion value="1.0"/>
    <ascent value="970"/>
    <descent value="-230"/>
    <lineGap value="0"/>
    <advanceWidthMax value="1366"/>
    <minLeftSideBearing value="-103"/>
    <minRightSideBearing value="-459"/>
    <xMaxExtent value="1155"/>
    <caretSlopeRise value="1"/>
    <caretSlopeRun value="0"/>
    <caretOffset value="0"/>
    <reserved0 value="0"/>
    <reserved1 value="0"/>
    <reserved2 value="0"/>
    <reserved3 value="0"/>
    <metricDataFormat value="0"/>
    <numberOfHMetrics value="227"/>
  </hhea>

  <maxp>
    <!-- Most of this table will be recalculated by the compiler -->
    <tableVersion value="0x10000"/>
    <numGlyphs value="227"/>
    <maxPoints value="80"/>
    <maxContours value="5"/>
    <maxCompositePoints value="64"/>
    <maxCompositeContours value="4"/>
    <maxZones value="2"/>
    <maxTwilightPoints value="36"/>
    <maxStorage value="53"/>
    <maxFunctionDefs value="139"/>
    <maxInstructionDefs value="0"/>
    <maxStackElements value="144"/>
    <maxSizeOfInstructions value="3350"/>
    <maxComponentElements value="3"/>
    <maxComponentDepth value="1"/>
  </maxp>

  <OS_2>
    <!-- The fields 'usFirstCharIndex' and 'usLastCharIndex'
         will be recalculated by the compiler -->
    <version value="3"/>
    <xAvgCharWidth value="599"/>
    <usWeightClass value="400"/>
    <usWidthClass value="5"/>
    <fsType value="00000000 00000100"/>
    <ySubscriptXSize value="650"/>
    <ySubscriptYSize value="600"/>
    <ySubscriptXOffset value="0"/>
    <ySubscriptYOffset value="75"/>
    <ySuperscriptXSize value="650"/>
    <ySuperscriptYSize value="600"/>
    <ySuperscriptXOffset value="0"/>
    <ySuperscriptYOffset value="350"/>
    <yStrikeoutSize value="50"/>
    <yStrikeoutPosition value="303"/>
    <sFamilyClass value="0"/>
    <panose>
      <bFamilyType value="0"/>
      <bSerifStyle value="0"/>
      <bWeight value="5"/>
      <bProportion value="0"/>
      <bContrast value="0"/>
      <bStrokeVariation value="0"/>
      <bArmStyle value="0"/>
      <bLetterForm value="0"/>
      <bMidline value="0"/>
      <bXHeight value="0"/>
    </panose>
    <ulUnicodeRange1 value="00000000 00000000 00000000 00000011"/>
    <ulUnicodeRange2 value="00000000 00000000 00000000 00000000"/>
    <ulUnicodeRange3 value="00000000 00000000 00000000 00000000"/>
    <ulUnicodeRange4 value="00000000 00000000 00000000 00000000"/>
    <achVendID value="KORK"/>
    <fsSelection value="00000000 01000000"/>
    <usFirstCharIndex value="32"/>
    <usLastCharIndex value="8725"/>
    <sTypoAscender value="760"/>
    <sTypoDescender value="-230"/>
    <sTypoLineGap value="210"/>
    <usWinAscent value="970"/>
    <usWinDescent value="230"/>
    <ulCodePageRange1 value="00100000 00000000 00000000 00000011"/>
    <ulCodePageRange2 value="00000000 00000000 00000000 00000000"/>
    <sxHeight value="506"/>
    <sCapHeight value="740"/>
    <usDefaultChar value="0"/>
    <usBreakChar value="32"/>
    <usMaxContext value="2"/>
  </OS_2>

  <hmtx>
    <mtx name=".notdef" width="557" lsb="50"/>
    <mtx name="A" width="719" lsb="17"/>
    <mtx name="AE" width="1053" lsb="-23"/>
    <mtx name="Aacute" width="719" lsb="17"/>
    <mtx name="Acircumflex" width="719" lsb="17"/>
    <mtx name="Adieresis" width="719" lsb="17"/>
    <mtx name="Agrave" width="719" lsb="17"/>
    <mtx name="Aring" width="719" lsb="17"/>
    <mtx name="Atilde" width="719" lsb="17"/>
    <mtx name="B" width="688" lsb="50"/>
    <mtx name="C" width="768" lsb="32"/>
    <mtx name="Ccaron" width="768" lsb="32"/>
    <mtx name="Ccedilla" width="768" lsb="32"/>
    <mtx name="D" width="708" lsb="29"/>
    <mtx name="E" width="690" lsb="50"/>
    <mtx name="Eacute" width="694" lsb="53"/>
    <mtx name="Ecircumflex" width="694" lsb="53"/>
    <mtx name="Edieresis" width="694" lsb="53"/>
    <mtx name="Egrave" width="694" lsb="53"/>
    <mtx name="Eth" width="709" lsb="21"/>
    <mtx name="F" width="635" lsb="49"/>
    <mtx name="G" width="792" lsb="32"/>
    <mtx name="H" width="931" lsb="50"/>
    <mtx name="I" width="443" lsb="49"/>
    <mtx name="Iacute" width="457" lsb="56"/>
    <mtx name="Icircumflex" width="457" lsb="33"/>
    <mtx name="Idieresis" width="457" lsb="13"/>
    <mtx name="Igrave" width="457" lsb="39"/>
    <mtx name="J" width="336" lsb="-11"/>
    <mtx name="K" width="824" lsb="55"/>
    <mtx name="L" width="666" lsb="50"/>
    <mtx name="M" width="1175" lsb="47"/>
    <mtx name="N" width="845" lsb="50"/>
    <mtx name="Ntilde" width="852" lsb="57"/>
    <mtx name="O" width="781" lsb="30"/>
    <mtx name="Oacute" width="777" lsb="30"/>
    <mtx name="Ocircumflex" width="777" lsb="30"/>
    <mtx name="Odieresis" width="781" lsb="30"/>
    <mtx name="Ograve" width="777" lsb="30"/>
    <mtx name="Oslash" width="777" lsb="7"/>
    <mtx name="Otilde" width="777" lsb="30"/>
    <mtx name="P" width="634" lsb="49"/>
    <mtx name="Q" width="793" lsb="30"/>
    <mtx name="R" width="758" lsb="48"/>
    <mtx name="S" width="614" lsb="13"/>
    <mtx name="Scaron" width="614" lsb="13"/>
    <mtx name="T" width="690" lsb="6"/>
    <mtx name="Thorn" width="349" lsb="56"/>
    <mtx name="U" width="762" lsb="14"/>
    <mtx name="Uacute" width="762" lsb="14"/>
    <mtx name="Ucircumflex" width="762" lsb="14"/>
    <mtx name="Udieresis" width="762" lsb="14"/>
    <mtx name="Ugrave" width="762" lsb="14"/>
    <mtx name="V" width="755" lsb="12"/>
    <mtx name="W" width="1162" lsb="13"/>
    <mtx name="X" width="774" lsb="-7"/>
    <mtx name="Y" width="782" lsb="22"/>
    <mtx name="Yacute" width="782" lsb="22"/>
    <mtx name="Ydieresis" width="782" lsb="22"/>
    <mtx name="Z" width="634" lsb="30"/>
    <mtx name="Zcaron" width="634" lsb="30"/>
    <mtx name="a" width="607" lsb="39"/>
    <mtx name="aacute" width="607" lsb="39"/>
    <mtx name="acircumflex" width="607" lsb="39"/>
    <mtx name="acute" width="338" lsb="12"/>
    <mtx name="adieresis" width="607" lsb="39"/>
    <mtx name="ae" width="916" lsb="39"/>
    <mtx name="agrave" width="607" lsb="39"/>
    <mtx name="ampersand" width="656" lsb="35"/>
    <mtx name="aring" width="607" lsb="39"/>
    <mtx name="asciicircum" width="600" lsb="34"/>
    <mtx name="asciitilde" width="385" lsb="-33"/>
    <mtx name="asterisk" width="522" lsb="30"/>
    <mtx name="at" width="1099" lsb="100"/>
    <mtx name="atilde" width="607" lsb="15"/>
    <mtx name="b" width="646" lsb="9"/>
    <mtx name="backslash" width="350" lsb="-3"/>
    <mtx name="bar" width="314" lsb="55"/>
    <mtx name="braceleft" width="469" lsb="45"/>
    <mtx name="braceright" width="469" lsb="16"/>
    <mtx name="bracketleft" width="318" lsb="13"/>
    <mtx name="bracketright" width="318" lsb="15"/>
    <mtx name="breve" width="478" lsb="6"/>
    <mtx name="brokenbar" width="304" lsb="55"/>
    <mtx name="bullet" width="537" lsb="93"/>
    <mtx name="c" width="587" lsb="32"/>
    <mtx name="caron" width="398" lsb="18"/>
    <mtx name="ccaron" width="587" lsb="32"/>
    <mtx name="ccaron.001" width="587" lsb="32"/>
    <mtx name="ccedilla" width="560" lsb="32"/>
    <mtx name="cedilla" width="449" lsb="89"/>
    <mtx name="cent" width="614" lsb="28"/>
    <mtx name="circumflex" width="398" lsb="19"/>
    <mtx name="colon" width="266" lsb="31"/>
    <mtx name="comma" width="254" lsb="10"/>
    <mtx name="copyright" width="937" lsb="50"/>
    <mtx name="currency" width="756" lsb="21"/>
    <mtx name="d" width="679" lsb="-3"/>
    <mtx name="degree" width="421" lsb="50"/>
    <mtx name="dieresis" width="250" lsb="24"/>
    <mtx name="divide" width="550" lsb="25"/>
    <mtx name="dollar" width="614" lsb="42"/>
    <mtx name="dotaccent" width="250" lsb="31"/>
    <mtx name="dotlessi" width="371" lsb="29"/>
    <mtx name="e" width="591" lsb="18"/>
    <mtx name="eacute" width="562" lsb="18"/>
    <mtx name="ecircumflex" width="562" lsb="18"/>
    <mtx name="edieresis" width="591" lsb="18"/>
    <mtx name="egrave" width="562" lsb="18"/>
    <mtx name="eight" width="559" lsb="50"/>
    <mtx name="ellipsis" width="514" lsb="-15"/>
    <mtx name="emdash" width="864" lsb="0"/>
    <mtx name="endash" width="636" lsb="68"/>
    <mtx name="equal" width="499" lsb="26"/>
    <mtx name="eth" width="541" lsb="54"/>
    <mtx name="exclam" width="343" lsb="55"/>
    <mtx name="exclamdown" width="343" lsb="55"/>
    <mtx name="f" width="413" lsb="36"/>
    <mtx name="five" width="601" lsb="60"/>
    <mtx name="four" width="597" lsb="-9"/>
    <mtx name="fraction" width="180" lsb="-103"/>
    <mtx name="g" width="640" lsb="23"/>
    <mtx name="germandbls" width="680" lsb="22"/>
    <mtx name="grave" width="395" lsb="79"/>
    <mtx name="greater" width="399" lsb="18"/>
    <mtx name="guillemotleft" width="507" lsb="27"/>
    <mtx name="guillemotright" width="504" lsb="2"/>
    <mtx name="guilsinglleft" width="289" lsb="27"/>
    <mtx name="guilsinglright" width="286" lsb="2"/>
    <mtx name="h" width="683" lsb="15"/>
    <mtx name="hungarumlaut" width="639" lsb="42"/>
    <mtx name="hyphen" width="382" lsb="24"/>
    <mtx name="i" width="363" lsb="24"/>
    <mtx name="iacute" width="371" lsb="29"/>
    <mtx name="icircumflex" width="371" lsb="29"/>
    <mtx name="idieresis" width="371" lsb="11"/>
    <mtx name="igrave" width="371" lsb="29"/>
    <mtx name="j" width="306" lsb="19"/>
    <mtx name="k" width="669" lsb="18"/>
    <mtx name="l" width="373" lsb="25"/>
    <mtx name="less" width="430" lsb="19"/>
    <mtx name="logicalnot" width="847" lsb="25"/>
    <mtx name="m" width="1034" lsb="24"/>
    <mtx name="macron" width="412" lsb="48"/>
    <mtx name="minus" width="636" lsb="68"/>
    <mtx name="multiply" width="594" lsb="14"/>
    <mtx name="n" width="689" lsb="24"/>
    <mtx name="nine" width="541" lsb="54"/>
    <mtx name="nonmarkingreturn" width="0" lsb="0"/>
    <mtx name="ntilde" width="692" lsb="28"/>
    <mtx name="numbersign" width="771" lsb="2"/>
    <mtx name="o" width="613" lsb="31"/>
    <mtx name="oacute" width="580" lsb="24"/>
    <mtx name="ocircumflex" width="580" lsb="24"/>
    <mtx name="odieresis" width="613" lsb="31"/>
    <mtx name="ogonek" width="0" lsb="14"/>
    <mtx name="ograve" width="580" lsb="24"/>
    <mtx name="one" width="390" lsb="13"/>
    <mtx name="onehalf" width="1366" lsb="287"/>
    <mtx name="onequarter" width="1366" lsb="287"/>
    <mtx name="ordfeminine" width="520" lsb="85"/>
    <mtx name="ordmasculine" width="422" lsb="23"/>
    <mtx name="oslash" width="580" lsb="-9"/>
    <mtx name="otilde" width="580" lsb="24"/>
    <mtx name="p" width="689" lsb="30"/>
    <mtx name="paragraph" width="717" lsb="34"/>
    <mtx name="parenleft" width="352" lsb="47"/>
    <mtx name="parenright" width="352" lsb="-5"/>
    <mtx name="percent" width="902" lsb="106"/>
    <mtx name="period" width="266" lsb="31"/>
    <mtx name="periodcentered" width="371" lsb="103"/>
    <mtx name="plus" width="586" lsb="43"/>
    <mtx name="plusminus" width="600" lsb="50"/>
    <mtx name="q" width="673" lsb="25"/>
    <mtx name="question" width="604" lsb="39"/>
    <mtx name="questiondown" width="604" lsb="-20"/>
    <mtx name="quotedbl" width="318" lsb="20"/>
    <mtx name="quotedblbase" width="507" lsb="10"/>
    <mtx name="quotedblleft" width="436" lsb="-43"/>
    <mtx name="quotedblright" width="471" lsb="-20"/>
    <mtx name="quoteleft" width="246" lsb="-6"/>
    <mtx name="quoteright" width="247" lsb="-3"/>
    <mtx name="quotesingle" width="166" lsb="18"/>
    <mtx name="r" width="557" lsb="36"/>
    <mtx name="registered" width="1023" lsb="-3"/>
    <mtx name="ring" width="586" lsb="130"/>
    <mtx name="s" width="557" lsb="19"/>
    <mtx name="scaron" width="557" lsb="19"/>
    <mtx name="scaron.001" width="557" lsb="19"/>
    <mtx name="section" width="557" lsb="6"/>
    <mtx name="semicolon" width="266" lsb="-37"/>
    <mtx name="seven" width="601" lsb="20"/>
    <mtx name="six" width="553" lsb="27"/>
    <mtx name="slash" width="387" lsb="24"/>
    <mtx name="space" width="207" lsb="0"/>
    <mtx name="sterling" width="543" lsb="21"/>
    <mtx name="t" width="360" lsb="-2"/>
    <mtx name="thorn" width="577" lsb="9"/>
    <mtx name="three" width="527" lsb="3"/>
    <mtx name="threequarters" width="1366" lsb="274"/>
    <mtx name="tilde" width="441" lsb="-9"/>
    <mtx name="two" width="589" lsb="64"/>
    <mtx name="u" width="686" lsb="17"/>
    <mtx name="uacute" width="686" lsb="17"/>
    <mtx name="ucircumflex" width="686" lsb="17"/>
    <mtx name="udieresis" width="686" lsb="17"/>
    <mtx name="ugrave" width="686" lsb="17"/>
    <mtx name="underscore" width="500" lsb="0"/>
    <mtx name="uni00B2" width="375" lsb="43"/>
    <mtx name="uni00B3" width="368" lsb="32"/>
    <mtx name="uni00B5" width="686" lsb="74"/>
    <mtx name="uni00B9" width="281" lsb="18"/>
    <mtx name="uni2074" width="383" lsb="10"/>
    <mtx name="uni2082" width="1366" lsb="799"/>
    <mtx name="uni2084" width="1366" lsb="760"/>
    <mtx name="uni2215" width="180" lsb="-103"/>
    <mtx name="v" width="647" lsb="20"/>
    <mtx name="w" width="995" lsb="30"/>
    <mtx name="x" width="629" lsb="33"/>
    <mtx name="y" width="617" lsb="28"/>
    <mtx name="yacute" width="617" lsb="28"/>
    <mtx name="ydieresis" width="617" lsb="28"/>
    <mtx name="yen" width="782" lsb="22"/>
    <mtx name="z" width="556" lsb="26"/>
    <mtx name="zcaron" width="556" lsb="26"/>
    <mtx name="zcaron.001" width="556" lsb="26"/>
    <mtx name="zero" width="646" lsb="39"/>
  </hmtx>

  <cmap>
    <tableVersion version="0"/>
    <cmap_format_4 platformID="0" platEncID="3" language="0">
      <map code="0x20" name="space"/><!-- SPACE -->
      <map code="0x21" name="exclam"/><!-- EXCLAMATION MARK -->
      <map code="0x22" name="quotedbl"/><!-- QUOTATION MARK -->
      <map code="0x23" name="numbersign"/><!-- NUMBER SIGN -->
      <map code="0x24" name="dollar"/><!-- DOLLAR SIGN -->
      <map code="0x25" name="percent"/><!-- PERCENT SIGN -->
      <map code="0x26" name="ampersand"/><!-- AMPERSAND -->
      <map code="0x27" name="quotesingle"/><!-- APOSTROPHE -->
      <map code="0x28" name="parenleft"/><!-- LEFT PARENTHESIS -->
      <map code="0x29" name="parenright"/><!-- RIGHT PARENTHESIS -->
      <map code="0x2a" name="asterisk"/><!-- ASTERISK -->
      <map code="0x2b" name="plus"/><!-- PLUS SIGN -->
      <map code="0x2c" name="comma"/><!-- COMMA -->
      <map code="0x2d" name="hyphen"/><!-- HYPHEN-MINUS -->
      <map code="0x2e" name="period"/><!-- FULL STOP -->
      <map code="0x2f" name="slash"/><!-- SOLIDUS -->
      <map code="0x30" name="zero"/><!-- DIGIT ZERO -->
      <map code="0x31" name="one"/><!-- DIGIT ONE -->
      <map code="0x32" name="two"/><!-- DIGIT TWO -->
      <map code="0x33" name="three"/><!-- DIGIT THREE -->
      <map code="0x34" name="four"/><!-- DIGIT FOUR -->
      <map code="0x35" name="five"/><!-- DIGIT FIVE -->
      <map code="0x36" name="six"/><!-- DIGIT SIX -->
      <map code="0x37" name="seven"/><!-- DIGIT SEVEN -->
      <map code="0x38" name="eight"/><!-- DIGIT EIGHT -->
      <map code="0x39" name="nine"/><!-- DIGIT NINE -->
      <map code="0x3a" name="colon"/><!-- COLON -->
      <map code="0x3b" name="semicolon"/><!-- SEMICOLON -->
      <map code="0x3c" name="less"/><!-- LESS-THAN SIGN -->
      <map code="0x3d" name="equal"/><!-- EQUALS SIGN -->
      <map code="0x3e" name="greater"/><!-- GREATER-THAN SIGN -->
      <map code="0x3f" name="question"/><!-- QUESTION MARK -->
      <map code="0x40" name="at"/><!-- COMMERCIAL AT -->
      <map code="0x41" name="A"/><!-- LATIN CAPITAL LETTER A -->
      <map code="0x42" name="B"/><!-- LATIN CAPITAL LETTER B -->
      <map code="0x43" name="C"/><!-- LATIN CAPITAL LETTER C -->
      <map code="0x44" name="D"/><!-- LATIN CAPITAL LETTER D -->
      <map code="0x45" name="E"/><!-- LATIN CAPITAL LETTER E -->
      <map code="0x46" name="F"/><!-- LATIN CAPITAL LETTER F -->
      <map code="0x47" name="G"/><!-- LATIN CAPITAL LETTER G -->
      <map code="0x48" name="H"/><!-- LATIN CAPITAL LETTER H -->
      <map code="0x49" name="I"/><!-- LATIN CAPITAL LETTER I -->
      <map code="0x4a" name="J"/><!-- LATIN CAPITAL LETTER J -->
      <map code="0x4b" name="K"/><!-- LATIN CAPITAL LETTER K -->
      <map code="0x4c" name="L"/><!-- LATIN CAPITAL LETTER L -->
      <map code="0x4d" name="M"/><!-- LATIN CAPITAL LETTER M -->
      <map code="0x4e" name="N"/><!-- LATIN CAPITAL LETTER N -->
      <map code="0x4f" name="O"/><!-- LATIN CAPITAL LETTER O -->
      <map code="0x50" name="P"/><!-- LATIN CAPITAL LETTER P -->
      <map code="0x51" name="Q"/><!-- LATIN CAPITAL LETTER Q -->
      <map code="0x52" name="R"/><!-- LATIN CAPITAL LETTER R -->
      <map code="0x53" name="S"/><!-- LATIN CAPITAL LETTER S -->
      <map code="0x54" name="T"/><!-- LATIN CAPITAL LETTER T -->
      <map code="0x55" name="U"/><!-- LATIN CAPITAL LETTER U -->
      <map code="0x56" name="V"/><!-- LATIN CAPITAL LETTER V -->
      <map code="0x57" name="W"/><!-- LATIN CAPITAL LETTER W -->
      <map code="0x58" name="X"/><!-- LATIN CAPITAL LETTER X -->
      <map code="0x59" name="Y"/><!-- LATIN CAPITAL LETTER Y -->
      <map code="0x5a" name="Z"/><!-- LATIN CAPITAL LETTER Z -->
      <map code="0x5b" name="bracketleft"/><!-- LEFT SQUARE BRACKET -->
      <map code="0x5c" name="backslash"/><!-- REVERSE SOLIDUS -->
      <map code="0x5d" name="bracketright"/><!-- RIGHT SQUARE BRACKET -->
      <map code="0x5e" name="asciicircum"/><!-- CIRCUMFLEX ACCENT -->
      <map code="0x5f" name="underscore"/><!-- LOW LINE -->
      <map code="0x60" name="grave"/><!-- GRAVE ACCENT -->
      <map code="0x61" name="a"/><!-- LATIN SMALL LETTER A -->
      <map code="0x62" name="b"/><!-- LATIN SMALL LETTER B -->
      <map code="0x63" name="c"/><!-- LATIN SMALL LETTER C -->
      <map code="0x64" name="d"/><!-- LATIN SMALL LETTER D -->
      <map code="0x65" name="e"/><!-- LATIN SMALL LETTER E -->
      <map code="0x66" name="f"/><!-- LATIN SMALL LETTER F -->
      <map code="0x67" name="g"/><!-- LATIN SMALL LETTER G -->
      <map code="0x68" name="h"/><!-- LATIN SMALL LETTER H -->
      <map code="0x69" name="i"/><!-- LATIN SMALL LETTER I -->
      <map code="0x6a" name="j"/><!-- LATIN SMALL LETTER J -->
      <map code="0x6b" name="k"/><!-- LATIN SMALL LETTER K -->
      <map code="0x6c" name="l"/><!-- LATIN SMALL LETTER L -->
      <map code="0x6d" name="m"/><!-- LATIN SMALL LETTER M -->
      <map code="0x6e" name="n"/><!-- LATIN SMALL LETTER N -->
      <map code="0x6f" name="o"/><!-- LATIN SMALL LETTER O -->
      <map code="0x70" name="p"/><!-- LATIN SMALL LETTER P -->
      <map code="0x71" name="q"/><!-- LATIN SMALL LETTER Q -->
      <map code="0x72" name="r"/><!-- LATIN SMALL LETTER R -->
      <map code="0x73" name="s"/><!-- LATIN SMALL LETTER S -->
      <map code="0x74" name="t"/><!-- LATIN SMALL LETTER T -->
      <map code="0x75" name="u"/><!-- LATIN SMALL LETTER U -->
      <map code="0x76" name="v"/><!-- LATIN SMALL LETTER V -->
      <map code="0x77" name="w"/><!-- LATIN SMALL LETTER W -->
      <map code="0x78" name="x"/><!-- LATIN SMALL LETTER X -->
      <map code="0x79" name="y"/><!-- LATIN SMALL LETTER Y -->
      <map code="0x7a" name="z"/><!-- LATIN SMALL LETTER Z -->
      <map code="0x7b" name="braceleft"/><!-- LEFT CURLY BRACKET -->
      <map code="0x7c" name="bar"/><!-- VERTICAL LINE -->
      <map code="0x7d" name="braceright"/><!-- RIGHT CURLY BRACKET -->
      <map code="0x7e" name="asciitilde"/><!-- TILDE -->
      <map code="0xa1" name="exclamdown"/><!-- INVERTED EXCLAMATION MARK -->
      <map code="0xa2" name="cent"/><!-- CENT SIGN -->
      <map code="0xa3" name="sterling"/><!-- POUND SIGN -->
      <map code="0xa4" name="currency"/><!-- CURRENCY SIGN -->
      <map code="0xa5" name="yen"/><!-- YEN SIGN -->
      <map code="0xa6" name="brokenbar"/><!-- BROKEN BAR -->
      <map code="0xa7" name="section"/><!-- SECTION SIGN -->
      <map code="0xa8" name="dieresis"/><!-- DIAERESIS -->
      <map code="0xa9" name="copyright"/><!-- COPYRIGHT SIGN -->
      <map code="0xaa" name="ordfeminine"/><!-- FEMININE ORDINAL INDICATOR -->
      <map code="0xab" name="guillemotleft"/><!-- LEFT-POINTING DOUBLE ANGLE QUOTATION MARK -->
      <map code="0xac" name="logicalnot"/><!-- NOT SIGN -->
      <map code="0xae" name="registered"/><!-- REGISTERED SIGN -->
      <map code="0xaf" name="macron"/><!-- MACRON -->
      <map code="0xb0" name="degree"/><!-- DEGREE SIGN -->
      <map code="0xb1" name="plusminus"/><!-- PLUS-MINUS SIGN -->
      <map code="0xb2" name="uni00B2"/><!-- SUPERSCRIPT TWO -->
      <map code="0xb3" name="uni00B3"/><!-- SUPERSCRIPT THREE -->
      <map code="0xb4" name="acute"/><!-- ACUTE ACCENT -->
      <map code="0xb5" name="uni00B5"/><!-- MICRO SIGN -->
      <map code="0xb6" name="paragraph"/><!-- PILCROW SIGN -->
      <map code="0xb7" name="periodcentered"/><!-- MIDDLE DOT -->
      <map code="0xb8" name="cedilla"/><!-- CEDILLA -->
      <map code="0xb9" name="uni00B9"/><!-- SUPERSCRIPT ONE -->
      <map code="0xba" name="ordmasculine"/><!-- MASCULINE ORDINAL INDICATOR -->
      <map code="0xbb" name="guillemotright"/><!-- RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK -->
      <map code="0xbc" name="onequarter"/><!-- VULGAR FRACTION ONE QUARTER -->
      <map code="0xbd" name="onehalf"/><!-- VULGAR FRACTION ONE HALF -->
      <map code="0xbe" name="threequarters"/><!-- VULGAR FRACTION THREE QUARTERS -->
      <map code="0xbf" name="questiondown"/><!-- INVERTED QUESTION MARK -->
      <map code="0xc0" name="Agrave"/><!-- LATIN CAPITAL LETTER A WITH GRAVE -->
      <map code="0xc1" name="Aacute"/><!-- LATIN CAPITAL LETTER A WITH ACUTE -->
      <map code="0xc2" name="Acircumflex"/><!-- LATIN CAPITAL LETTER A WITH CIRCUMFLEX -->
      <map code="0xc3" name="Atilde"/><!-- LATIN CAPITAL LETTER A WITH TILDE -->
      <map code="0xc4" name="Adieresis"/><!-- LATIN CAPITAL LETTER A WITH DIAERESIS -->
      <map code="0xc5" name="Aring"/><!-- LATIN CAPITAL LETTER A WITH RING ABOVE -->
      <map code="0xc6" name="AE"/><!-- LATIN CAPITAL LETTER AE -->
      <map code="0xc7" name="Ccedilla"/><!-- LATIN CAPITAL LETTER C WITH CEDILLA -->
      <map code="0xc8" name="Egrave"/><!-- LATIN CAPITAL LETTER E WITH GRAVE -->
      <map code="0xc9" name="Eacute"/><!-- LATIN CAPITAL LETTER E WITH ACUTE -->
      <map code="0xca" name="Ecircumflex"/><!-- LATIN CAPITAL LETTER E WITH CIRCUMFLEX -->
      <map code="0xcb" name="Edieresis"/><!-- LATIN CAPITAL LETTER E WITH DIAERESIS -->
      <map code="0xcc" name="Igrave"/><!-- LATIN CAPITAL LETTER I WITH GRAVE -->
      <map code="0xcd" name="Iacute"/><!-- LATIN CAPITAL LETTER I WITH ACUTE -->
      <map code="0xce" name="Icircumflex"/><!-- LATIN CAPITAL LETTER I WITH CIRCUMFLEX -->
      <map code="0xcf" name="Idieresis"/><!-- LATIN CAPITAL LETTER I WITH DIAERESIS -->
      <map code="0xd0" name="Eth"/><!-- LATIN CAPITAL LETTER ETH -->
      <map code="0xd1" name="Ntilde"/><!-- LATIN CAPITAL LETTER N WITH TILDE -->
      <map code="0xd2" name="Ograve"/><!-- LATIN CAPITAL LETTER O WITH GRAVE -->
      <map code="0xd3" name="Oacute"/><!-- LATIN CAPITAL LETTER O WITH ACUTE -->
      <map code="0xd4" name="Ocircumflex"/><!-- LATIN CAPITAL LETTER O WITH CIRCUMFLEX -->
      <map code="0xd5" name="Otilde"/><!-- LATIN CAPITAL LETTER O WITH TILDE -->
      <map code="0xd6" name="Odieresis"/><!-- LATIN CAPITAL LETTER O WITH DIAERESIS -->
      <map code="0xd7" name="multiply"/><!-- MULTIPLICATION SIGN -->
      <map code="0xd8" name="Oslash"/><!-- LATIN CAPITAL LETTER O WITH STROKE -->
      <map code="0xd9" name="Ugrave"/><!-- LATIN CAPITAL LETTER U WITH GRAVE -->
      <map code="0xda" name="Uacute"/><!-- LATIN CAPITAL LETTER U WITH ACUTE -->
      <map code="0xdb" name="Ucircumflex"/><!-- LATIN CAPITAL LETTER U WITH CIRCUMFLEX -->
      <map code="0xdc" name="Udieresis"/><!-- LATIN CAPITAL LETTER U WITH DIAERESIS -->
      <map code="0xdd" name="Yacute"/><!-- LATIN CAPITAL LETTER Y WITH ACUTE -->
      <map code="0xde" name="Thorn"/><!-- LATIN CAPITAL LETTER THORN -->
      <map code="0xdf" name="germandbls"/><!-- LATIN SMALL LETTER SHARP S -->
      <map code="0xe0" name="agrave"/><!-- LATIN SMALL LETTER A WITH GRAVE -->
      <map code="0xe1" name="aacute"/><!-- LATIN SMALL LETTER A WITH ACUTE -->
      <map code="0xe2" name="acircumflex"/><!-- LATIN SMALL LETTER A WITH CIRCUMFLEX -->
      <map code="0xe3" name="atilde"/><!-- LATIN SMALL LETTER A WITH TILDE -->
      <map code="0xe4" name="adieresis"/><!-- LATIN SMALL LETTER A WITH DIAERESIS -->
      <map code="0xe5" name="aring"/><!-- LATIN SMALL LETTER A WITH RING ABOVE -->
      <map code="0xe6" name="ae"/><!-- LATIN SMALL LETTER AE -->
      <map code="0xe7" name="ccedilla"/><!-- LATIN SMALL LETTER C WITH CEDILLA -->
      <map code="0xe8" name="egrave"/><!-- LATIN SMALL LETTER E WITH GRAVE -->
      <map code="0xe9" name="eacute"/><!-- LATIN SMALL LETTER E WITH ACUTE -->
      <map code="0xea" name="ecircumflex"/><!-- LATIN SMALL LETTER E WITH CIRCUMFLEX -->
      <map code="0xeb" name="edieresis"/><!-- LATIN SMALL LETTER E WITH DIAERESIS -->
      <map code="0xec" name="igrave"/><!-- LATIN SMALL LETTER I WITH GRAVE -->
      <map code="0xed" name="iacute"/><!-- LATIN SMALL LETTER I WITH ACUTE -->
      <map code="0xee" name="icircumflex"/><!-- LATIN SMALL LETTER I WITH CIRCUMFLEX -->
      <map code="0xef" name="idieresis"/><!-- LATIN SMALL LETTER I WITH DIAERESIS -->
      <map code="0xf0" name="eth"/><!-- LATIN SMALL LETTER ETH -->
      <map code="0xf1" name="ntilde"/><!-- LATIN SMALL LETTER N WITH TILDE -->
      <map code="0xf2" name="ograve"/><!-- LATIN SMALL LETTER O WITH GRAVE -->
      <map code="0xf3" name="oacute"/><!-- LATIN SMALL LETTER O WITH ACUTE -->
      <map code="0xf4" name="ocircumflex"/><!-- LATIN SMALL LETTER O WITH CIRCUMFLEX -->
      <map code="0xf5" name="otilde"/><!-- LATIN SMALL LETTER O WITH TILDE -->
      <map code="0xf6" name="odieresis"/><!-- LATIN SMALL LETTER O WITH DIAERESIS -->
      <map code="0xf7" name="divide"/><!-- DIVISION SIGN -->
      <map code="0xf8" name="oslash"/><!-- LATIN SMALL LETTER O WITH STROKE -->
      <map code="0xf9" name="ugrave"/><!-- LATIN SMALL LETTER U WITH GRAVE -->
      <map code="0xfa" name="uacute"/><!-- LATIN SMALL LETTER U WITH ACUTE -->
      <map code="0xfb" name="ucircumflex"/><!-- LATIN SMALL LETTER U WITH CIRCUMFLEX -->
      <map code="0xfc" name="udieresis"/><!-- LATIN SMALL LETTER U WITH DIAERESIS -->
      <map code="0xfd" name="yacute"/><!-- LATIN SMALL LETTER Y WITH ACUTE -->
      <map code="0xfe" name="thorn"/><!-- LATIN SMALL LETTER THORN -->
      <map code="0xff" name="ydieresis"/><!-- LATIN SMALL LETTER Y WITH DIAERESIS -->
      <map code="0x10c" name="Ccaron"/><!-- LATIN CAPITAL LETTER C WITH CARON -->
      <map code="0x10d" name="ccaron"/><!-- LATIN SMALL LETTER C WITH CARON -->
      <map code="0x131" name="dotlessi"/><!-- LATIN SMALL LETTER DOTLESS I -->
      <map code="0x160" name="Scaron"/><!-- LATIN CAPITAL LETTER S WITH CARON -->
      <map code="0x161" name="scaron"/><!-- LATIN SMALL LETTER S WITH CARON -->
      <map code="0x178" name="Ydieresis"/><!-- LATIN CAPITAL LETTER Y WITH DIAERESIS -->
      <map code="0x17d" name="Zcaron"/><!-- LATIN CAPITAL LETTER Z WITH CARON -->
      <map code="0x17e" name="zcaron"/><!-- LATIN SMALL LETTER Z WITH CARON -->
      <map code="0x2c6" name="circumflex"/><!-- MODIFIER LETTER CIRCUMFLEX ACCENT -->
      <map code="0x2c7" name="caron"/><!-- CARON -->
      <map code="0x2d8" name="breve"/><!-- BREVE -->
      <map code="0x2d9" name="dotaccent"/><!-- DOT ABOVE -->
      <map code="0x2da" name="ring"/><!-- RING ABOVE -->
      <map code="0x2db" name="ogonek"/><!-- OGONEK -->
      <map code="0x2dc" name="tilde"/><!-- SMALL TILDE -->
      <map code="0x2dd" name="hungarumlaut"/><!-- DOUBLE ACUTE ACCENT -->
      <map code="0x2013" name="endash"/><!-- EN DASH -->
      <map code="0x2014" name="emdash"/><!-- EM DASH -->
      <map code="0x2018" name="quoteleft"/><!-- LEFT SINGLE QUOTATION MARK -->
      <map code="0x2019" name="quoteright"/><!-- RIGHT SINGLE QUOTATION MARK -->
      <map code="0x201c" name="quotedblleft"/><!-- LEFT DOUBLE QUOTATION MARK -->
      <map code="0x201d" name="quotedblright"/><!-- RIGHT DOUBLE QUOTATION MARK -->
      <map code="0x201e" name="quotedblbase"/><!-- DOUBLE LOW-9 QUOTATION MARK -->
      <map code="0x2022" name="bullet"/><!-- BULLET -->
      <map code="0x2026" name="ellipsis"/><!-- HORIZONTAL ELLIPSIS -->
      <map code="0x2039" name="guilsinglleft"/><!-- SINGLE LEFT-POINTING ANGLE QUOTATION MARK -->
      <map code="0x203a" name="guilsinglright"/><!-- SINGLE RIGHT-POINTING ANGLE QUOTATION MARK -->
      <map code="0x2044" name="fraction"/><!-- FRACTION SLASH -->
      <map code="0x2074" name="uni2074"/><!-- SUPERSCRIPT FOUR -->
      <map code="0x2082" name="uni2082"/><!-- SUBSCRIPT TWO -->
      <map code="0x2084" name="uni2084"/><!-- SUBSCRIPT FOUR -->
      <map code="0x2212" name="minus"/><!-- MINUS SIGN -->
      <map code="0x2215" name="uni2215"/><!-- DIVISION SLASH -->
    </cmap_format_4>
    <cmap_format_0 platformID="1" platEncID="0" language="0">
      <map code="0x0" name=".notdef"/>
      <map code="0x1" name=".notdef"/>
      <map code="0x2" name=".notdef"/>
      <map code="0x3" name=".notdef"/>
      <map code="0x4" name=".notdef"/>
      <map code="0x5" name=".notdef"/>
      <map code="0x6" name=".notdef"/>
      <map code="0x7" name=".notdef"/>
      <map code="0x8" name=".notdef"/>
      <map code="0x9" name="space"/>
      <map code="0xa" name=".notdef"/>
      <map code="0xb" name=".notdef"/>
      <map code="0xc" name=".notdef"/>
      <map code="0xd" name="space"/>
      <map code="0xe" name=".notdef"/>
      <map code="0xf" name=".notdef"/>
      <map code="0x10" name=".notdef"/>
      <map code="0x11" name=".notdef"/>
      <map code="0x12" name=".notdef"/>
      <map code="0x13" name=".notdef"/>
      <map code="0x14" name=".notdef"/>
      <map code="0x15" name=".notdef"/>
      <map code="0x16" name=".notdef"/>
      <map code="0x17" name=".notdef"/>
      <map code="0x18" name=".notdef"/>
      <map code="0x19" name=".notdef"/>
      <map code="0x1a" name=".notdef"/>
      <map code="0x1b" name=".notdef"/>
      <map code="0x1c" name=".notdef"/>
      <map code="0x1d" name=".notdef"/>
      <map code="0x1e" name=".notdef"/>
      <map code="0x1f" name=".notdef"/>
      <map code="0x20" name="space"/>
      <map code="0x21" name="exclam"/>
      <map code="0x22" name="quotedbl"/>
      <map code="0x23" name="numbersign"/>
      <map code="0x24" name="dollar"/>
      <map code="0x25" name="percent"/>
      <map code="0x26" name="ampersand"/>
      <map code="0x27" name="quotesingle"/>
      <map code="0x28" name="parenleft"/>
      <map code="0x29" name="parenright"/>
      <map code="0x2a" name="asterisk"/>
      <map code="0x2b" name="plus"/>
      <map code="0x2c" name="comma"/>
      <map code="0x2d" name="hyphen"/>
      <map code="0x2e" name="period"/>
      <map code="0x2f" name="slash"/>
      <map code="0x30" name="zero"/>
      <map code="0x31" name="one"/>
      <map code="0x32" name="two"/>
      <map code="0x33" name="three"/>
      <map code="0x34" name="four"/>
      <map code="0x35" name="five"/>
      <map code="0x36" name="six"/>
      <map code="0x37" name="seven"/>
      <map code="0x38" name="eight"/>
      <map code="0x39" name="nine"/>
      <map code="0x3a" name="colon"/>
      <map code="0x3b" name="semicolon"/>
      <map code="0x3c" name="less"/>
      <map code="0x3d" name="equal"/>
      <map code="0x3e" name="greater"/>
      <map code="0x3f" name="question"/>
      <map code="0x40" name="at"/>
      <map code="0x41" name="A"/>
      <map code="0x42" name="B"/>
      <map code="0x43" name="C"/>
      <map code="0x44" name="D"/>
      <map code="0x45" name="E"/>
      <map code="0x46" name="F"/>
      <map code="0x47" name="G"/>
      <map code="0x48" name="H"/>
      <map code="0x49" name="I"/>
      <map code="0x4a" name="J"/>
      <map code="0x4b" name="K"/>
      <map code="0x4c" name="L"/>
      <map code="0x4d" name="M"/>
      <map code="0x4e" name="N"/>
      <map code="0x4f" name="O"/>
      <map code="0x50" name="P"/>
      <map code="0x51" name="Q"/>
      <map code="0x52" name="R"/>
      <map code="0x53" name="S"/>
      <map code="0x54" name="T"/>
      <map code="0x55" name="U"/>
      <map code="0x56" name="V"/>
      <map code="0x57" name="W"/>
      <map code="0x58" name="X"/>
      <map code="0x59" name="Y"/>
      <map code="0x5a" name="Z"/>
      <map code="0x5b" name="bracketleft"/>
      <map code="0x5c" name="backslash"/>
      <map code="0x5d" name="bracketright"/>
      <map code="0x5e" name="asciicircum"/>
      <map code="0x5f" name="underscore"/>
      <map code="0x60" name="grave"/>
      <map code="0x61" name="a"/>
      <map code="0x62" name="b"/>
      <map code="0x63" name="c"/>
      <map code="0x64" name="d"/>
      <map code="0x65" name="e"/>
      <map code="0x66" name="f"/>
      <map code="0x67" name="g"/>
      <map code="0x68" name="h"/>
      <map code="0x69" name="i"/>
      <map code="0x6a" name="j"/>
      <map code="0x6b" name="k"/>
      <map code="0x6c" name="l"/>
      <map code="0x6d" name="m"/>
      <map code="0x6e" name="n"/>
      <map code="0x6f" name="o"/>
      <map code="0x70" name="p"/>
      <map code="0x71" name="q"/>
      <map code="0x72" name="r"/>
      <map code="0x73" name="s"/>
      <map code="0x74" name="t"/>
      <map code="0x75" name="u"/>
      <map code="0x76" name="v"/>
      <map code="0x77" name="w"/>
      <map code="0x78" name="x"/>
      <map code="0x79" name="y"/>
      <map code="0x7a" name="z"/>
      <map code="0x7b" name="braceleft"/>
      <map code="0x7c" name="bar"/>
      <map code="0x7d" name="braceright"/>
      <map code="0x7e" name="asciitilde"/>
      <map code="0x7f" name=".notdef"/>
      <map code="0x80" name="Adieresis"/>
      <map code="0x81" name="Aring"/>
      <map code="0x82" name="Ccedilla"/>
      <map code="0x83" name="Eacute"/>
      <map code="0x84" name="Ntilde"/>
      <map code="0x85" name="Odieresis"/>
      <map code="0x86" name="Udieresis"/>
      <map code="0x87" name="aacute"/>
      <map code="0x88" name="agrave"/>
      <map code="0x89" name="acircumflex"/>
      <map code="0x8a" name="adieresis"/>
      <map code="0x8b" name="atilde"/>
      <map code="0x8c" name="aring"/>
      <map code="0x8d" name="ccedilla"/>
      <map code="0x8e" name="eacute"/>
      <map code="0x8f" name="egrave"/>
      <map code="0x90" name="ecircumflex"/>
      <map code="0x91" name="edieresis"/>
      <map code="0x92" name="iacute"/>
      <map code="0x93" name="igrave"/>
      <map code="0x94" name="icircumflex"/>
      <map code="0x95" name="idieresis"/>
      <map code="0x96" name="ntilde"/>
      <map code="0x97" name="oacute"/>
      <map code="0x98" name="ograve"/>
      <map code="0x99" name="ocircumflex"/>
      <map code="0x9a" name="odieresis"/>
      <map code="0x9b" name="otilde"/>
      <map code="0x9c" name="uacute"/>
      <map code="0x9d" name="ugrave"/>
      <map code="0x9e" name="ucircumflex"/>
      <map code="0x9f" name="udieresis"/>
      <map code="0xa0" name=".notdef"/>
      <map code="0xa1" name="degree"/>
      <map code="0xa2" name="cent"/>
      <map code="0xa3" name="sterling"/>
      <map code="0xa4" name="section"/>
      <map code="0xa5" name="bullet"/>
      <map code="0xa6" name="paragraph"/>
      <map code="0xa7" name="germandbls"/>
      <map code="0xa8" name="registered"/>
      <map code="0xa9" name="copyright"/>
      <map code="0xaa" name=".notdef"/>
      <map code="0xab" name="acute"/>
      <map code="0xac" name="dieresis"/>
      <map code="0xad" name=".notdef"/>
      <map code="0xae" name="AE"/>
      <map code="0xaf" name="Oslash"/>
      <map code="0xb0" name=".notdef"/>
      <map code="0xb1" name="plusminus"/>
      <map code="0xb2" name=".notdef"/>
      <map code="0xb3" name=".notdef"/>
      <map code="0xb4" name="yen"/>
      <map code="0xb5" name="uni00B5"/>
      <map code="0xb6" name=".notdef"/>
      <map code="0xb7" name=".notdef"/>
      <map code="0xb8" name=".notdef"/>
      <map code="0xb9" name=".notdef"/>
      <map code="0xba" name=".notdef"/>
      <map code="0xbb" name="ordfeminine"/>
      <map code="0xbc" name="ordmasculine"/>
      <map code="0xbd" name=".notdef"/>
      <map code="0xbe" name="ae"/>
      <map code="0xbf" name="oslash"/>
      <map code="0xc0" name="questiondown"/>
      <map code="0xc1" name="exclamdown"/>
      <map code="0xc2" name="logicalnot"/>
      <map code="0xc3" name=".notdef"/>
      <map code="0xc4" name=".notdef"/>
      <map code="0xc5" name=".notdef"/>
      <map code="0xc6" name=".notdef"/>
      <map code="0xc7" name="guillemotleft"/>
      <map code="0xc8" name="guillemotright"/>
      <map code="0xc9" name="ellipsis"/>
      <map code="0xca" name=".notdef"/>
      <map code="0xcb" name="Agrave"/>
      <map code="0xcc" name="Atilde"/>
      <map code="0xcd" name="Otilde"/>
      <map code="0xce" name=".notdef"/>
      <map code="0xcf" name=".notdef"/>
      <map code="0xd0" name="endash"/>
      <map code="0xd1" name="emdash"/>
      <map code="0xd2" name="quotedblleft"/>
      <map code="0xd3" name="quotedblright"/>
      <map code="0xd4" name="quoteleft"/>
      <map code="0xd5" name="quoteright"/>
      <map code="0xd6" name="divide"/>
      <map code="0xd7" name=".notdef"/>
      <map code="0xd8" name="ydieresis"/>
      <map code="0xd9" name="Ydieresis"/>
      <map code="0xda" name="fraction"/>
      <map code="0xdb" name=".notdef"/>
      <map code="0xdc" name="guilsinglleft"/>
      <map code="0xdd" name="guilsinglright"/>
      <map code="0xde" name=".notdef"/>
      <map code="0xdf" name=".notdef"/>
      <map code="0xe0" name=".notdef"/>
      <map code="0xe1" name="periodcentered"/>
      <map code="0xe2" name=".notdef"/>
      <map code="0xe3" name="quotedblbase"/>
      <map code="0xe4" name=".notdef"/>
      <map code="0xe5" name="Acircumflex"/>
      <map code="0xe6" name="Ecircumflex"/>
      <map code="0xe7" name="Aacute"/>
      <map code="0xe8" name="Edieresis"/>
      <map code="0xe9" name="Egrave"/>
      <map code="0xea" name="Iacute"/>
      <map code="0xeb" name="Icircumflex"/>
      <map code="0xec" name="Idieresis"/>
      <map code="0xed" name="Igrave"/>
      <map code="0xee" name="Oacute"/>
      <map code="0xef" name="Ocircumflex"/>
      <map code="0xf0" name=".notdef"/>
      <map code="0xf1" name="Ograve"/>
      <map code="0xf2" name="Uacute"/>
      <map code="0xf3" name="Ucircumflex"/>
      <map code="0xf4" name="Ugrave"/>
      <map code="0xf5" name="dotlessi"/>
      <map code="0xf6" name="circumflex"/>
      <map code="0xf7" name="tilde"/>
      <map code="0xf8" name="macron"/>
      <map code="0xf9" name="breve"/>
      <map code="0xfa" name="dotaccent"/>
      <map code="0xfb" name="ring"/>
      <map code="0xfc" name="cedilla"/>
      <map code="0xfd" name="hungarumlaut"/>
      <map code="0xfe" name="ogonek"/>
      <map code="0xff" name="caron"/>
    </cmap_format_0>
    <cmap_format_4 platformID="3" platEncID="1" language="0">
      <map code="0x20" name="space"/><!-- SPACE -->
      <map code="0x21" name="exclam"/><!-- EXCLAMATION MARK -->
      <map code="0x22" name="quotedbl"/><!-- QUOTATION MARK -->
      <map code="0x23" name="numbersign"/><!-- NUMBER SIGN -->
      <map code="0x24" name="dollar"/><!-- DOLLAR SIGN -->
      <map code="0x25" name="percent"/><!-- PERCENT SIGN -->
      <map code="0x26" name="ampersand"/><!-- AMPERSAND -->
      <map code="0x27" name="quotesingle"/><!-- APOSTROPHE -->
      <map code="0x28" name="parenleft"/><!-- LEFT PARENTHESIS -->
      <map code="0x29" name="parenright"/><!-- RIGHT PARENTHESIS -->
      <map code="0x2a" name="asterisk"/><!-- ASTERISK -->
      <map code="0x2b" name="plus"/><!-- PLUS SIGN -->
      <map code="0x2c" name="comma"/><!-- COMMA -->
      <map code="0x2d" name="hyphen"/><!-- HYPHEN-MINUS -->
      <map code="0x2e" name="period"/><!-- FULL STOP -->
      <map code="0x2f" name="slash"/><!-- SOLIDUS -->
      <map code="0x30" name="zero"/><!-- DIGIT ZERO -->
      <map code="0x31" name="one"/><!-- DIGIT ONE -->
      <map code="0x32" name="two"/><!-- DIGIT TWO -->
      <map code="0x33" name="three"/><!-- DIGIT THREE -->
      <map code="0x34" name="four"/><!-- DIGIT FOUR -->
      <map code="0x35" name="five"/><!-- DIGIT FIVE -->
      <map code="0x36" name="six"/><!-- DIGIT SIX -->
      <map code="0x37" name="seven"/><!-- DIGIT SEVEN -->
      <map code="0x38" name="eight"/><!-- DIGIT EIGHT -->
      <map code="0x39" name="nine"/><!-- DIGIT NINE -->
      <map code="0x3a" name="colon"/><!-- COLON -->
      <map code="0x3b" name="semicolon"/><!-- SEMICOLON -->
      <map code="0x3c" name="less"/><!-- LESS-THAN SIGN -->
      <map code="0x3d" name="equal"/><!-- EQUALS SIGN -->
      <map code="0x3e" name="greater"/><!-- GREATER-THAN SIGN -->
      <map code="0x3f" name="question"/><!-- QUESTION MARK -->
      <map code="0x40" name="at"/><!-- COMMERCIAL AT -->
      <map code="0x41" name="A"/><!-- LATIN CAPITAL LETTER A -->
      <map code="0x42" name="B"/><!-- LATIN CAPITAL LETTER B -->
      <map code="0x43" name="C"/><!-- LATIN CAPITAL LETTER C -->
      <map code="0x44" name="D"/><!-- LATIN CAPITAL LETTER D -->
      <map code="0x45" name="E"/><!-- LATIN CAPITAL LETTER E -->
      <map code="0x46" name="F"/><!-- LATIN CAPITAL LETTER F -->
      <map code="0x47" name="G"/><!-- LATIN CAPITAL LETTER G -->
      <map code="0x48" name="H"/><!-- LATIN CAPITAL LETTER H -->
      <map code="0x49" name="I"/><!-- LATIN CAPITAL LETTER I -->
      <map code="0x4a" name="J"/><!-- LATIN CAPITAL LETTER J -->
      <map code="0x4b" name="K"/><!-- LATIN CAPITAL LETTER K -->
      <map code="0x4c" name="L"/><!-- LATIN CAPITAL LETTER L -->
      <map code="0x4d" name="M"/><!-- LATIN CAPITAL LETTER M -->
      <map code="0x4e" name="N"/><!-- LATIN CAPITAL LETTER N -->
      <map code="0x4f" name="O"/><!-- LATIN CAPITAL LETTER O -->
      <map code="0x50" name="P"/><!-- LATIN CAPITAL LETTER P -->
      <map code="0x51" name="Q"/><!-- LATIN CAPITAL LETTER Q -->
      <map code="0x52" name="R"/><!-- LATIN CAPITAL LETTER R -->
      <map code="0x53" name="S"/><!-- LATIN CAPITAL LETTER S -->
      <map code="0x54" name="T"/><!-- LATIN CAPITAL LETTER T -->
      <map code="0x55" name="U"/><!-- LATIN CAPITAL LETTER U -->
      <map code="0x56" name="V"/><!-- LATIN CAPITAL LETTER V -->
      <map code="0x57" name="W"/><!-- LATIN CAPITAL LETTER W -->
      <map code="0x58" name="X"/><!-- LATIN CAPITAL LETTER X -->
      <map code="0x59" name="Y"/><!-- LATIN CAPITAL LETTER Y -->
      <map code="0x5a" name="Z"/><!-- LATIN CAPITAL LETTER Z -->
      <map code="0x5b" name="bracketleft"/><!-- LEFT SQUARE BRACKET -->
      <map code="0x5c" name="backslash"/><!-- REVERSE SOLIDUS -->
      <map code="0x5d" name="bracketright"/><!-- RIGHT SQUARE BRACKET -->
      <map code="0x5e" name="asciicircum"/><!-- CIRCUMFLEX ACCENT -->
      <map code="0x5f" name="underscore"/><!-- LOW LINE -->
      <map code="0x60" name="grave"/><!-- GRAVE ACCENT -->
      <map code="0x61" name="a"/><!-- LATIN SMALL LETTER A -->
      <map code="0x62" name="b"/><!-- LATIN SMALL LETTER B -->
      <map code="0x63" name="c"/><!-- LATIN SMALL LETTER C -->
      <map code="0x64" name="d"/><!-- LATIN SMALL LETTER D -->
      <map code="0x65" name="e"/><!-- LATIN SMALL LETTER E -->
      <map code="0x66" name="f"/><!-- LATIN SMALL LETTER F -->
      <map code="0x67" name="g"/><!-- LATIN SMALL LETTER G -->
      <map code="0x68" name="h"/><!-- LATIN SMALL LETTER H -->
      <map code="0x69" name="i"/><!-- LATIN SMALL LETTER I -->
      <map code="0x6a" name="j"/><!-- LATIN SMALL LETTER J -->
      <map code="0x6b" name="k"/><!-- LATIN SMALL LETTER K -->
      <map code="0x6c" name="l"/><!-- LATIN SMALL LETTER L -->
      <map code="0x6d" name="m"/><!-- LATIN SMALL LETTER M -->
      <map code="0x6e" name="n"/><!-- LATIN SMALL LETTER N -->
      <map code="0x6f" name="o"/><!-- LATIN SMALL LETTER O -->
      <map code="0x70" name="p"/><!-- LATIN SMALL LETTER P -->
      <map code="0x71" name="q"/><!-- LATIN SMALL LETTER Q -->
      <map code="0x72" name="r"/><!-- LATIN SMALL LETTER R -->
      <map code="0x73" name="s"/><!-- LATIN SMALL LETTER S -->
      <map code="0x74" name="t"/><!-- LATIN SMALL LETTER T -->
      <map code="0x75" name="u"/><!-- LATIN SMALL LETTER U -->
      <map code="0x76" name="v"/><!-- LATIN SMALL LETTER V -->
      <map code="0x77" name="w"/><!-- LATIN SMALL LETTER W -->
      <map code="0x78" name="x"/><!-- LATIN SMALL LETTER X -->
      <map code="0x79" name="y"/><!-- LATIN SMALL LETTER Y -->
      <map code="0x7a" name="z"/><!-- LATIN SMALL LETTER Z -->
      <map code="0x7b" name="braceleft"/><!-- LEFT CURLY BRACKET -->
      <map code="0x7c" name="bar"/><!-- VERTICAL LINE -->
      <map code="0x7d" name="braceright"/><!-- RIGHT CURLY BRACKET -->
      <map code="0x7e" name="asciitilde"/><!-- TILDE -->
      <map code="0xa1" name="exclamdown"/><!-- INVERTED EXCLAMATION MARK -->
      <map code="0xa2" name="cent"/><!-- CENT SIGN -->
      <map code="0xa3" name="sterling"/><!-- POUND SIGN -->
      <map code="0xa4" name="currency"/><!-- CURRENCY SIGN -->
      <map code="0xa5" name="yen"/><!-- YEN SIGN -->
      <map code="0xa6" name="brokenbar"/><!-- BROKEN BAR -->
      <map code="0xa7" name="section"/><!-- SECTION SIGN -->
      <map code="0xa8" name="dieresis"/><!-- DIAERESIS -->
      <map code="0xa9" name="copyright"/><!-- COPYRIGHT SIGN -->
      <map code="0xaa" name="ordfeminine"/><!-- FEMININE ORDINAL INDICATOR -->
      <map code="0xab" name="guillemotleft"/><!-- LEFT-POINTING DOUBLE ANGLE QUOTATION MARK -->
      <map code="0xac" name="logicalnot"/><!-- NOT SIGN -->
      <map code="0xae" name="registered"/><!-- REGISTERED SIGN -->
      <map code="0xaf" name="macron"/><!-- MACRON -->
      <map code="0xb0" name="degree"/><!-- DEGREE SIGN -->
      <map code="0xb1" name="plusminus"/><!-- PLUS-MINUS SIGN -->
      <map code="0xb2" name="uni00B2"/><!-- SUPERSCRIPT TWO -->
      <map code="0xb3" name="uni00B3"/><!-- SUPERSCRIPT THREE -->
      <map code="0xb4" name="acute"/><!-- ACUTE ACCENT -->
      <map code="0xb5" name="uni00B5"/><!-- MICRO SIGN -->
      <map code="0xb6" name="paragraph"/><!-- PILCROW SIGN -->
      <map code="0xb7" name="periodcentered"/><!-- MIDDLE DOT -->
      <map code="0xb8" name="cedilla"/><!-- CEDILLA -->
      <map code="0xb9" name="uni00B9"/><!-- SUPERSCRIPT ONE -->
      <map code="0xba" name="ordmasculine"/><!-- MASCULINE ORDINAL INDICATOR -->
      <map code="0xbb" name="guillemotright"/><!-- RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK -->
      <map code="0xbc" name="onequarter"/><!-- VULGAR FRACTION ONE QUARTER -->
      <map code="0xbd" name="onehalf"/><!-- VULGAR FRACTION ONE HALF -->
      <map code="0xbe" name="threequarters"/><!-- VULGAR FRACTION THREE QUARTERS -->
      <map code="0xbf" name="questiondown"/><!-- INVERTED QUESTION MARK -->
      <map code="0xc0" name="Agrave"/><!-- LATIN CAPITAL LETTER A WITH GRAVE -->
      <map code="0xc1" name="Aacute"/><!-- LATIN CAPITAL LETTER A WITH ACUTE -->
      <map code="0xc2" name="Acircumflex"/><!-- LATIN CAPITAL LETTER A WITH CIRCUMFLEX -->
      <map code="0xc3" name="Atilde"/><!-- LATIN CAPITAL LETTER A WITH TILDE -->
      <map code="0xc4" name="Adieresis"/><!-- LATIN CAPITAL LETTER A WITH DIAERESIS -->
      <map code="0xc5" name="Aring"/><!-- LATIN CAPITAL LETTER A WITH RING ABOVE -->
      <map code="0xc6" name="AE"/><!-- LATIN CAPITAL LETTER AE -->
      <map code="0xc7" name="Ccedilla"/><!-- LATIN CAPITAL LETTER C WITH CEDILLA -->
      <map code="0xc8" name="Egrave"/><!-- LATIN CAPITAL LETTER E WITH GRAVE -->
      <map code="0xc9" name="Eacute"/><!-- LATIN CAPITAL LETTER E WITH ACUTE -->
      <map code="0xca" name="Ecircumflex"/><!-- LATIN CAPITAL LETTER E WITH CIRCUMFLEX -->
      <map code="0xcb" name="Edieresis"/><!-- LATIN CAPITAL LETTER E WITH DIAERESIS -->
      <map code="0xcc" name="Igrave"/><!-- LATIN CAPITAL LETTER I WITH GRAVE -->
      <map code="0xcd" name="Iacute"/><!-- LATIN CAPITAL LETTER I WITH ACUTE -->
      <map code="0xce" name="Icircumflex"/><!-- LATIN CAPITAL LETTER I WITH CIRCUMFLEX -->
      <map code="0xcf" name="Idieresis"/><!-- LATIN CAPITAL LETTER I WITH DIAERESIS -->
      <map code="0xd0" name="Eth"/><!-- LATIN CAPITAL LETTER ETH -->
      <map code="0xd1" name="Ntilde"/><!-- LATIN CAPITAL LETTER N WITH TILDE -->
      <map code="0xd2" name="Ograve"/><!-- LATIN CAPITAL LETTER O WITH GRAVE -->
      <map code="0xd3" name="Oacute"/><!-- LATIN CAPITAL LETTER O WITH ACUTE -->
      <map code="0xd4" name="Ocircumflex"/><!-- LATIN CAPITAL LETTER O WITH CIRCUMFLEX -->
      <map code="0xd5" name="Otilde"/><!-- LATIN CAPITAL LETTER O WITH TILDE -->
      <map code="0xd6" name="Odieresis"/><!-- LATIN CAPITAL LETTER O WITH DIAERESIS -->
      <map code="0xd7" name="multiply"/><!-- MULTIPLICATION SIGN -->
      <map code="0xd8" name="Oslash"/><!-- LATIN CAPITAL LETTER O WITH STROKE -->
      <map code="0xd9" name="Ugrave"/><!-- LATIN CAPITAL LETTER U WITH GRAVE -->
      <map code="0xda" name="Uacute"/><!-- LATIN CAPITAL LETTER U WITH ACUTE -->
      <map code="0xdb" name="Ucircumflex"/><!-- LATIN CAPITAL LETTER U WITH CIRCUMFLEX -->
      <map code="0xdc" name="Udieresis"/><!-- LATIN CAPITAL LETTER U WITH DIAERESIS -->
      <map code="0xdd" name="Yacute"/><!-- LATIN CAPITAL LETTER Y WITH ACUTE -->
      <map code="0xde" name="Thorn"/><!-- LATIN CAPITAL LETTER THORN -->
      <map code="0xdf" name="germandbls"/><!-- LATIN SMALL LETTER SHARP S -->
      <map code="0xe0" name="agrave"/><!-- LATIN SMALL LETTER A WITH GRAVE -->
      <map code="0xe1" name="aacute"/><!-- LATIN SMALL LETTER A WITH ACUTE -->
      <map code="0xe2" name="acircumflex"/><!-- LATIN SMALL LETTER A WITH CIRCUMFLEX -->
      <map code="0xe3" name="atilde"/><!-- LATIN SMALL LETTER A WITH TILDE -->
      <map code="0xe4" name="adieresis"/><!-- LATIN SMALL LETTER A WITH DIAERESIS -->
      <map code="0xe5" name="aring"/><!-- LATIN SMALL LETTER A WITH RING ABOVE -->
      <map code="0xe6" name="ae"/><!-- LATIN SMALL LETTER AE -->
      <map code="0xe7" name="ccedilla"/><!-- LATIN SMALL LETTER C WITH CEDILLA -->
      <map code="0xe8" name="egrave"/><!-- LATIN SMALL LETTER E WITH GRAVE -->
      <map code="0xe9" name="eacute"/><!-- LATIN SMALL LETTER E WITH ACUTE -->
      <map code="0xea" name="ecircumflex"/><!-- LATIN SMALL LETTER E WITH CIRCUMFLEX -->
      <map code="0xeb" name="edieresis"/><!-- LATIN SMALL LETTER E WITH DIAERESIS -->
      <map code="0xec" name="igrave"/><!-- LATIN SMALL LETTER I WITH GRAVE -->
      <map code="0xed" name="iacute"/><!-- LATIN SMALL LETTER I WITH ACUTE -->
      <map code="0xee" name="icircumflex"/><!-- LATIN SMALL LETTER I WITH CIRCUMFLEX -->
      <map code="0xef" name="idieresis"/><!-- LATIN SMALL LETTER I WITH DIAERESIS -->
      <map code="0xf0" name="eth"/><!-- LATIN SMALL LETTER ETH -->
      <map code="0xf1" name="ntilde"/><!-- LATIN SMALL LETTER N WITH TILDE -->
      <map code="0xf2" name="ograve"/><!-- LATIN SMALL LETTER O WITH GRAVE -->
      <map code="0xf3" name="oacute"/><!-- LATIN SMALL LETTER O WITH ACUTE -->
      <map code="0xf4" name="ocircumflex"/><!-- LATIN SMALL LETTER O WITH CIRCUMFLEX -->
      <map code="0xf5" name="otilde"/><!-- LATIN SMALL LETTER O WITH TILDE -->
      <map code="0xf6" name="odieresis"/><!-- LATIN SMALL LETTER O WITH DIAERESIS -->
      <map code="0xf7" name="divide"/><!-- DIVISION SIGN -->
      <map code="0xf8" name="oslash"/><!-- LATIN SMALL LETTER O WITH STROKE -->
      <map code="0xf9" name="ugrave"/><!-- LATIN SMALL LETTER U WITH GRAVE -->
      <map code="0xfa" name="uacute"/><!-- LATIN SMALL LETTER U WITH ACUTE -->
      <map code="0xfb" name="ucircumflex"/><!-- LATIN SMALL LETTER U WITH CIRCUMFLEX -->
      <map code="0xfc" name="udieresis"/><!-- LATIN SMALL LETTER U WITH DIAERESIS -->
      <map code="0xfd" name="yacute"/><!-- LATIN SMALL LETTER Y WITH ACUTE -->
      <map code="0xfe" name="thorn"/><!-- LATIN SMALL LETTER THORN -->
      <map code="0xff" name="ydieresis"/><!-- LATIN SMALL LETTER Y WITH DIAERESIS -->
      <map code="0x10c" name="Ccaron"/><!-- LATIN CAPITAL LETTER C WITH CARON -->
      <map code="0x10d" name="ccaron"/><!-- LATIN SMALL LETTER C WITH CARON -->
      <map code="0x131" name="dotlessi"/><!-- LATIN SMALL LETTER DOTLESS I -->
      <map code="0x160" name="Scaron"/><!-- LATIN CAPITAL LETTER S WITH CARON -->
      <map code="0x161" name="scaron"/><!-- LATIN SMALL LETTER S WITH CARON -->
      <map code="0x178" name="Ydieresis"/><!-- LATIN CAPITAL LETTER Y WITH DIAERESIS -->
      <map code="0x17d" name="Zcaron"/><!-- LATIN CAPITAL LETTER Z WITH CARON -->
      <map code="0x17e" name="zcaron"/><!-- LATIN SMALL LETTER Z WITH CARON -->
      <map code="0x2c6" name="circumflex"/><!-- MODIFIER LETTER CIRCUMFLEX ACCENT -->
      <map code="0x2c7" name="caron"/><!-- CARON -->
      <map code="0x2d8" name="breve"/><!-- BREVE -->
      <map code="0x2d9" name="dotaccent"/><!-- DOT ABOVE -->
      <map code="0x2da" name="ring"/><!-- RING ABOVE -->
      <map code="0x2db" name="ogonek"/><!-- OGONEK -->
      <map code="0x2dc" name="tilde"/><!-- SMALL TILDE -->
      <map code="0x2dd" name="hungarumlaut"/><!-- DOUBLE ACUTE ACCENT -->
      <map code="0x2013" name="endash"/><!-- EN DASH -->
      <map code="0x2014" name="emdash"/><!-- EM DASH -->
      <map code="0x2018" name="quoteleft"/><!-- LEFT SINGLE QUOTATION MARK -->
      <map code="0x2019" name="quoteright"/><!-- RIGHT SINGLE QUOTATION MARK -->
      <map code="0x201c" name="quotedblleft"/><!-- LEFT DOUBLE QUOTATION MARK -->
      <map code="0x201d" name="quotedblright"/><!-- RIGHT DOUBLE QUOTATION MARK -->
      <map code="0x201e" name="quotedblbase"/><!-- DOUBLE LOW-9 QUOTATION MARK -->
      <map code="0x2022" name="bullet"/><!-- BULLET -->
      <map code="0x2026" name="ellipsis"/><!-- HORIZONTAL ELLIPSIS -->
      <map code="0x2039" name="guilsinglleft"/><!-- SINGLE LEFT-POINTING ANGLE QUOTATION MARK -->
      <map code="0x203a" name="guilsinglright"/><!-- SINGLE RIGHT-POINTING ANGLE QUOTATION MARK -->
      <map code="0x2044" name="fraction"/><!-- FRACTION SLASH -->
      <map code="0x2074" name="uni2074"/><!-- SUPERSCRIPT FOUR -->
      <map code="0x2082" name="uni2082"/><!-- SUBSCRIPT TWO -->
      <map code="0x2084" name="uni2084"/><!-- SUBSCRIPT FOUR -->
      <map code="0x2212" name="minus"/><!-- MINUS SIGN -->
      <map code="0x2215" name="uni2215"/><!-- DIVISION SLASH -->
    </cmap_format_4>
  </cmap>

  <fpgm>
    <assembly>
      PUSHB[ ]	/* 1 value pushed */
      0
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      NEQ[ ]	/* NotEqual */
      IF[ ]	/* If */
      RCVT[ ]	/* ReadCVT */
      EIF[ ]	/* EndIf */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHW[ ]	/* 1 value pushed */
      14
      LTEQ[ ]	/* LessThenOrEqual */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      6
      GTEQ[ ]	/* GreaterThanOrEqual */
      AND[ ]	/* LogicalAnd */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      52
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      40
      EIF[ ]	/* EndIf */
      ADD[ ]	/* Add */
      FLOOR[ ]	/* Floor */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      NEQ[ ]	/* NotEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      SUB[ ]	/* Subtract */
      PUSHW[ ]	/* 2 values pushed */
      2048 2048
      MUL[ ]	/* Multiply */
      MUL[ ]	/* Multiply */
      SWAP[ ]	/* SwapTopStack */
      DIV[ ]	/* Divide */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      SWAP[ ]	/* SwapTopStack */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 3 values pushed */
      0 1 0
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      1
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      32
      ADD[ ]	/* Add */
      FLOOR[ ]	/* Floor */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      2
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      ABS[ ]	/* Absolute */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      192
      LT[ ]	/* LessThan */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      AND[ ]	/* LogicalAnd */
      PUSHB[ ]	/* 3 values pushed */
      40 1 10
      RS[ ]	/* ReadStore */
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      6
      RCVT[ ]	/* ReadCVT */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      EIF[ ]	/* EndIf */
      GT[ ]	/* GreaterThan */
      OR[ ]	/* LogicalOr */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      ROLL[ ]	/* RollTopThreeStack */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      80
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      56
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      56
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 2 values pushed */
      1 10
      RS[ ]	/* ReadStore */
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      RCVT[ ]	/* ReadCVT */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      PUSHB[ ]	/* 1 value pushed */
      40
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 2 values pushed */
      1 10
      RS[ ]	/* ReadStore */
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      48
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      48
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      192
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      FLOOR[ ]	/* Floor */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      10
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      ADD[ ]	/* Add */
      ELSE[ ]	/* Else */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      32
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      10
      ADD[ ]	/* Add */
      ELSE[ ]	/* Else */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      54
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      54
      ADD[ ]	/* Add */
      ELSE[ ]	/* Else */
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      NEG[ ]	/* Negate */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      3
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      5
      RS[ ]	/* ReadStore */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      5
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      6
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      4
      FDEF[ ]	/* FunctionDefinition */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ABS[ ]	/* Absolute */
      PUSHB[ ]	/* 2 values pushed */
      5 98
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      6
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      6
      RCVT[ ]	/* ReadCVT */
      IF[ ]	/* If */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 2 values pushed */
      1 10
      RS[ ]	/* ReadStore */
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      PUSHB[ ]	/* 2 values pushed */
      1 10
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      3
      ADD[ ]	/* Add */
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      PUSHB[ ]	/* 1 value pushed */
      3
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      6
      RS[ ]	/* ReadStore */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 2 values pushed */
      48 5
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      ADD[ ]	/* Add */
      LT[ ]	/* LessThan */
      ELSE[ ]	/* Else */
      SUB[ ]	/* Subtract */
      GT[ ]	/* GreaterThan */
      EIF[ ]	/* EndIf */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      EIF[ ]	/* EndIf */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      NEG[ ]	/* Negate */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      5
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      7
      RS[ ]	/* ReadStore */
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 3 values pushed */
      0 2 0
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      6
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      7
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      5
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      7
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      8
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      7 11 0
      RS[ ]	/* ReadStore */
      RCVT[ ]	/* ReadCVT */
      WS[ ]	/* WriteStore */
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 3 values pushed */
      0 1 0
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      9
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      SWAP[ ]	/* SwapTopStack */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 3 values pushed */
      0 1 0
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      10
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      ABS[ ]	/* Absolute */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      32
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      48
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      32
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      64
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      NEG[ ]	/* Negate */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      WCVTP[ ]	/* WriteCVTInPixels */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      11
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      ABS[ ]	/* Absolute */
      PUSHB[ ]	/* 1 value pushed */
      36
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      0
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      64
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      NEG[ ]	/* Negate */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      WCVTP[ ]	/* WriteCVTInPixels */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      12
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 3 values pushed */
      11 10 3
      RCVT[ ]	/* ReadCVT */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      13
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      2 2
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      100
      SUB[ ]	/* Subtract */
      WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      14
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      12
      RS[ ]	/* ReadStore */
      MD[1]	/* MeasureDistance */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      12
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      13
      RS[ ]	/* ReadStore */
      MD[1]	/* MeasureDistance */
      PUSHB[ ]	/* 1 value pushed */
      0
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      13
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      15
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      16
      DIV[ ]	/* Divide */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      DUP[ ]	/* DuplicateTopStack */
      PUSHW[ ]	/* 1 value pushed */
      1024
      MUL[ ]	/* Multiply */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      14
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      14
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      SWAP[ ]	/* SwapTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      16
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      4 100
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      DEPTH[ ]	/* GetDepthStack */
      PUSHB[ ]	/* 1 value pushed */
      13
      NEG[ ]	/* Negate */
      SWAP[ ]	/* SwapTopStack */
      JROT[ ]	/* JumpRelativeOnTrue */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      17
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      MPPEM[ ]	/* MeasurePixelPerEm */
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      4 100
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      DEPTH[ ]	/* GetDepthStack */
      PUSHB[ ]	/* 1 value pushed */
      19
      NEG[ ]	/* Negate */
      SWAP[ ]	/* SwapTopStack */
      JROT[ ]	/* JumpRelativeOnTrue */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      18
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 15
      RS[ ]	/* ReadStore */
      NEQ[ ]	/* NotEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      15 15
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      1
      SUB[ ]	/* Subtract */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      15
      CALL[ ]	/* CallFunction */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 2 values pushed */
      12 2
      CINDEX[ ]	/* CopyXToTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 2 values pushed */
      13 2
      CINDEX[ ]	/* CopyXToTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      1
      SZPS[ ]	/* SetZonePointerS */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      1 0
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      WS[ ]	/* WriteStore */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      14
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      14
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 2 values pushed */
      1 0
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      14
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      12
      RS[ ]	/* ReadStore */
      GC[1]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      13
      RS[ ]	/* ReadStore */
      GC[1]	/* GetCoordOnPVector */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 2 values pushed */
      0 0
      SZP0[ ]	/* SetZonePointer0 */
      SWAP[ ]	/* SwapTopStack */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      1
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      0
      MIAP[0]	/* MoveIndirectAbsPt */
      PUSHB[ ]	/* 3 values pushed */
      1 1 1
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      19
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 2 values pushed */
      0 2
      RCVT[ ]	/* ReadCVT */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      15
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      11
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      10
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      1
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 6 values pushed */
      17 17 1 0 14 0
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      ROLL[ ]	/* RollTopThreeStack */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 2 values pushed */
      18 6
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      137
      CALL[ ]	/* CallFunction */
      ELSE[ ]	/* Else */
      CLEAR[ ]	/* ClearStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      20
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      21
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      1 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      22
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      2 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      23
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      3 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      24
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      4 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      25
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      5 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      26
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      6 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      27
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      7 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      28
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      8 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      29
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      9 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      41
      FDEF[ ]	/* FunctionDefinition */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      16
      DIV[ ]	/* Divide */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      PUSHB[ ]	/* 1 value pushed */
      6
      ADD[ ]	/* Add */
      MPPEM[ ]	/* MeasurePixelPerEm */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      1
      DELTAP1[ ]	/* DeltaExceptionP1 */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      42
      FDEF[ ]	/* FunctionDefinition */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      16
      DIV[ ]	/* Divide */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      PUSHB[ ]	/* 1 value pushed */
      22
      ADD[ ]	/* Add */
      MPPEM[ ]	/* MeasurePixelPerEm */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      1
      DELTAP2[ ]	/* DeltaExceptionP2 */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      43
      FDEF[ ]	/* FunctionDefinition */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      16
      DIV[ ]	/* Divide */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      PUSHB[ ]	/* 1 value pushed */
      38
      ADD[ ]	/* Add */
      MPPEM[ ]	/* MeasurePixelPerEm */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      1
      DELTAP3[ ]	/* DeltaExceptionP3 */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      30
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      13
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 2
      RCVT[ ]	/* ReadCVT */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      15
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      11
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      10
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      1
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 6 values pushed */
      17 17 1 0 14 0
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      ROLL[ ]	/* RollTopThreeStack */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 2 values pushed */
      18 6
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      137
      CALL[ ]	/* CallFunction */
      ELSE[ ]	/* Else */
      CLEAR[ ]	/* ClearStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      31
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      32
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      1 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      33
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      2 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      34
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      3 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      35
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      4 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      36
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      5 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      37
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      6 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      38
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      7 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      39
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      8 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      40
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      9 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      44
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      45
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      17
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      RS[ ]	/* ReadStore */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      44
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      46
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      45
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      45
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      47
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      NEQ[ ]	/* NotEqual */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      48
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 2 values pushed */
      0 2
      RCVT[ ]	/* ReadCVT */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      1
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      47
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      5 1
      SZP2[ ]	/* SetZonePointer2 */
      RCVT[ ]	/* ReadCVT */
      IF[ ]	/* If */
      IUP[0]	/* InterpolateUntPts */
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      CLEAR[ ]	/* ClearStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      49
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      13
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 2
      RCVT[ ]	/* ReadCVT */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      1
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      47
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      5 1
      SZP2[ ]	/* SetZonePointer2 */
      RCVT[ ]	/* ReadCVT */
      IF[ ]	/* If */
      IUP[0]	/* InterpolateUntPts */
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      CLEAR[ ]	/* ClearStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      50
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      SHC[1]	/* ShiftContourByLastPt */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      51
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      1
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 5 values pushed */
      0 0 0 0 0
      WCVTP[ ]	/* WriteCVTInPixels */
      MIAP[0]	/* MoveIndirectAbsPt */
      SWAP[ ]	/* SwapTopStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      PUSHB[ ]	/* 2 values pushed */
      50 1
      SZP2[ ]	/* SetZonePointer2 */
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      52
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      53
      FDEF[ ]	/* FunctionDefinition */
      MDAP[0]	/* MoveDirectAbsPt */
      SLOOP[ ]	/* SetLoopVariable */
      ALIGNRP[ ]	/* AlignRelativePt */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      54
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      1
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      55
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      2 0
      SZPS[ ]	/* SetZonePointerS */
      CINDEX[ ]	/* CopyXToTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      0
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      MD[0]	/* MeasureDistance */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      IF[ ]	/* If */
      DIV[ ]	/* Divide */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      1
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 3 values pushed */
      54 1 1
      SZP2[ ]	/* SetZonePointer2 */
      SZP1[ ]	/* SetZonePointer1 */
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      56
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      16
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      9
      RS[ ]	/* ReadStore */
      CALL[ ]	/* CallFunction */
      NEG[ ]	/* Negate */
      ROLL[ ]	/* RollTopThreeStack */
      MDAP[0]	/* MoveDirectAbsPt */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      ROLL[ ]	/* RollTopThreeStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      57
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      16
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      9
      RS[ ]	/* ReadStore */
      CALL[ ]	/* CallFunction */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      96
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 4 values pushed */
      2 32 3 32
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 4 values pushed */
      2 38 3 26
      EIF[ ]	/* EndIf */
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      8
      RS[ ]	/* ReadStore */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SWAP[ ]	/* SwapTopStack */
      GC[0]	/* GetCoordOnPVector */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      4
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      ABS[ ]	/* Absolute */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      RS[ ]	/* ReadStore */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      2
      RS[ ]	/* ReadStore */
      SUB[ ]	/* Subtract */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      3
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      SUB[ ]	/* Subtract */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      GC[0]	/* GetCoordOnPVector */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ELSE[ ]	/* Else */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      8
      RS[ ]	/* ReadStore */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      8
      RS[ ]	/* ReadStore */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      5
      CINDEX[ ]	/* CopyXToTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      5
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      ADD[ ]	/* Add */
      ABS[ ]	/* Absolute */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      ADD[ ]	/* Add */
      ABS[ ]	/* Absolute */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      GC[0]	/* GetCoordOnPVector */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      58
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      16
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      5
      MINDEX[ ]	/* MoveXToTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SWAP[ ]	/* SwapTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      59
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      16
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      8
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      60
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      16
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      0
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      MDAP[0]	/* MoveDirectAbsPt */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      5
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      6
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      5
      CINDEX[ ]	/* CopyXToTopStack */
      MD[0]	/* MeasureDistance */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      SUB[ ]	/* Subtract */
      PUSHW[ ]	/* 2 values pushed */
      2048 2048
      MUL[ ]	/* Multiply */
      MUL[ ]	/* Multiply */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      IF[ ]	/* If */
      DIV[ ]	/* Divide */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      ROLL[ ]	/* RollTopThreeStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      61
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      16
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      8
      RS[ ]	/* ReadStore */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      32
      ADD[ ]	/* Add */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      ROLL[ ]	/* RollTopThreeStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      62
      FDEF[ ]	/* FunctionDefinition */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      16
      RS[ ]	/* ReadStore */
      IF[ ]	/* If */
      LT[ ]	/* LessThan */
      ELSE[ ]	/* Else */
      GT[ ]	/* GreaterThan */
      EIF[ ]	/* EndIf */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      EIF[ ]	/* EndIf */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      63
      FDEF[ ]	/* FunctionDefinition */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      16
      RS[ ]	/* ReadStore */
      IF[ ]	/* If */
      GT[ ]	/* GreaterThan */
      ELSE[ ]	/* Else */
      LT[ ]	/* LessThan */
      EIF[ ]	/* EndIf */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      EIF[ ]	/* EndIf */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      64
      FDEF[ ]	/* FunctionDefinition */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      16
      RS[ ]	/* ReadStore */
      IF[ ]	/* If */
      LT[ ]	/* LessThan */
      ELSE[ ]	/* Else */
      GT[ ]	/* GreaterThan */
      EIF[ ]	/* EndIf */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      16
      RS[ ]	/* ReadStore */
      IF[ ]	/* If */
      GT[ ]	/* GreaterThan */
      ELSE[ ]	/* Else */
      LT[ ]	/* LessThan */
      EIF[ ]	/* EndIf */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      EIF[ ]	/* EndIf */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      65
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      56
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      16
      RS[ ]	/* ReadStore */
      IF[ ]	/* If */
      LT[ ]	/* LessThan */
      ELSE[ ]	/* Else */
      GT[ ]	/* GreaterThan */
      EIF[ ]	/* EndIf */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      EIF[ ]	/* EndIf */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      66
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      57
      CALL[ ]	/* CallFunction */
      ROLL[ ]	/* RollTopThreeStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      PUSHB[ ]	/* 1 value pushed */
      4
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      ROLL[ ]	/* RollTopThreeStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      16
      RS[ ]	/* ReadStore */
      IF[ ]	/* If */
      LT[ ]	/* LessThan */
      ELSE[ ]	/* Else */
      GT[ ]	/* GreaterThan */
      EIF[ ]	/* EndIf */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      EIF[ ]	/* EndIf */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      4
      RS[ ]	/* ReadStore */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      46
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      67
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      9
      RS[ ]	/* ReadStore */
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      SWAP[ ]	/* SwapTopStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      68
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      8 4
      CINDEX[ ]	/* CopyXToTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      9
      RS[ ]	/* ReadStore */
      CALL[ ]	/* CallFunction */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      96
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 4 values pushed */
      2 32 3 32
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 4 values pushed */
      2 38 3 26
      EIF[ ]	/* EndIf */
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      4
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      ABS[ ]	/* Absolute */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      RS[ ]	/* ReadStore */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      2
      RS[ ]	/* ReadStore */
      SUB[ ]	/* Subtract */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      3
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      SWAP[ ]	/* SwapTopStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      69
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 56
      CALL[ ]	/* CallFunction */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      70
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 57
      CALL[ ]	/* CallFunction */
      POP[ ]	/* PopTopStack */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      PUSHB[ ]	/* 1 value pushed */
      4
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      SWAP[ ]	/* SwapTopStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      4
      RS[ ]	/* ReadStore */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      46
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      71
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZP2[ ]	/* SetZonePointer2 */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      0
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 3 values pushed */
      0 1 1
      SZP2[ ]	/* SetZonePointer2 */
      SZP1[ ]	/* SetZonePointer1 */
      SZP0[ ]	/* SetZonePointer0 */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      52
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      72
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZP2[ ]	/* SetZonePointer2 */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      0
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 3 values pushed */
      0 1 1
      SZP2[ ]	/* SetZonePointer2 */
      SZP1[ ]	/* SetZonePointer1 */
      SZP0[ ]	/* SetZonePointer0 */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      52
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      73
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 1
      SZP1[ ]	/* SetZonePointer1 */
      SZP0[ ]	/* SetZonePointer0 */
      PUSHB[ ]	/* 1 value pushed */
      53
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      74
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      55
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      75
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      RCVT[ ]	/* ReadCVT */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      76
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      8
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      75
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      77
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 0 68
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      78
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 1 68
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      79
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 0 68
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      80
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 1 68
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      81
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 0 69
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      82
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 1 69
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      83
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 0 69
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      84
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 1 69
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      85
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 4 values pushed */
      0 0 0 65
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      86
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 4 values pushed */
      0 1 0 65
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      87
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 4 values pushed */
      1 0 0 65
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      88
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 4 values pushed */
      1 1 0 65
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      89
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 4 values pushed */
      0 0 1 65
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      90
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 4 values pushed */
      0 1 1 65
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      91
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 4 values pushed */
      1 0 1 65
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      92
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 4 values pushed */
      1 1 1 65
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      93
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 0 67
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      94
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 1 67
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      95
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 0 67
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      96
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 1 67
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      97
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 0 70
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      98
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 1 70
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      99
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 0 70
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      100
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 1 70
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      101
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 4 values pushed */
      0 0 0 66
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      102
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 4 values pushed */
      0 1 0 66
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      103
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 4 values pushed */
      1 0 0 66
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      104
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 4 values pushed */
      1 1 0 66
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      105
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 4 values pushed */
      0 0 1 66
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      106
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 4 values pushed */
      0 1 1 66
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      107
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 4 values pushed */
      1 0 1 66
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      108
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 4 values pushed */
      1 1 1 66
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      109
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 58
      CALL[ ]	/* CallFunction */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      110
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 58
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      62
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      111
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 58
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      63
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      112
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 2 values pushed */
      0 58
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      64
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      113
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      1 58
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      62
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      114
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      1 58
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      63
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      115
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 2 values pushed */
      1 58
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      64
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      116
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 59
      CALL[ ]	/* CallFunction */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      117
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 59
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      62
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      118
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 59
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      63
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      119
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 59
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      64
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      120
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      1 59
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      62
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      121
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      1 59
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      63
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      122
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      1 59
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      64
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      123
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 60
      CALL[ ]	/* CallFunction */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      124
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 60
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      62
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      125
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 60
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      63
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      126
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 60
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      64
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      127
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      1 60
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      62
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      128
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      1 60
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      63
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      129
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      1 60
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      64
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      130
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 61
      CALL[ ]	/* CallFunction */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      131
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 61
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      62
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      132
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 61
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      63
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      133
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 61
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      64
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      134
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      1 61
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      62
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      135
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      1 61
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      63
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      136
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      1 61
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      64
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      137
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 4 values pushed */
      9 4 2 3
      RCVT[ ]	/* ReadCVT */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      WS[ ]	/* WriteStore */
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      8
      NEG[ ]	/* Negate */
      PUSHB[ ]	/* 1 value pushed */
      3
      DEPTH[ ]	/* GetDepthStack */
      LT[ ]	/* LessThan */
      JROT[ ]	/* JumpRelativeOnTrue */
      PUSHB[ ]	/* 2 values pushed */
      5 1
      SZP2[ ]	/* SetZonePointer2 */
      RCVT[ ]	/* ReadCVT */
      IF[ ]	/* If */
      IUP[0]	/* InterpolateUntPts */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
    </assembly>
  </fpgm>

  <prep>
    <assembly>
      SVTCA[0]	/* SetFPVectorToAxis */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHW[ ]	/* 1 value pushed */
      200
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      1 1
      INSTCTRL[ ]	/* SetInstrExecControl */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      1
      PUSHW[ ]	/* 2 values pushed */
      2048 2048
      MUL[ ]	/* Multiply */
      WCVTF[ ]	/* WriteCVTInFUnits */
      PUSHB[ ]	/* 2 values pushed */
      0 7
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 5 values pushed */
      71 51 31 3 0
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 7
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 8 values pushed */
      58 8 38 8 18 8 3 8
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 7
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 8 values pushed */
      68 6 48 6 28 6 3 8
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 10
      WS[ ]	/* WriteStore */
      PUSHW[ ]	/* 5 values pushed */
      3776 2496 1216 3 9
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 13
      WS[ ]	/* WriteStore */
      PUSHW[ ]	/* 5 values pushed */
      64 64 64 3 9
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      3 0
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 2 values pushed */
      36 1
      GETINFO[ ]	/* GetInfo */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      GETINFO[ ]	/* GetInfo */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      3 100
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 2 values pushed */
      38 1
      GETINFO[ ]	/* GetInfo */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      PUSHW[ ]	/* 3 values pushed */
      2176 1 1088
      GETINFO[ ]	/* GetInfo */
      MUL[ ]	/* Multiply */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      3 0
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 8 values pushed */
      60 8 40 8 20 8 3 12
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHW[ ]	/* 1 value pushed */
      511
      SCANCTRL[ ]	/* ScanConversionControl */
      PUSHB[ ]	/* 1 value pushed */
      4
      SCANTYPE[ ]	/* ScanType */
      PUSHB[ ]	/* 2 values pushed */
      2 0
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 4 values pushed */
      5 100 6 0
      WCVTP[ ]	/* WriteCVTInPixels */
      WCVTP[ ]	/* WriteCVTInPixels */
    </assembly>
  </prep>

  <cvt>
    <cv index="0" value="0"/>
    <cv index="1" value="0"/>
    <cv index="2" value="0"/>
    <cv index="3" value="0"/>
    <cv index="4" value="0"/>
    <cv index="5" value="0"/>
    <cv index="6" value="0"/>
    <cv index="7" value="0"/>
    <cv index="8" value="0"/>
    <cv index="9" value="0"/>
    <cv index="10" value="0"/>
    <cv index="11" value="0"/>
    <cv index="12" value="0"/>
    <cv index="13" value="0"/>
    <cv index="14" value="0"/>
    <cv index="15" value="0"/>
    <cv index="16" value="165"/>
    <cv index="17" value="165"/>
    <cv index="18" value="155"/>
    <cv index="19" value="155"/>
    <cv index="20" value="740"/>
    <cv index="21" value="0"/>
    <cv index="22" value="760"/>
    <cv index="23" value="506"/>
    <cv index="24" value="0"/>
    <cv index="25" value="-229"/>
    <cv index="26" value="970"/>
    <cv index="27" value="-230"/>
    <cv index="28" value="754"/>
    <cv index="29" value="-12"/>
    <cv index="30" value="761"/>
    <cv index="31" value="531"/>
    <cv index="32" value="-11"/>
    <cv index="33" value="-229"/>
    <cv index="34" value="970"/>
    <cv index="35" value="-230"/>
    <cv index="36" value="165"/>
    <cv index="37" value="165"/>
    <cv index="38" value="155"/>
    <cv index="39" value="155"/>
    <cv index="40" value="740"/>
    <cv index="41" value="0"/>
    <cv index="42" value="760"/>
    <cv index="43" value="506"/>
    <cv index="44" value="0"/>
    <cv index="45" value="-230"/>
    <cv index="46" value="970"/>
    <cv index="47" value="-230"/>
    <cv index="48" value="754"/>
    <cv index="49" value="-10"/>
    <cv index="50" value="761"/>
    <cv index="51" value="521"/>
    <cv index="52" value="-11"/>
    <cv index="53" value="-230"/>
    <cv index="54" value="970"/>
    <cv index="55" value="-230"/>
    <cv index="56" value="165"/>
    <cv index="57" value="165"/>
    <cv index="58" value="155"/>
    <cv index="59" value="155"/>
    <cv index="60" value="740"/>
    <cv index="61" value="410"/>
    <cv index="62" value="760"/>
    <cv index="63" value="506"/>
    <cv index="64" value="0"/>
    <cv index="65" value="-229"/>
    <cv index="66" value="970"/>
    <cv index="67" value="-230"/>
    <cv index="68" value="754"/>
    <cv index="69" value="-6"/>
    <cv index="70" value="761"/>
    <cv index="71" value="531"/>
    <cv index="72" value="-11"/>
    <cv index="73" value="-229"/>
    <cv index="74" value="970"/>
    <cv index="75" value="-230"/>
  </cvt>

  <loca>
    <!-- The 'loca' table will be calculated by the compiler -->
  </loca>

  <glyf>

    <!-- The xMin, yMin, xMax and yMax values
         will be recalculated by the compiler. -->

    <TTGlyph name=".notdef" xMin="50" yMin="0" xMax="507" yMax="740">
      <contour>
        <pt x="50" y="740" on="1"/>
        <pt x="507" y="740" on="1"/>
        <pt x="507" y="0" on="1"/>
        <pt x="50" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="100" y="50" on="1"/>
        <pt x="457" y="50" on="1"/>
        <pt x="457" y="690" on="1"/>
        <pt x="100" y="690" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          6 4 2 0 2 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="A" xMin="17" yMin="0" xMax="706" yMax="740">
      <contour>
        <pt x="412" y="152" on="1"/>
        <pt x="489" y="152" on="1"/>
        <pt x="465" y="236" on="1"/>
        <pt x="257" y="236" on="1"/>
        <pt x="233" y="152" on="1"/>
        <pt x="312" y="152" on="1"/>
        <pt x="312" y="0" on="1"/>
        <pt x="17" y="0" on="1"/>
        <pt x="17" y="152" on="1"/>
        <pt x="68" y="152" on="1"/>
        <pt x="259" y="740" on="1"/>
        <pt x="474" y="740" on="1"/>
        <pt x="659" y="152" on="1"/>
        <pt x="706" y="152" on="1"/>
        <pt x="706" y="0" on="1"/>
        <pt x="412" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="301" y="376" on="1"/>
        <pt x="421" y="376" on="1"/>
        <pt x="360" y="585" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 46 values pushed */
          18 1 8 5 1 74 0 8 0 1 0 8 1 102 0 5 5 20 75 6 4 2 3 0 0
          3 93 7 1 3 3 21 3 76 17 17 17 17 17 17 17 17 16 9 7 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="AE" xMin="-23" yMin="0" xMax="1022" yMax="740">
      <contour>
        <pt x="43" y="152" on="1"/>
        <pt x="297" y="544" on="0"/>
        <pt x="425" y="740" on="1"/>
        <pt x="1022" y="740" on="1"/>
        <pt x="1022" y="473" on="1"/>
        <pt x="842" y="473" on="1"/>
        <pt x="842" y="570" on="1"/>
        <pt x="678" y="570" on="1"/>
        <pt x="678" y="452" on="1"/>
        <pt x="804" y="452" on="1"/>
        <pt x="804" y="300" on="1"/>
        <pt x="678" y="300" on="1"/>
        <pt x="678" y="152" on="1"/>
        <pt x="842" y="152" on="1"/>
        <pt x="842" y="285" on="1"/>
        <pt x="1022" y="285" on="1"/>
        <pt x="1022" y="0" on="1"/>
        <pt x="434" y="0" on="1"/>
        <pt x="434" y="152" on="1"/>
        <pt x="492" y="152" on="1"/>
        <pt x="492" y="198" on="1"/>
        <pt x="254" y="198" on="1"/>
        <pt x="239" y="175" on="1"/>
        <pt x="228" y="157" on="0"/>
        <pt x="224" y="152" on="1"/>
        <pt x="273" y="152" on="1"/>
        <pt x="273" y="0" on="1"/>
        <pt x="-23" y="0" on="1"/>
        <pt x="-23" y="152" on="1"/>
      </contour>
      <contour>
        <pt x="492" y="607" on="1"/>
        <pt x="481" y="576" on="1"/>
        <pt x="429" y="490" on="1"/>
        <pt x="345" y="350" on="1"/>
        <pt x="492" y="350" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          29 1 2 0 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 57 values pushed */
          0 1 2 3 2 1 112 0 6 4 9 4 6 9 126 0 3 0 4 6 3 4 101 0 13
          0 9 5 13 9 101 0 2 2 0 93 0 0 0 20 75 14 12 10 8 4 5 5 7 94
          11 1 7 7 21 7 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 58 values pushed */
          0 1 2 3 2 1 3 126 0 6 4 9 4 6 9 126 0 3 0 4 6 3 4 101 0
          13 0 9 5 13 9 101 0 2 2 0 93 0 0 0 20 75 14 12 10 8 4 5 5 7
          94 11 1 7 7 21 7 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 26 values pushed */
          0 0 33 32 0 28 0 28 27 26 25 24 21 20 17 17 17 17 17 17 17 17 18 15 7
          29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Aacute" xMin="17" yMin="0" xMax="706" yMax="963">
      <contour>
        <pt x="420" y="963" on="1"/>
        <pt x="594" y="963" on="1"/>
        <pt x="594" y="950" on="1"/>
        <pt x="444" y="809" on="1"/>
        <pt x="314" y="809" on="1"/>
      </contour>
      <contour>
        <pt x="412" y="152" on="1"/>
        <pt x="489" y="152" on="1"/>
        <pt x="465" y="236" on="1"/>
        <pt x="257" y="236" on="1"/>
        <pt x="233" y="152" on="1"/>
        <pt x="312" y="152" on="1"/>
        <pt x="312" y="0" on="1"/>
        <pt x="17" y="0" on="1"/>
        <pt x="17" y="152" on="1"/>
        <pt x="68" y="152" on="1"/>
        <pt x="259" y="740" on="1"/>
        <pt x="474" y="740" on="1"/>
        <pt x="659" y="152" on="1"/>
        <pt x="706" y="152" on="1"/>
        <pt x="706" y="0" on="1"/>
        <pt x="412" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="301" y="376" on="1"/>
        <pt x="421" y="376" on="1"/>
        <pt x="360" y="585" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 62 values pushed */
          2 1 1 0 23 1 10 7 2 74 0 0 0 1 7 0 1 101 0 10 0 3 2 10 3
          102 0 7 7 20 75 8 6 4 3 2 2 5 93 9 1 5 5 21 5 76 22 21 20 19
          17 17 17 17 17 17 17 18 16 11 7 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Acircumflex" xMin="17" yMin="0" xMax="706" yMax="969">
      <contour>
        <pt x="306" y="808" on="1"/>
        <pt x="378" y="883" on="1"/>
        <pt x="453" y="808" on="1"/>
        <pt x="590" y="808" on="1"/>
        <pt x="452" y="969" on="1"/>
        <pt x="304" y="969" on="1"/>
        <pt x="167" y="808" on="1"/>
      </contour>
      <contour>
        <pt x="412" y="152" on="1"/>
        <pt x="489" y="152" on="1"/>
        <pt x="465" y="236" on="1"/>
        <pt x="257" y="236" on="1"/>
        <pt x="233" y="152" on="1"/>
        <pt x="312" y="152" on="1"/>
        <pt x="312" y="0" on="1"/>
        <pt x="17" y="0" on="1"/>
        <pt x="17" y="152" on="1"/>
        <pt x="68" y="152" on="1"/>
        <pt x="259" y="740" on="1"/>
        <pt x="474" y="740" on="1"/>
        <pt x="659" y="152" on="1"/>
        <pt x="706" y="152" on="1"/>
        <pt x="706" y="0" on="1"/>
        <pt x="412" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="301" y="376" on="1"/>
        <pt x="421" y="376" on="1"/>
        <pt x="360" y="585" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 79 values pushed */
          1 1 0 1 25 1 11 8 2 74 0 1 0 1 131 12 2 2 0 8 0 131 0 11 0
          4 3 11 4 102 0 8 8 20 75 9 7 5 3 3 3 6 93 10 1 6 6 21 6 76
          0 0 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 0 6 0 6 17
          18 13 7 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Adieresis" xMin="17" yMin="0" xMax="706" yMax="982">
      <contour>
        <pt x="147" y="926" on="0"/>
        <pt x="202" y="982" on="0"/>
        <pt x="242" y="982" on="1"/>
        <pt x="281" y="982" on="0"/>
        <pt x="336" y="926" on="0"/>
        <pt x="336" y="886" on="1"/>
        <pt x="336" y="847" on="0"/>
        <pt x="281" y="791" on="0"/>
        <pt x="242" y="791" on="1"/>
        <pt x="202" y="791" on="0"/>
        <pt x="147" y="847" on="0"/>
        <pt x="147" y="886" on="1"/>
      </contour>
      <contour>
        <pt x="384" y="926" on="0"/>
        <pt x="439" y="982" on="0"/>
        <pt x="479" y="982" on="1"/>
        <pt x="518" y="982" on="0"/>
        <pt x="573" y="926" on="0"/>
        <pt x="573" y="886" on="1"/>
        <pt x="573" y="847" on="0"/>
        <pt x="518" y="791" on="0"/>
        <pt x="479" y="791" on="1"/>
        <pt x="439" y="791" on="0"/>
        <pt x="384" y="847" on="0"/>
        <pt x="384" y="886" on="1"/>
      </contour>
      <contour>
        <pt x="412" y="152" on="1"/>
        <pt x="489" y="152" on="1"/>
        <pt x="465" y="236" on="1"/>
        <pt x="257" y="236" on="1"/>
        <pt x="233" y="152" on="1"/>
        <pt x="312" y="152" on="1"/>
        <pt x="312" y="0" on="1"/>
        <pt x="17" y="0" on="1"/>
        <pt x="17" y="152" on="1"/>
        <pt x="68" y="152" on="1"/>
        <pt x="259" y="740" on="1"/>
        <pt x="474" y="740" on="1"/>
        <pt x="659" y="152" on="1"/>
        <pt x="706" y="152" on="1"/>
        <pt x="706" y="0" on="1"/>
        <pt x="412" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="301" y="376" on="1"/>
        <pt x="421" y="376" on="1"/>
        <pt x="360" y="585" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 64 values pushed */
          42 1 12 9 1 74 2 1 0 3 1 1 9 0 1 103 0 12 0 5 4 12 5 102 0
          9 9 20 75 10 8 6 3 4 4 7 93 11 1 7 7 21 7 76 41 40 39 38 37 36
          35 34 17 17 17 17 19 36 36 36 33 13 7 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Agrave" xMin="17" yMin="0" xMax="706" yMax="963">
      <contour>
        <pt x="443" y="809" on="1"/>
        <pt x="345" y="963" on="1"/>
        <pt x="172" y="963" on="1"/>
        <pt x="172" y="950" on="1"/>
        <pt x="316" y="809" on="1"/>
      </contour>
      <contour>
        <pt x="412" y="152" on="1"/>
        <pt x="489" y="152" on="1"/>
        <pt x="465" y="236" on="1"/>
        <pt x="257" y="236" on="1"/>
        <pt x="233" y="152" on="1"/>
        <pt x="312" y="152" on="1"/>
        <pt x="312" y="0" on="1"/>
        <pt x="17" y="0" on="1"/>
        <pt x="17" y="152" on="1"/>
        <pt x="68" y="152" on="1"/>
        <pt x="259" y="740" on="1"/>
        <pt x="474" y="740" on="1"/>
        <pt x="659" y="152" on="1"/>
        <pt x="706" y="152" on="1"/>
        <pt x="706" y="0" on="1"/>
        <pt x="412" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="301" y="376" on="1"/>
        <pt x="421" y="376" on="1"/>
        <pt x="360" y="585" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 77 values pushed */
          3 1 1 0 23 1 10 7 2 74 0 0 1 0 131 11 1 1 7 1 131 0 10 0 3
          2 10 3 102 0 7 7 20 75 8 6 4 3 2 2 5 93 9 1 5 5 21 5 76 0
          0 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 0 4 0 4 17 12
          7 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Aring" xMin="17" yMin="0" xMax="706" yMax="1003">
      <contour>
        <pt x="706" y="152" on="1"/>
        <pt x="706" y="0" on="1"/>
        <pt x="412" y="0" on="1"/>
        <pt x="412" y="152" on="1"/>
        <pt x="489" y="152" on="1"/>
        <pt x="465" y="236" on="1"/>
        <pt x="257" y="236" on="1"/>
        <pt x="233" y="152" on="1"/>
        <pt x="312" y="152" on="1"/>
        <pt x="312" y="0" on="1"/>
        <pt x="17" y="0" on="1"/>
        <pt x="17" y="152" on="1"/>
        <pt x="68" y="152" on="1"/>
        <pt x="250" y="713" on="1"/>
        <pt x="224" y="737" on="0"/>
        <pt x="195" y="801" on="0"/>
        <pt x="195" y="837" on="1"/>
        <pt x="195" y="882" on="0"/>
        <pt x="239" y="958" on="0"/>
        <pt x="315" y="1003" on="0"/>
        <pt x="360" y="1003" on="1"/>
        <pt x="405" y="1003" on="0"/>
        <pt x="481" y="958" on="0"/>
        <pt x="526" y="882" on="0"/>
        <pt x="526" y="837" on="1"/>
        <pt x="526" y="805" on="0"/>
        <pt x="502" y="745" on="0"/>
        <pt x="480" y="722" on="1"/>
        <pt x="659" y="152" on="1"/>
      </contour>
      <contour>
        <pt x="333" y="900" on="0"/>
        <pt x="296" y="864" on="0"/>
        <pt x="296" y="837" on="1"/>
        <pt x="296" y="809" on="0"/>
        <pt x="333" y="772" on="0"/>
        <pt x="360" y="772" on="1"/>
        <pt x="388" y="772" on="0"/>
        <pt x="424" y="809" on="0"/>
        <pt x="424" y="837" on="1"/>
        <pt x="424" y="864" on="0"/>
        <pt x="388" y="900" on="0"/>
        <pt x="360" y="900" on="1"/>
      </contour>
      <contour>
        <pt x="301" y="376" on="1"/>
        <pt x="421" y="376" on="1"/>
        <pt x="360" y="585" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 8 values pushed */
          43 27 13 3 10 8 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          10
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 38 values pushed */
          0 6 12 1 9 8 6 9 103 0 10 0 2 1 10 2 102 0 8 8 22 75 11 7 5
          3 4 1 1 0 93 4 1 0 0 21 0 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          45
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 38 values pushed */
          0 6 12 1 9 8 6 9 103 0 10 0 2 1 10 2 102 0 8 8 30 75 11 7 5
          3 4 1 1 0 93 4 1 0 0 21 0 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 41 values pushed */
          0 8 9 10 9 8 10 126 0 6 12 1 9 8 6 9 103 0 10 0 2 1 10 2 102
          11 7 5 3 4 1 1 0 93 4 1 0 0 21 0 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 26 values pushed */
          29 29 0 0 42 41 29 40 29 39 35 33 0 28 0 28 39 17 17 17 17 17 17 13 7
          27
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Atilde" xMin="17" yMin="0" xMax="706" yMax="967">
      <contour>
        <pt x="287" y="967" on="0"/>
        <pt x="320" y="956" on="0"/>
        <pt x="350" y="944" on="1"/>
        <pt x="377" y="933" on="0"/>
        <pt x="405" y="924" on="0"/>
        <pt x="419" y="924" on="1"/>
        <pt x="443" y="924" on="0"/>
        <pt x="477" y="938" on="0"/>
        <pt x="492" y="955" on="1"/>
        <pt x="576" y="915" on="1"/>
        <pt x="558" y="868" on="0"/>
        <pt x="478" y="804" on="0"/>
        <pt x="432" y="804" on="1"/>
        <pt x="408" y="804" on="0"/>
        <pt x="367" y="815" on="0"/>
        <pt x="341" y="826" on="1"/>
        <pt x="295" y="845" on="0"/>
        <pt x="267" y="845" on="1"/>
        <pt x="249" y="845" on="0"/>
        <pt x="223" y="832" on="0"/>
        <pt x="205" y="818" on="0"/>
        <pt x="202" y="816" on="1"/>
        <pt x="120" y="853" on="1"/>
        <pt x="129" y="887" on="0"/>
        <pt x="182" y="939" on="0"/>
        <pt x="246" y="967" on="0"/>
        <pt x="270" y="967" on="1"/>
      </contour>
      <contour>
        <pt x="412" y="152" on="1"/>
        <pt x="489" y="152" on="1"/>
        <pt x="465" y="236" on="1"/>
        <pt x="257" y="236" on="1"/>
        <pt x="233" y="152" on="1"/>
        <pt x="312" y="152" on="1"/>
        <pt x="312" y="0" on="1"/>
        <pt x="17" y="0" on="1"/>
        <pt x="17" y="152" on="1"/>
        <pt x="68" y="152" on="1"/>
        <pt x="259" y="740" on="1"/>
        <pt x="474" y="740" on="1"/>
        <pt x="659" y="152" on="1"/>
        <pt x="706" y="152" on="1"/>
        <pt x="706" y="0" on="1"/>
        <pt x="412" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="301" y="376" on="1"/>
        <pt x="421" y="376" on="1"/>
        <pt x="360" y="585" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 90 values pushed */
          8 1 0 3 22 9 2 2 0 45 1 12 9 3 74 13 1 3 0 2 1 3 2 103 0
          0 0 1 9 0 1 103 0 12 0 5 4 12 5 102 0 9 9 20 75 10 8 6 3 4
          4 7 93 11 1 7 7 21 7 76 0 0 44 43 42 41 40 39 38 37 36 35 34 33 32
          31 30 29 28 27 0 26 0 25 35 37 36 14 7 23
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="B" xMin="50" yMin="0" xMax="666" yMax="741">
      <contour>
        <pt x="133" y="152" on="1"/>
        <pt x="133" y="588" on="1"/>
        <pt x="50" y="588" on="1"/>
        <pt x="50" y="741" on="1"/>
        <pt x="426" y="740" on="1"/>
        <pt x="494" y="740" on="0"/>
        <pt x="599" y="678" on="0"/>
        <pt x="658" y="574" on="0"/>
        <pt x="658" y="513" on="1"/>
        <pt x="658" y="459" on="0"/>
        <pt x="627" y="390" on="0"/>
        <pt x="596" y="370" on="1"/>
        <pt x="631" y="346" on="0"/>
        <pt x="666" y="280" on="0"/>
        <pt x="666" y="232" on="1"/>
        <pt x="666" y="164" on="0"/>
        <pt x="606" y="59" on="0"/>
        <pt x="503" y="0" on="0"/>
        <pt x="439" y="0" on="1"/>
        <pt x="50" y="0" on="1"/>
        <pt x="50" y="152" on="1"/>
      </contour>
      <contour>
        <pt x="318" y="449" on="1"/>
        <pt x="416" y="449" on="1"/>
        <pt x="437" y="449" on="0"/>
        <pt x="467" y="492" on="0"/>
        <pt x="467" y="519" on="1"/>
        <pt x="467" y="543" on="0"/>
        <pt x="436" y="588" on="0"/>
        <pt x="416" y="588" on="1"/>
        <pt x="318" y="588" on="1"/>
      </contour>
      <contour>
        <pt x="318" y="152" on="1"/>
        <pt x="424" y="152" on="1"/>
        <pt x="445" y="152" on="0"/>
        <pt x="476" y="194" on="0"/>
        <pt x="476" y="222" on="1"/>
        <pt x="476" y="255" on="0"/>
        <pt x="445" y="298" on="0"/>
        <pt x="424" y="298" on="1"/>
        <pt x="318" y="298" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 58 values pushed */
          11 1 7 4 1 74 0 4 0 7 3 4 7 101 5 1 0 0 1 93 0 1 1 20 75
          6 8 2 3 3 2 93 0 2 2 21 2 76 0 0 38 36 32 30 29 27 23 21 0 20
          0 20 44 33 17 9 7 23
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="C" xMin="32" yMin="-13" xMax="712" yMax="754">
      <contour>
        <pt x="504" y="533" on="0"/>
        <pt x="432" y="579" on="0"/>
        <pt x="392" y="579" on="1"/>
        <pt x="346" y="579" on="0"/>
        <pt x="268" y="523" on="0"/>
        <pt x="222" y="427" on="0"/>
        <pt x="222" y="371" on="1"/>
        <pt x="222" y="314" on="0"/>
        <pt x="267" y="219" on="0"/>
        <pt x="344" y="163" on="0"/>
        <pt x="392" y="163" on="1"/>
        <pt x="423" y="163" on="0"/>
        <pt x="481" y="193" on="0"/>
        <pt x="522" y="237" on="0"/>
        <pt x="530" y="259" on="1"/>
        <pt x="712" y="213" on="1"/>
        <pt x="695" y="149" on="0"/>
        <pt x="605" y="46" on="0"/>
        <pt x="471" y="-13" on="0"/>
        <pt x="392" y="-13" on="1"/>
        <pt x="295" y="-13" on="0"/>
        <pt x="129" y="89" on="0"/>
        <pt x="32" y="266" on="0"/>
        <pt x="32" y="371" on="1"/>
        <pt x="32" y="476" on="0"/>
        <pt x="129" y="651" on="0"/>
        <pt x="294" y="754" on="0"/>
        <pt x="392" y="754" on="1"/>
        <pt x="502" y="754" on="0"/>
        <pt x="560" y="697" on="1"/>
        <pt x="688" y="697" on="1"/>
        <pt x="688" y="504" on="1"/>
        <pt x="521" y="504" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 45 values pushed */
          15 14 2 1 5 1 74 0 4 0 5 1 4 5 101 0 0 0 3 95 0 3 3 28 75
          0 1 1 2 95 0 2 2 29 2 76 17 17 38 39 38 33 6 7 26
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Ccaron" xMin="32" yMin="-13" xMax="712" yMax="947">
      <component glyphName="C" x="0" y="0" flags="0x0"/>
      <component glyphName="caron" x="158" y="234" flags="0x4"/>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          1 1
          PUSHB[ ]	/* 1 value pushed */
          234
          PUSHB[ ]	/* 1 value pushed */
          51
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Ccedilla" xMin="32" yMin="-226" xMax="712" yMax="754">
      <component glyphName="C" x="0" y="0" flags="0x0"/>
      <component glyphName="cedilla" x="137" y="0" flags="0x0"/>
    </TTGlyph>

    <TTGlyph name="D" xMin="29" yMin="0" xMax="680" yMax="740">
      <contour>
        <pt x="314" y="740" on="1"/>
        <pt x="414" y="740" on="0"/>
        <pt x="582" y="641" on="0"/>
        <pt x="680" y="472" on="0"/>
        <pt x="680" y="371" on="1"/>
        <pt x="680" y="270" on="0"/>
        <pt x="582" y="100" on="0"/>
        <pt x="414" y="0" on="0"/>
        <pt x="314" y="0" on="1"/>
        <pt x="29" y="0" on="1"/>
        <pt x="29" y="152" on="1"/>
        <pt x="82" y="152" on="1"/>
        <pt x="82" y="588" on="1"/>
        <pt x="29" y="588" on="1"/>
        <pt x="29" y="740" on="1"/>
      </contour>
      <contour>
        <pt x="268" y="152" on="1"/>
        <pt x="311" y="152" on="1"/>
        <pt x="358" y="152" on="0"/>
        <pt x="437" y="211" on="0"/>
        <pt x="483" y="311" on="0"/>
        <pt x="483" y="371" on="1"/>
        <pt x="483" y="431" on="0"/>
        <pt x="437" y="530" on="0"/>
        <pt x="358" y="588" on="0"/>
        <pt x="311" y="588" on="1"/>
        <pt x="268" y="588" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 43 values pushed */
          5 1 3 3 0 93 6 1 0 0 20 75 4 1 2 2 1 93 0 1 1 21 1 76 1
          0 25 23 17 15 13 12 11 10 9 7 0 14 1 14 7 7 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="E" xMin="50" yMin="0" xMax="660" yMax="740">
      <contour>
        <pt x="50" y="740" on="1"/>
        <pt x="660" y="740" on="1"/>
        <pt x="660" y="473" on="1"/>
        <pt x="480" y="473" on="1"/>
        <pt x="480" y="570" on="1"/>
        <pt x="316" y="570" on="1"/>
        <pt x="316" y="457" on="1"/>
        <pt x="436" y="457" on="1"/>
        <pt x="436" y="294" on="1"/>
        <pt x="316" y="294" on="1"/>
        <pt x="316" y="152" on="1"/>
        <pt x="480" y="152" on="1"/>
        <pt x="480" y="285" on="1"/>
        <pt x="660" y="285" on="1"/>
        <pt x="660" y="0" on="1"/>
        <pt x="50" y="0" on="1"/>
        <pt x="50" y="152" on="1"/>
        <pt x="130" y="152" on="1"/>
        <pt x="130" y="570" on="1"/>
        <pt x="50" y="570" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 46 values pushed */
          0 1 2 3 2 1 112 0 6 4 5 4 6 5 126 0 3 0 4 6 3 4 101 9 1
          2 2 0 93 0 0 0 20 75 8 1 5 5 7 94 0 7 7 21 7 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 47 values pushed */
          0 1 2 3 2 1 3 126 0 6 4 5 4 6 5 126 0 3 0 4 6 3 4 101 9
          1 2 2 0 93 0 0 0 20 75 8 1 5 5 7 94 0 7 7 21 7 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          19 18 17 17 17 17 17 17 17 17 16 10 7 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Eacute" xMin="53" yMin="0" xMax="663" yMax="963">
      <contour>
        <pt x="430" y="963" on="1"/>
        <pt x="604" y="963" on="1"/>
        <pt x="604" y="950" on="1"/>
        <pt x="454" y="809" on="1"/>
        <pt x="324" y="809" on="1"/>
      </contour>
      <contour>
        <pt x="53" y="740" on="1"/>
        <pt x="663" y="740" on="1"/>
        <pt x="663" y="473" on="1"/>
        <pt x="483" y="473" on="1"/>
        <pt x="483" y="570" on="1"/>
        <pt x="319" y="570" on="1"/>
        <pt x="319" y="457" on="1"/>
        <pt x="440" y="457" on="1"/>
        <pt x="440" y="294" on="1"/>
        <pt x="319" y="294" on="1"/>
        <pt x="319" y="152" on="1"/>
        <pt x="483" y="152" on="1"/>
        <pt x="483" y="285" on="1"/>
        <pt x="663" y="285" on="1"/>
        <pt x="663" y="0" on="1"/>
        <pt x="53" y="0" on="1"/>
        <pt x="53" y="152" on="1"/>
        <pt x="134" y="152" on="1"/>
        <pt x="134" y="570" on="1"/>
        <pt x="53" y="570" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          2 1 1 0 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 54 values pushed */
          0 3 4 5 4 3 112 0 8 6 7 6 8 7 126 0 0 0 1 2 0 1 101 0 5
          0 6 8 5 6 101 11 1 4 4 2 93 0 2 2 20 75 10 1 7 7 9 94 0 9
          9 21 9 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 55 values pushed */
          0 3 4 5 4 3 5 126 0 8 6 7 6 8 7 126 0 0 0 1 2 0 1 101 0
          5 0 6 8 5 6 101 11 1 4 4 2 93 0 2 2 20 75 10 1 7 7 9 94 0
          9 9 21 9 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 18 values pushed */
          24 23 22 21 20 19 17 17 17 17 17 17 17 18 16 12 7 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Ecircumflex" xMin="53" yMin="0" xMax="663" yMax="969">
      <contour>
        <pt x="316" y="808" on="1"/>
        <pt x="388" y="883" on="1"/>
        <pt x="463" y="808" on="1"/>
        <pt x="600" y="808" on="1"/>
        <pt x="462" y="969" on="1"/>
        <pt x="314" y="969" on="1"/>
        <pt x="177" y="808" on="1"/>
      </contour>
      <contour>
        <pt x="53" y="740" on="1"/>
        <pt x="663" y="740" on="1"/>
        <pt x="663" y="473" on="1"/>
        <pt x="483" y="473" on="1"/>
        <pt x="483" y="570" on="1"/>
        <pt x="319" y="570" on="1"/>
        <pt x="319" y="457" on="1"/>
        <pt x="440" y="457" on="1"/>
        <pt x="440" y="294" on="1"/>
        <pt x="319" y="294" on="1"/>
        <pt x="319" y="152" on="1"/>
        <pt x="483" y="152" on="1"/>
        <pt x="483" y="285" on="1"/>
        <pt x="663" y="285" on="1"/>
        <pt x="663" y="0" on="1"/>
        <pt x="53" y="0" on="1"/>
        <pt x="53" y="152" on="1"/>
        <pt x="134" y="152" on="1"/>
        <pt x="134" y="570" on="1"/>
        <pt x="53" y="570" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          1 1 0 1 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 59 values pushed */
          0 1 0 1 131 13 2 2 0 3 3 0 110 0 4 5 6 5 4 112 0 9 7 8 7
          9 8 126 0 6 0 7 9 6 7 101 12 1 5 5 3 93 0 3 3 20 75 11 1 8
          8 10 94 0 10 10 21 10 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          18
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 60 values pushed */
          0 1 0 1 131 13 2 2 0 3 3 0 110 0 4 5 6 5 4 6 126 0 9 7 8
          7 9 8 126 0 6 0 7 9 6 7 101 12 1 5 5 3 93 0 3 3 20 75 11 1
          8 8 10 94 0 10 10 21 10 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 59 values pushed */
          0 1 0 1 131 13 2 2 0 3 0 131 0 4 5 6 5 4 6 126 0 9 7 8 7
          9 8 126 0 6 0 7 9 6 7 101 12 1 5 5 3 93 0 3 3 20 75 11 1 8
          8 10 94 0 10 10 21 10 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 31 values pushed */
          0 0 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 0 6 0
          6 17 18 14 7 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Edieresis" xMin="53" yMin="0" xMax="663" yMax="982">
      <contour>
        <pt x="157" y="926" on="0"/>
        <pt x="212" y="982" on="0"/>
        <pt x="252" y="982" on="1"/>
        <pt x="291" y="982" on="0"/>
        <pt x="346" y="926" on="0"/>
        <pt x="346" y="886" on="1"/>
        <pt x="346" y="847" on="0"/>
        <pt x="291" y="791" on="0"/>
        <pt x="252" y="791" on="1"/>
        <pt x="212" y="791" on="0"/>
        <pt x="157" y="847" on="0"/>
        <pt x="157" y="886" on="1"/>
      </contour>
      <contour>
        <pt x="395" y="926" on="0"/>
        <pt x="450" y="982" on="0"/>
        <pt x="490" y="982" on="1"/>
        <pt x="529" y="982" on="0"/>
        <pt x="584" y="926" on="0"/>
        <pt x="584" y="886" on="1"/>
        <pt x="584" y="847" on="0"/>
        <pt x="529" y="791" on="0"/>
        <pt x="490" y="791" on="1"/>
        <pt x="450" y="791" on="0"/>
        <pt x="395" y="847" on="0"/>
        <pt x="395" y="886" on="1"/>
      </contour>
      <contour>
        <pt x="53" y="740" on="1"/>
        <pt x="663" y="740" on="1"/>
        <pt x="663" y="473" on="1"/>
        <pt x="483" y="473" on="1"/>
        <pt x="483" y="570" on="1"/>
        <pt x="319" y="570" on="1"/>
        <pt x="319" y="457" on="1"/>
        <pt x="440" y="457" on="1"/>
        <pt x="440" y="294" on="1"/>
        <pt x="319" y="294" on="1"/>
        <pt x="319" y="152" on="1"/>
        <pt x="483" y="152" on="1"/>
        <pt x="483" y="285" on="1"/>
        <pt x="663" y="285" on="1"/>
        <pt x="663" y="0" on="1"/>
        <pt x="53" y="0" on="1"/>
        <pt x="53" y="152" on="1"/>
        <pt x="134" y="152" on="1"/>
        <pt x="134" y="570" on="1"/>
        <pt x="53" y="570" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 56 values pushed */
          0 5 6 7 6 5 112 0 10 8 9 8 10 9 126 2 1 0 3 1 1 4 0 1 103
          0 7 0 8 10 7 8 101 13 1 6 6 4 93 0 4 4 20 75 12 1 9 9 11 94
          0 11 11 21 11 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 57 values pushed */
          0 5 6 7 6 5 7 126 0 10 8 9 8 10 9 126 2 1 0 3 1 1 4 0 1
          103 0 7 0 8 10 7 8 101 13 1 6 6 4 93 0 4 4 20 75 12 1 9 9 11
          94 0 11 11 21 11 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 22 values pushed */
          43 42 41 40 39 38 37 36 35 34 17 17 17 17 19 36 36 36 33 14 7 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Egrave" xMin="53" yMin="0" xMax="663" yMax="963">
      <contour>
        <pt x="453" y="809" on="1"/>
        <pt x="355" y="963" on="1"/>
        <pt x="182" y="963" on="1"/>
        <pt x="182" y="950" on="1"/>
        <pt x="326" y="809" on="1"/>
      </contour>
      <contour>
        <pt x="53" y="740" on="1"/>
        <pt x="663" y="740" on="1"/>
        <pt x="663" y="473" on="1"/>
        <pt x="483" y="473" on="1"/>
        <pt x="483" y="570" on="1"/>
        <pt x="319" y="570" on="1"/>
        <pt x="319" y="457" on="1"/>
        <pt x="440" y="457" on="1"/>
        <pt x="440" y="294" on="1"/>
        <pt x="319" y="294" on="1"/>
        <pt x="319" y="152" on="1"/>
        <pt x="483" y="152" on="1"/>
        <pt x="483" y="285" on="1"/>
        <pt x="663" y="285" on="1"/>
        <pt x="663" y="0" on="1"/>
        <pt x="53" y="0" on="1"/>
        <pt x="53" y="152" on="1"/>
        <pt x="134" y="152" on="1"/>
        <pt x="134" y="570" on="1"/>
        <pt x="53" y="570" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          3 1 1 0 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 58 values pushed */
          0 0 1 0 131 12 1 1 2 2 1 110 0 3 4 5 4 3 112 0 8 6 7 6 8
          7 126 0 5 0 6 8 5 6 101 11 1 4 4 2 93 0 2 2 20 75 10 1 7 7
          9 94 0 9 9 21 9 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          18
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 59 values pushed */
          0 0 1 0 131 12 1 1 2 2 1 110 0 3 4 5 4 3 5 126 0 8 6 7 6
          8 7 126 0 5 0 6 8 5 6 101 11 1 4 4 2 93 0 2 2 20 75 10 1 7
          7 9 94 0 9 9 21 9 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 58 values pushed */
          0 0 1 0 131 12 1 1 2 1 131 0 3 4 5 4 3 5 126 0 8 6 7 6 8
          7 126 0 5 0 6 8 5 6 101 11 1 4 4 2 93 0 2 2 20 75 10 1 7 7
          9 94 0 9 9 21 9 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 30 values pushed */
          0 0 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 0 4 0
          4 17 13 7 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Eth" xMin="21" yMin="0" xMax="681" yMax="740">
      <contour>
        <pt x="415" y="740" on="0"/>
        <pt x="583" y="641" on="0"/>
        <pt x="681" y="472" on="0"/>
        <pt x="681" y="371" on="1"/>
        <pt x="681" y="270" on="0"/>
        <pt x="583" y="100" on="0"/>
        <pt x="415" y="0" on="0"/>
        <pt x="315" y="0" on="1"/>
        <pt x="30" y="0" on="1"/>
        <pt x="30" y="152" on="1"/>
        <pt x="83" y="152" on="1"/>
        <pt x="83" y="294" on="1"/>
        <pt x="21" y="294" on="1"/>
        <pt x="21" y="446" on="1"/>
        <pt x="83" y="446" on="1"/>
        <pt x="83" y="588" on="1"/>
        <pt x="30" y="588" on="1"/>
        <pt x="30" y="740" on="1"/>
        <pt x="315" y="740" on="1"/>
      </contour>
      <contour>
        <pt x="358" y="152" on="0"/>
        <pt x="437" y="211" on="0"/>
        <pt x="483" y="311" on="0"/>
        <pt x="483" y="371" on="1"/>
        <pt x="483" y="431" on="0"/>
        <pt x="437" y="530" on="0"/>
        <pt x="358" y="588" on="0"/>
        <pt x="312" y="588" on="1"/>
        <pt x="269" y="588" on="1"/>
        <pt x="269" y="446" on="1"/>
        <pt x="341" y="446" on="1"/>
        <pt x="341" y="294" on="1"/>
        <pt x="269" y="294" on="1"/>
        <pt x="269" y="152" on="1"/>
        <pt x="312" y="152" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 61 values pushed */
          7 1 3 8 1 2 1 3 2 101 6 1 4 4 5 93 10 1 5 5 20 75 11 9 2
          1 1 0 93 0 0 0 21 0 76 19 19 0 0 19 33 19 32 31 30 29 28 27 25 0
          18 0 17 17 17 17 17 38 12 7 25
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="F" xMin="49" yMin="0" xMax="637" yMax="740">
      <contour>
        <pt x="49" y="740" on="1"/>
        <pt x="637" y="740" on="1"/>
        <pt x="637" y="473" on="1"/>
        <pt x="457" y="473" on="1"/>
        <pt x="457" y="569" on="1"/>
        <pt x="315" y="569" on="1"/>
        <pt x="315" y="442" on="1"/>
        <pt x="430" y="442" on="1"/>
        <pt x="430" y="279" on="1"/>
        <pt x="315" y="279" on="1"/>
        <pt x="315" y="152" on="1"/>
        <pt x="394" y="152" on="1"/>
        <pt x="394" y="0" on="1"/>
        <pt x="50" y="0" on="1"/>
        <pt x="50" y="152" on="1"/>
        <pt x="130" y="152" on="1"/>
        <pt x="130" y="569" on="1"/>
        <pt x="49" y="569" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 38 values pushed */
          0 1 2 3 2 1 112 0 3 0 4 5 3 4 101 8 1 2 2 0 93 0 0 0 20
          75 7 1 5 5 6 93 0 6 6 21 6 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 39 values pushed */
          0 1 2 3 2 1 3 126 0 3 0 4 5 3 4 101 8 1 2 2 0 93 0 0 0
          20 75 7 1 5 5 6 93 0 6 6 21 6 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 12 values pushed */
          17 17 17 17 17 17 17 17 16 9 7 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="G" xMin="32" yMin="-7" xMax="741" yMax="753">
      <contour>
        <pt x="576" y="121" on="1"/>
        <pt x="544" y="55" on="0"/>
        <pt x="434" y="-7" on="0"/>
        <pt x="367" y="-6" on="1"/>
        <pt x="308" y="-4" on="0"/>
        <pt x="193" y="46" on="0"/>
        <pt x="151" y="88" on="1"/>
        <pt x="95" y="143" on="0"/>
        <pt x="32" y="289" on="0"/>
        <pt x="32" y="371" on="1"/>
        <pt x="32" y="475" on="0"/>
        <pt x="129" y="650" on="0"/>
        <pt x="295" y="753" on="0"/>
        <pt x="392" y="753" on="1"/>
        <pt x="436" y="753" on="0"/>
        <pt x="505" y="746" on="0"/>
        <pt x="540" y="735" on="1"/>
        <pt x="689" y="697" on="1"/>
        <pt x="689" y="504" on="1"/>
        <pt x="521" y="504" on="1"/>
        <pt x="505" y="531" on="0"/>
        <pt x="435" y="562" on="0"/>
        <pt x="392" y="562" on="1"/>
        <pt x="346" y="562" on="0"/>
        <pt x="267" y="511" on="0"/>
        <pt x="221" y="424" on="0"/>
        <pt x="221" y="371" on="1"/>
        <pt x="221" y="320" on="0"/>
        <pt x="268" y="233" on="0"/>
        <pt x="346" y="182" on="0"/>
        <pt x="392" y="182" on="1"/>
        <pt x="429" y="182" on="0"/>
        <pt x="491" y="223" on="0"/>
        <pt x="505" y="258" on="1"/>
        <pt x="387" y="258" on="1"/>
        <pt x="387" y="410" on="1"/>
        <pt x="741" y="410" on="1"/>
        <pt x="741" y="1" on="1"/>
        <pt x="576" y="1" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          33
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 10 values pushed */
          17 1 3 1 0 1 0 4 2 74
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 10 values pushed */
          17 1 3 1 0 1 7 4 2 74
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          10
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 38 values pushed */
          0 2 3 6 3 2 6 126 0 6 0 5 4 6 5 101 0 3 3 1 95 0 1 1 28
          75 0 4 4 0 95 7 1 0 0 32 0 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 38 values pushed */
          0 2 3 6 3 2 6 126 0 6 0 5 4 6 5 101 0 3 3 1 95 0 1 1 28
          75 0 4 4 0 95 7 1 0 0 21 0 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          33
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 38 values pushed */
          0 2 3 6 3 2 6 126 0 6 0 5 4 6 5 101 0 3 3 1 95 0 1 1 28
          75 0 4 4 0 95 7 1 0 0 32 0 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 42 values pushed */
          0 2 3 6 3 2 6 126 0 6 0 5 4 6 5 101 0 3 3 1 95 0 1 1 28
          75 0 7 7 21 75 0 4 4 0 95 0 0 0 32 0 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 11 values pushed */
          17 17 18 38 34 20 40 34 8 7 28
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="H" xMin="50" yMin="0" xMax="882" yMax="740">
      <contour>
        <pt x="537" y="740" on="1"/>
        <pt x="882" y="740" on="1"/>
        <pt x="882" y="588" on="1"/>
        <pt x="801" y="588" on="1"/>
        <pt x="801" y="152" on="1"/>
        <pt x="882" y="152" on="1"/>
        <pt x="882" y="0" on="1"/>
        <pt x="537" y="0" on="1"/>
        <pt x="537" y="152" on="1"/>
        <pt x="615" y="152" on="1"/>
        <pt x="615" y="313" on="1"/>
        <pt x="315" y="313" on="1"/>
        <pt x="315" y="152" on="1"/>
        <pt x="394" y="152" on="1"/>
        <pt x="394" y="0" on="1"/>
        <pt x="50" y="0" on="1"/>
        <pt x="50" y="152" on="1"/>
        <pt x="129" y="152" on="1"/>
        <pt x="129" y="588" on="1"/>
        <pt x="50" y="588" on="1"/>
        <pt x="50" y="740" on="1"/>
        <pt x="394" y="740" on="1"/>
        <pt x="394" y="588" on="1"/>
        <pt x="315" y="588" on="1"/>
        <pt x="315" y="459" on="1"/>
        <pt x="615" y="459" on="1"/>
        <pt x="615" y="588" on="1"/>
        <pt x="537" y="588" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 59 values pushed */
          0 12 0 5 2 12 5 101 13 11 9 3 1 1 0 93 10 1 0 0 20 75 8 6 4
          3 2 2 3 93 7 1 3 3 21 3 76 27 26 25 24 23 22 21 20 19 18 17 17 17
          17 17 17 17 17 16 14 7 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="I" xMin="49" yMin="0" xMax="394" yMax="740">
      <contour>
        <pt x="49" y="740" on="1"/>
        <pt x="394" y="740" on="1"/>
        <pt x="394" y="588" on="1"/>
        <pt x="315" y="588" on="1"/>
        <pt x="315" y="152" on="1"/>
        <pt x="394" y="152" on="1"/>
        <pt x="394" y="0" on="1"/>
        <pt x="50" y="0" on="1"/>
        <pt x="50" y="152" on="1"/>
        <pt x="130" y="152" on="1"/>
        <pt x="130" y="588" on="1"/>
        <pt x="49" y="588" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 32 values pushed */
          5 1 1 1 0 93 0 0 0 20 75 4 1 2 2 3 93 0 3 3 21 3 76 17 17
          17 17 17 16 6 7 26
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Iacute" xMin="56" yMin="0" xMax="461" yMax="963">
      <contour>
        <pt x="287" y="963" on="1"/>
        <pt x="461" y="963" on="1"/>
        <pt x="461" y="950" on="1"/>
        <pt x="311" y="809" on="1"/>
        <pt x="181" y="809" on="1"/>
      </contour>
      <contour>
        <pt x="56" y="740" on="1"/>
        <pt x="401" y="740" on="1"/>
        <pt x="401" y="588" on="1"/>
        <pt x="322" y="588" on="1"/>
        <pt x="322" y="152" on="1"/>
        <pt x="401" y="152" on="1"/>
        <pt x="401" y="0" on="1"/>
        <pt x="56" y="0" on="1"/>
        <pt x="56" y="152" on="1"/>
        <pt x="137" y="152" on="1"/>
        <pt x="137" y="588" on="1"/>
        <pt x="56" y="588" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 48 values pushed */
          2 1 1 0 1 74 0 0 0 1 2 0 1 101 7 1 3 3 2 93 0 2 2 20 75
          6 1 4 4 5 93 0 5 5 21 5 76 17 17 17 17 17 17 18 16 8 7 28
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Icircumflex" xMin="33" yMin="0" xMax="456" yMax="969">
      <contour>
        <pt x="172" y="808" on="1"/>
        <pt x="244" y="883" on="1"/>
        <pt x="319" y="808" on="1"/>
        <pt x="456" y="808" on="1"/>
        <pt x="318" y="969" on="1"/>
        <pt x="170" y="969" on="1"/>
        <pt x="33" y="808" on="1"/>
      </contour>
      <contour>
        <pt x="56" y="740" on="1"/>
        <pt x="401" y="740" on="1"/>
        <pt x="401" y="588" on="1"/>
        <pt x="322" y="588" on="1"/>
        <pt x="322" y="152" on="1"/>
        <pt x="401" y="152" on="1"/>
        <pt x="401" y="0" on="1"/>
        <pt x="56" y="0" on="1"/>
        <pt x="56" y="152" on="1"/>
        <pt x="137" y="152" on="1"/>
        <pt x="137" y="588" on="1"/>
        <pt x="56" y="588" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          1 1 0 1 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          18
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 36 values pushed */
          0 1 0 1 131 9 2 2 0 3 3 0 110 8 1 4 4 3 93 0 3 3 20 75 7
          1 5 5 6 93 0 6 6 21 6 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 35 values pushed */
          0 1 0 1 131 9 2 2 0 3 0 131 8 1 4 4 3 93 0 3 3 20 75 7 1
          5 5 6 93 0 6 6 21 6 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 23 values pushed */
          0 0 18 17 16 15 14 13 12 11 10 9 8 7 0 6 0 6 17 18 10 7 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Idieresis" xMin="13" yMin="0" xMax="440" yMax="982">
      <contour>
        <pt x="13" y="926" on="0"/>
        <pt x="68" y="982" on="0"/>
        <pt x="108" y="982" on="1"/>
        <pt x="147" y="982" on="0"/>
        <pt x="202" y="926" on="0"/>
        <pt x="202" y="886" on="1"/>
        <pt x="202" y="847" on="0"/>
        <pt x="147" y="791" on="0"/>
        <pt x="108" y="791" on="1"/>
        <pt x="68" y="791" on="0"/>
        <pt x="13" y="847" on="0"/>
        <pt x="13" y="886" on="1"/>
      </contour>
      <contour>
        <pt x="251" y="926" on="0"/>
        <pt x="306" y="982" on="0"/>
        <pt x="346" y="982" on="1"/>
        <pt x="385" y="982" on="0"/>
        <pt x="440" y="926" on="0"/>
        <pt x="440" y="886" on="1"/>
        <pt x="440" y="847" on="0"/>
        <pt x="385" y="791" on="0"/>
        <pt x="346" y="791" on="1"/>
        <pt x="306" y="791" on="0"/>
        <pt x="251" y="847" on="0"/>
        <pt x="251" y="886" on="1"/>
      </contour>
      <contour>
        <pt x="56" y="740" on="1"/>
        <pt x="401" y="740" on="1"/>
        <pt x="401" y="588" on="1"/>
        <pt x="322" y="588" on="1"/>
        <pt x="322" y="152" on="1"/>
        <pt x="401" y="152" on="1"/>
        <pt x="401" y="0" on="1"/>
        <pt x="56" y="0" on="1"/>
        <pt x="56" y="152" on="1"/>
        <pt x="137" y="152" on="1"/>
        <pt x="137" y="588" on="1"/>
        <pt x="56" y="588" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 47 values pushed */
          2 1 0 3 1 1 4 0 1 103 9 1 5 5 4 93 0 4 4 20 75 8 1 6 6
          7 93 0 7 7 21 7 76 35 34 17 17 17 17 19 36 36 36 33 10 7 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Igrave" xMin="39" yMin="0" xMax="401" yMax="963">
      <contour>
        <pt x="310" y="809" on="1"/>
        <pt x="212" y="963" on="1"/>
        <pt x="39" y="963" on="1"/>
        <pt x="39" y="950" on="1"/>
        <pt x="183" y="809" on="1"/>
      </contour>
      <contour>
        <pt x="56" y="740" on="1"/>
        <pt x="401" y="740" on="1"/>
        <pt x="401" y="588" on="1"/>
        <pt x="322" y="588" on="1"/>
        <pt x="322" y="152" on="1"/>
        <pt x="401" y="152" on="1"/>
        <pt x="401" y="0" on="1"/>
        <pt x="56" y="0" on="1"/>
        <pt x="56" y="152" on="1"/>
        <pt x="137" y="152" on="1"/>
        <pt x="137" y="588" on="1"/>
        <pt x="56" y="588" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 62 values pushed */
          3 1 1 0 1 74 0 0 1 0 131 8 1 1 2 1 131 7 1 3 3 2 93 0 2
          2 20 75 6 1 4 4 5 94 0 5 5 21 5 76 0 0 16 15 14 13 12 11 10 9
          8 7 6 5 0 4 0 4 17 9 7 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="J" xMin="-11" yMin="-116" xMax="323" yMax="740">
      <contour>
        <pt x="323" y="740" on="1"/>
        <pt x="323" y="569" on="1"/>
        <pt x="274" y="569" on="1"/>
        <pt x="274" y="84" on="1"/>
        <pt x="274" y="59" on="0"/>
        <pt x="216" y="-30" on="0"/>
        <pt x="154" y="-105" on="0"/>
        <pt x="144" y="-116" on="1"/>
        <pt x="-11" y="-109" on="1"/>
        <pt x="-3" y="-97" on="0"/>
        <pt x="47" y="-17" on="0"/>
        <pt x="93" y="76" on="0"/>
        <pt x="93" y="100" on="1"/>
        <pt x="93" y="569" on="1"/>
        <pt x="28" y="569" on="1"/>
        <pt x="28" y="740" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 30 values pushed */
          0 1 0 1 132 2 1 0 0 3 93 4 1 3 3 20 0 76 0 0 0 15 0 15 21
          21 17 5 7 23
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="K" xMin="55" yMin="0" xMax="783" yMax="740">
      <contour>
        <pt x="55" y="740" on="1"/>
        <pt x="372" y="740" on="1"/>
        <pt x="372" y="606" on="1"/>
        <pt x="294" y="606" on="1"/>
        <pt x="294" y="391" on="1"/>
        <pt x="531" y="597" on="1"/>
        <pt x="531" y="740" on="1"/>
        <pt x="783" y="740" on="1"/>
        <pt x="783" y="596" on="1"/>
        <pt x="728" y="596" on="1"/>
        <pt x="481" y="384" on="1"/>
        <pt x="718" y="145" on="1"/>
        <pt x="778" y="145" on="1"/>
        <pt x="778" y="0" on="1"/>
        <pt x="532" y="0" on="1"/>
        <pt x="532" y="145" on="1"/>
        <pt x="294" y="383" on="1"/>
        <pt x="294" y="134" on="1"/>
        <pt x="372" y="134" on="1"/>
        <pt x="372" y="0" on="1"/>
        <pt x="55" y="0" on="1"/>
        <pt x="55" y="134" on="1"/>
        <pt x="132" y="134" on="1"/>
        <pt x="132" y="606" on="1"/>
        <pt x="55" y="606" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          24
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 14 values pushed */
          16 10 5 4 4 4 1 1 74 15 1 4 1 73
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 17 values pushed */
          5 1 3 1 16 10 4 3 4 3 2 74 15 1 4 1 73
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          22
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 27 values pushed */
          9 3 2 1 1 0 93 2 1 0 0 20 75 8 6 2 4 4 5 93 7 1 5 5 21
          5 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          24
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 37 values pushed */
          9 3 2 1 1 0 93 2 1 0 0 20 75 0 4 4 5 93 7 1 5 5 21 75 8
          1 6 6 5 93 7 1 5 5 21 5 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 47 values pushed */
          9 1 1 1 0 93 2 1 0 0 20 75 0 3 3 0 93 2 1 0 0 20 75 0 4
          4 5 93 7 1 5 5 21 75 8 1 6 6 5 93 7 1 5 5 21 5 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          24 23 17 17 19 17 18 17 19 17 16 10 7 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="L" xMin="50" yMin="0" xMax="654" yMax="740">
      <contour>
        <pt x="394" y="740" on="1"/>
        <pt x="394" y="588" on="1"/>
        <pt x="316" y="588" on="1"/>
        <pt x="316" y="152" on="1"/>
        <pt x="443" y="152" on="1"/>
        <pt x="455" y="152" on="0"/>
        <pt x="474" y="177" on="0"/>
        <pt x="474" y="190" on="1"/>
        <pt x="474" y="291" on="1"/>
        <pt x="654" y="291" on="1"/>
        <pt x="654" y="0" on="1"/>
        <pt x="50" y="0" on="1"/>
        <pt x="50" y="152" on="1"/>
        <pt x="130" y="152" on="1"/>
        <pt x="130" y="588" on="1"/>
        <pt x="50" y="588" on="1"/>
        <pt x="50" y="740" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 47 values pushed */
          0 2 0 1 0 2 1 126 5 1 0 0 6 93 7 1 6 6 20 75 4 1 1 1 3
          94 0 3 3 21 3 76 0 0 0 16 0 16 17 17 17 19 33 17 8 7 26
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="M" xMin="47" yMin="0" xMax="1118" yMax="740">
      <contour>
        <pt x="47" y="152" on="1"/>
        <pt x="116" y="152" on="1"/>
        <pt x="116" y="591" on="1"/>
        <pt x="50" y="591" on="1"/>
        <pt x="50" y="740" on="1"/>
        <pt x="378" y="740" on="1"/>
        <pt x="590" y="244" on="1"/>
        <pt x="780" y="740" on="1"/>
        <pt x="1118" y="740" on="1"/>
        <pt x="1118" y="591" on="1"/>
        <pt x="1052" y="591" on="1"/>
        <pt x="1052" y="152" on="1"/>
        <pt x="1117" y="152" on="1"/>
        <pt x="1117" y="0" on="1"/>
        <pt x="827" y="0" on="1"/>
        <pt x="827" y="152" on="1"/>
        <pt x="870" y="152" on="1"/>
        <pt x="870" y="527" on="1"/>
        <pt x="661" y="12" on="1"/>
        <pt x="505" y="12" on="1"/>
        <pt x="296" y="507" on="1"/>
        <pt x="290" y="152" on="1"/>
        <pt x="338" y="152" on="1"/>
        <pt x="338" y="0" on="1"/>
        <pt x="47" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 8 values pushed */
          20 17 6 3 0 1 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          20
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 28 values pushed */
          4 1 1 1 2 93 3 1 2 2 20 75 9 7 5 3 0 0 6 93 10 8 2 6 6
          21 6 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          41
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 32 values pushed */
          4 1 1 1 2 93 3 1 2 2 20 75 0 8 8 21 75 9 7 5 3 0 0 6 93
          10 1 6 6 21 6 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 35 values pushed */
          0 8 0 6 0 8 6 126 4 1 1 1 2 93 3 1 2 2 20 75 9 7 5 3 0
          0 6 93 10 1 6 6 21 6 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 16 values pushed */
          24 23 22 21 18 17 17 17 17 18 17 17 16 11 7 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="N" xMin="50" yMin="0" xMax="818" yMax="741">
      <contour>
        <pt x="522" y="740" on="1"/>
        <pt x="818" y="740" on="1"/>
        <pt x="818" y="588" on="1"/>
        <pt x="759" y="588" on="1"/>
        <pt x="759" y="0" on="1"/>
        <pt x="583" y="0" on="1"/>
        <pt x="288" y="431" on="1"/>
        <pt x="288" y="152" on="1"/>
        <pt x="345" y="152" on="1"/>
        <pt x="345" y="0" on="1"/>
        <pt x="51" y="0" on="1"/>
        <pt x="51" y="152" on="1"/>
        <pt x="108" y="152" on="1"/>
        <pt x="108" y="588" on="1"/>
        <pt x="50" y="588" on="1"/>
        <pt x="50" y="741" on="1"/>
        <pt x="285" y="741" on="1"/>
        <pt x="578" y="299" on="1"/>
        <pt x="578" y="588" on="1"/>
        <pt x="522" y="588" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 45 values pushed */
          17 6 2 3 1 1 74 8 6 2 1 1 0 93 7 1 0 0 20 75 5 1 3 3 2
          93 4 1 2 2 21 2 76 18 17 17 17 17 18 17 17 16 9 7 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Ntilde" xMin="57" yMin="0" xMax="825" yMax="967">
      <contour>
        <pt x="358" y="967" on="0"/>
        <pt x="391" y="956" on="0"/>
        <pt x="421" y="944" on="1"/>
        <pt x="448" y="933" on="0"/>
        <pt x="476" y="924" on="0"/>
        <pt x="490" y="924" on="1"/>
        <pt x="514" y="924" on="0"/>
        <pt x="548" y="938" on="0"/>
        <pt x="563" y="955" on="1"/>
        <pt x="647" y="915" on="1"/>
        <pt x="629" y="868" on="0"/>
        <pt x="549" y="804" on="0"/>
        <pt x="503" y="804" on="1"/>
        <pt x="479" y="804" on="0"/>
        <pt x="438" y="815" on="0"/>
        <pt x="412" y="826" on="1"/>
        <pt x="366" y="845" on="0"/>
        <pt x="338" y="845" on="1"/>
        <pt x="320" y="845" on="0"/>
        <pt x="294" y="832" on="0"/>
        <pt x="276" y="818" on="0"/>
        <pt x="273" y="816" on="1"/>
        <pt x="191" y="853" on="1"/>
        <pt x="200" y="887" on="0"/>
        <pt x="253" y="939" on="0"/>
        <pt x="317" y="967" on="0"/>
        <pt x="341" y="967" on="1"/>
      </contour>
      <contour>
        <pt x="529" y="740" on="1"/>
        <pt x="825" y="740" on="1"/>
        <pt x="825" y="588" on="1"/>
        <pt x="766" y="588" on="1"/>
        <pt x="766" y="0" on="1"/>
        <pt x="591" y="0" on="1"/>
        <pt x="295" y="431" on="1"/>
        <pt x="295" y="152" on="1"/>
        <pt x="352" y="152" on="1"/>
        <pt x="352" y="0" on="1"/>
        <pt x="58" y="0" on="1"/>
        <pt x="58" y="152" on="1"/>
        <pt x="115" y="152" on="1"/>
        <pt x="115" y="588" on="1"/>
        <pt x="57" y="588" on="1"/>
        <pt x="57" y="741" on="1"/>
        <pt x="292" y="741" on="1"/>
        <pt x="585" y="299" on="1"/>
        <pt x="585" y="588" on="1"/>
        <pt x="529" y="588" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 89 values pushed */
          8 1 0 3 22 9 2 2 0 44 33 2 7 5 3 74 13 1 3 0 2 1 3 2 103
          0 0 0 1 4 0 1 103 12 10 2 5 5 4 93 11 1 4 4 20 75 9 1 7 7
          6 93 8 1 6 6 21 6 76 0 0 46 45 43 42 41 40 39 38 37 36 35 34 32 31
          30 29 28 27 0 26 0 25 35 37 36 14 7 23
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="O" xMin="30" yMin="-12" xMax="750" yMax="754">
      <contour>
        <pt x="292" y="-12" on="0"/>
        <pt x="127" y="91" on="0"/>
        <pt x="30" y="266" on="0"/>
        <pt x="30" y="370" on="1"/>
        <pt x="30" y="475" on="0"/>
        <pt x="127" y="651" on="0"/>
        <pt x="292" y="754" on="0"/>
        <pt x="389" y="754" on="1"/>
        <pt x="487" y="754" on="0"/>
        <pt x="652" y="651" on="0"/>
        <pt x="750" y="475" on="0"/>
        <pt x="750" y="370" on="1"/>
        <pt x="750" y="266" on="0"/>
        <pt x="653" y="90" on="0"/>
        <pt x="487" y="-12" on="0"/>
        <pt x="389" y="-12" on="1"/>
      </contour>
      <contour>
        <pt x="438" y="163" on="0"/>
        <pt x="515" y="218" on="0"/>
        <pt x="559" y="313" on="0"/>
        <pt x="559" y="370" on="1"/>
        <pt x="559" y="427" on="0"/>
        <pt x="514" y="522" on="0"/>
        <pt x="437" y="578" on="0"/>
        <pt x="389" y="578" on="1"/>
        <pt x="342" y="578" on="0"/>
        <pt x="265" y="522" on="0"/>
        <pt x="220" y="427" on="0"/>
        <pt x="220" y="370" on="1"/>
        <pt x="220" y="314" on="0"/>
        <pt x="265" y="219" on="0"/>
        <pt x="342" y="163" on="0"/>
        <pt x="389" y="163" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 41 values pushed */
          0 2 2 0 95 0 0 0 28 75 5 1 3 3 1 95 4 1 1 1 29 1 76 16 16
          0 0 16 31 16 30 24 22 0 15 0 14 38 6 7 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Oacute" xMin="30" yMin="-12" xMax="750" yMax="923">
      <component glyphName="O" x="0" y="0" flags="0x0"/>
      <component glyphName="acute" x="333" y="194" flags="0x4"/>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          2 1
          PUSHB[ ]	/* 1 value pushed */
          194
          PUSHB[ ]	/* 1 value pushed */
          51
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Ocircumflex" xMin="30" yMin="-12" xMax="750" yMax="969">
      <component glyphName="O" x="0" y="0" flags="0x0"/>
      <component glyphName="circumflex" x="176" y="234" flags="0x4"/>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          2 1
          PUSHB[ ]	/* 1 value pushed */
          234
          PUSHB[ ]	/* 1 value pushed */
          51
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Odieresis" xMin="30" yMin="-12" xMax="750" yMax="982">
      <component glyphName="O" x="0" y="0" flags="0x0"/>
      <component glyphName="dotaccent" x="144" y="223" flags="0x4"/>
      <component glyphName="dotaccent" x="382" y="223" flags="0x4"/>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          2 1
          PUSHB[ ]	/* 1 value pushed */
          223
          PUSHB[ ]	/* 1 value pushed */
          51
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          3 1
          PUSHB[ ]	/* 1 value pushed */
          223
          PUSHB[ ]	/* 1 value pushed */
          51
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Ograve" xMin="30" yMin="-12" xMax="750" yMax="923">
      <component glyphName="O" x="0" y="0" flags="0x0"/>
      <component glyphName="grave" x="124" y="194" flags="0x4"/>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          2 1
          PUSHB[ ]	/* 1 value pushed */
          194
          PUSHB[ ]	/* 1 value pushed */
          51
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Oslash" xMin="7" yMin="-12" xMax="750" yMax="794">
      <contour>
        <pt x="691" y="594" on="0"/>
        <pt x="750" y="450" on="0"/>
        <pt x="750" y="370" on="1"/>
        <pt x="750" y="266" on="0"/>
        <pt x="653" y="90" on="0"/>
        <pt x="487" y="-12" on="0"/>
        <pt x="389" y="-12" on="1"/>
        <pt x="335" y="-12" on="0"/>
        <pt x="234" y="21" on="0"/>
        <pt x="190" y="52" on="1"/>
        <pt x="146" y="-6" on="1"/>
        <pt x="7" y="-6" on="1"/>
        <pt x="110" y="130" on="1"/>
        <pt x="72" y="180" on="0"/>
        <pt x="30" y="303" on="0"/>
        <pt x="30" y="370" on="1"/>
        <pt x="30" y="475" on="0"/>
        <pt x="127" y="651" on="0"/>
        <pt x="292" y="754" on="0"/>
        <pt x="389" y="754" on="1"/>
        <pt x="476" y="754" on="0"/>
        <pt x="552" y="712" on="1"/>
        <pt x="614" y="794" on="1"/>
        <pt x="749" y="794" on="1"/>
        <pt x="638" y="647" on="1"/>
      </contour>
      <contour>
        <pt x="220" y="329" on="0"/>
        <pt x="232" y="291" on="1"/>
        <pt x="443" y="568" on="1"/>
        <pt x="415" y="578" on="0"/>
        <pt x="389" y="578" on="1"/>
        <pt x="342" y="578" on="0"/>
        <pt x="265" y="522" on="0"/>
        <pt x="220" y="427" on="0"/>
        <pt x="220" y="370" on="1"/>
      </contour>
      <contour>
        <pt x="438" y="163" on="0"/>
        <pt x="515" y="218" on="0"/>
        <pt x="559" y="313" on="0"/>
        <pt x="559" y="370" on="1"/>
        <pt x="559" y="440" on="0"/>
        <pt x="525" y="497" on="1"/>
        <pt x="298" y="195" on="1"/>
        <pt x="340" y="163" on="0"/>
        <pt x="389" y="163" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          39
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 19 values pushed */
          24 21 2 4 2 40 39 27 26 4 5 4 12 9 2 0 5 3 74
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 19 values pushed */
          24 21 2 4 2 40 39 27 26 4 5 4 12 9 2 1 5 3 74
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          39
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 28 values pushed */
          0 3 2 3 131 0 4 4 2 95 0 2 2 28 75 6 1 5 5 0 95 1 1 0 0
          29 0 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 32 values pushed */
          0 3 2 3 131 0 4 4 2 95 0 2 2 28 75 0 1 1 21 75 6 1 5 5 0
          95 0 0 0 29 0 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          34 34 34 42 34 41 37 18 39 19 37 7 7 25
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Otilde" xMin="30" yMin="-12" xMax="750" yMax="967">
      <component glyphName="O" x="0" y="0" flags="0x0"/>
      <component glyphName="tilde" x="157" y="234" flags="0x4"/>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          2 1
          PUSHB[ ]	/* 1 value pushed */
          234
          PUSHB[ ]	/* 1 value pushed */
          51
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="P" xMin="49" yMin="0" xMax="676" yMax="740">
      <contour>
        <pt x="403" y="740" on="1"/>
        <pt x="479" y="740" on="0"/>
        <pt x="605" y="675" on="0"/>
        <pt x="676" y="571" on="0"/>
        <pt x="676" y="516" on="1"/>
        <pt x="676" y="396" on="0"/>
        <pt x="542" y="251" on="0"/>
        <pt x="403" y="251" on="1"/>
        <pt x="310" y="251" on="1"/>
        <pt x="310" y="152" on="1"/>
        <pt x="380" y="152" on="1"/>
        <pt x="380" y="0" on="1"/>
        <pt x="49" y="0" on="1"/>
        <pt x="49" y="152" on="1"/>
        <pt x="125" y="152" on="1"/>
        <pt x="125" y="588" on="1"/>
        <pt x="50" y="588" on="1"/>
        <pt x="50" y="740" on="1"/>
      </contour>
      <contour>
        <pt x="310" y="401" on="1"/>
        <pt x="354" y="401" on="1"/>
        <pt x="473" y="401" on="0"/>
        <pt x="473" y="492" on="1"/>
        <pt x="473" y="537" on="0"/>
        <pt x="413" y="588" on="0"/>
        <pt x="358" y="588" on="1"/>
        <pt x="310" y="588" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 55 values pushed */
          0 6 0 1 2 6 1 101 7 1 5 5 0 93 8 1 0 0 20 75 4 1 2 2 3
          93 0 3 3 21 3 76 1 0 25 23 20 18 16 15 14 13 12 11 10 9 8 6 0 17
          1 17 9 7 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Q" xMin="30" yMin="-205" xMax="776" yMax="754">
      <contour>
        <pt x="234" y="14" on="0"/>
        <pt x="104" y="122" on="0"/>
        <pt x="30" y="280" on="0"/>
        <pt x="30" y="370" on="1"/>
        <pt x="30" y="475" on="0"/>
        <pt x="127" y="651" on="0"/>
        <pt x="292" y="754" on="0"/>
        <pt x="389" y="754" on="1"/>
        <pt x="487" y="754" on="0"/>
        <pt x="652" y="651" on="0"/>
        <pt x="750" y="475" on="0"/>
        <pt x="750" y="370" on="1"/>
        <pt x="750" y="278" on="0"/>
        <pt x="673" y="119" on="0"/>
        <pt x="538" y="11" on="0"/>
        <pt x="456" y="-5" on="1"/>
        <pt x="534" y="-43" on="0"/>
        <pt x="564" y="-45" on="1"/>
        <pt x="599" y="-45" on="0"/>
        <pt x="649" y="-8" on="0"/>
        <pt x="655" y="30" on="1"/>
        <pt x="776" y="-31" on="1"/>
        <pt x="769" y="-108" on="0"/>
        <pt x="659" y="-205" on="0"/>
        <pt x="579" y="-205" on="1"/>
        <pt x="555" y="-205" on="0"/>
        <pt x="496" y="-183" on="0"/>
        <pt x="454" y="-163" on="1"/>
        <pt x="448" y="-160" on="0"/>
        <pt x="408" y="-143" on="0"/>
        <pt x="381" y="-134" on="0"/>
        <pt x="373" y="-134" on="1"/>
        <pt x="347" y="-133" on="1"/>
        <pt x="332" y="-133" on="0"/>
        <pt x="313" y="-140" on="1"/>
        <pt x="314" y="-4" on="1"/>
      </contour>
      <contour>
        <pt x="438" y="163" on="0"/>
        <pt x="515" y="218" on="0"/>
        <pt x="559" y="313" on="0"/>
        <pt x="559" y="370" on="1"/>
        <pt x="559" y="427" on="0"/>
        <pt x="514" y="522" on="0"/>
        <pt x="437" y="578" on="0"/>
        <pt x="389" y="578" on="1"/>
        <pt x="342" y="578" on="0"/>
        <pt x="265" y="522" on="0"/>
        <pt x="220" y="427" on="0"/>
        <pt x="220" y="370" on="1"/>
        <pt x="220" y="314" on="0"/>
        <pt x="265" y="219" on="0"/>
        <pt x="342" y="163" on="0"/>
        <pt x="389" y="163" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 13 values pushed */
          35 21 20 15 4 1 5 34 1 2 3 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          20
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 30 values pushed */
          6 1 5 0 3 2 5 3 103 0 4 4 0 95 0 0 0 28 75 0 1 1 2 95 0
          2 2 25 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 27 values pushed */
          6 1 5 0 3 2 5 3 103 0 1 0 2 1 2 99 0 4 4 0 95 0 0 0 28
          4 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          36 36 36 51 36 50 41 53 37 40 38 7 7 25
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="R" xMin="48" yMin="0" xMax="750" yMax="740">
      <contour>
        <pt x="471" y="740" on="1"/>
        <pt x="547" y="740" on="0"/>
        <pt x="658" y="679" on="0"/>
        <pt x="716" y="582" on="0"/>
        <pt x="716" y="529" on="1"/>
        <pt x="716" y="477" on="0"/>
        <pt x="691" y="408" on="0"/>
        <pt x="642" y="362" on="0"/>
        <pt x="600" y="340" on="1"/>
        <pt x="652" y="312" on="0"/>
        <pt x="669" y="235" on="1"/>
        <pt x="689" y="162" on="1"/>
        <pt x="749" y="162" on="1"/>
        <pt x="750" y="0" on="1"/>
        <pt x="509" y="0" on="1"/>
        <pt x="489" y="158" on="1"/>
        <pt x="482" y="223" on="0"/>
        <pt x="426" y="278" on="0"/>
        <pt x="365" y="278" on="1"/>
        <pt x="314" y="278" on="1"/>
        <pt x="314" y="152" on="1"/>
        <pt x="379" y="152" on="1"/>
        <pt x="379" y="0" on="1"/>
        <pt x="48" y="0" on="1"/>
        <pt x="48" y="152" on="1"/>
        <pt x="128" y="152" on="1"/>
        <pt x="128" y="588" on="1"/>
        <pt x="50" y="588" on="1"/>
        <pt x="50" y="740" on="1"/>
      </contour>
      <contour>
        <pt x="314" y="428" on="1"/>
        <pt x="395" y="428" on="1"/>
        <pt x="513" y="428" on="0"/>
        <pt x="513" y="506" on="1"/>
        <pt x="513" y="544" on="0"/>
        <pt x="453" y="588" on="0"/>
        <pt x="399" y="588" on="1"/>
        <pt x="314" y="588" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          8 1 3 8 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          24
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 34 values pushed */
          0 8 0 3 1 8 3 103 9 1 7 7 0 93 10 1 0 0 20 75 6 4 2 1 1
          2 93 5 1 2 2 21 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 44 values pushed */
          0 8 0 3 1 8 3 103 9 1 7 7 0 93 10 1 0 0 20 75 0 1 1 2 93
          5 1 2 2 21 75 6 1 4 4 2 93 5 1 2 2 21 2 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 27 values pushed */
          1 0 36 34 31 29 27 26 25 24 23 22 21 20 19 17 14 13 12 11 0 28 1 28 11
          7 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="S" xMin="13" yMin="-15" xMax="595" yMax="766">
      <contour>
        <pt x="394" y="550" on="0"/>
        <pt x="336" y="598" on="0"/>
        <pt x="298" y="598" on="1"/>
        <pt x="270" y="598" on="0"/>
        <pt x="230" y="574" on="0"/>
        <pt x="230" y="545" on="1"/>
        <pt x="230" y="518" on="0"/>
        <pt x="266" y="495" on="0"/>
        <pt x="304" y="484" on="1"/>
        <pt x="326" y="478" on="1"/>
        <pt x="472" y="428" on="1"/>
        <pt x="521" y="410" on="0"/>
        <pt x="588" y="308" on="0"/>
        <pt x="588" y="236" on="1"/>
        <pt x="588" y="162" on="0"/>
        <pt x="518" y="48" on="0"/>
        <pt x="393" y="-15" on="0"/>
        <pt x="311" y="-15" on="1"/>
        <pt x="233" y="-15" on="0"/>
        <pt x="97" y="54" on="0"/>
        <pt x="68" y="116" on="1"/>
        <pt x="13" y="116" on="1"/>
        <pt x="13" y="286" on="1"/>
        <pt x="210" y="286" on="1"/>
        <pt x="210" y="254" on="1"/>
        <pt x="210" y="212" on="0"/>
        <pt x="258" y="158" on="0"/>
        <pt x="309" y="158" on="1"/>
        <pt x="344" y="158" on="0"/>
        <pt x="380" y="192" on="0"/>
        <pt x="380" y="222" on="1"/>
        <pt x="380" y="247" on="0"/>
        <pt x="344" y="269" on="0"/>
        <pt x="307" y="281" on="1"/>
        <pt x="193" y="319" on="1"/>
        <pt x="124" y="340" on="0"/>
        <pt x="28" y="453" on="0"/>
        <pt x="28" y="539" on="1"/>
        <pt x="28" y="612" on="0"/>
        <pt x="98" y="715" on="0"/>
        <pt x="220" y="766" on="0"/>
        <pt x="297" y="766" on="1"/>
        <pt x="357" y="766" on="0"/>
        <pt x="459" y="730" on="0"/>
        <pt x="527" y="673" on="0"/>
        <pt x="542" y="641" on="1"/>
        <pt x="595" y="641" on="1"/>
        <pt x="595" y="471" on="1"/>
        <pt x="397" y="471" on="1"/>
        <pt x="397" y="518" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          49 1 7 0 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          10
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 37 values pushed */
          0 6 0 7 3 6 7 101 0 3 0 2 1 3 2 101 0 0 0 5 95 0 5 5 30
          75 0 4 4 1 95 0 1 1 29 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 37 values pushed */
          0 6 0 7 3 6 7 101 0 3 0 2 1 3 2 101 0 0 0 5 95 0 5 5 22
          75 0 4 4 1 95 0 1 1 29 1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 37 values pushed */
          0 6 0 7 3 6 7 101 0 3 0 2 1 3 2 101 0 0 0 5 95 0 5 5 30
          75 0 4 4 1 95 0 1 1 29 1 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 11 values pushed */
          17 19 44 35 17 18 45 33 8 7 28
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Scaron" xMin="13" yMin="-15" xMax="595" yMax="947">
      <component glyphName="S" x="0" y="0" flags="0x0"/>
      <component glyphName="caron" x="66" y="234" flags="0x4"/>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          1 1
          PUSHB[ ]	/* 1 value pushed */
          234
          PUSHB[ ]	/* 1 value pushed */
          51
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="T" xMin="6" yMin="0" xMax="684" yMax="740">
      <contour>
        <pt x="168" y="152" on="1"/>
        <pt x="248" y="152" on="1"/>
        <pt x="248" y="593" on="1"/>
        <pt x="187" y="593" on="1"/>
        <pt x="187" y="504" on="1"/>
        <pt x="6" y="504" on="1"/>
        <pt x="6" y="740" on="1"/>
        <pt x="684" y="740" on="1"/>
        <pt x="684" y="504" on="1"/>
        <pt x="503" y="504" on="1"/>
        <pt x="503" y="593" on="1"/>
        <pt x="434" y="593" on="1"/>
        <pt x="434" y="152" on="1"/>
        <pt x="513" y="152" on="1"/>
        <pt x="513" y="0" on="1"/>
        <pt x="168" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          14
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 31 values pushed */
          4 1 2 1 0 1 2 112 5 1 1 1 3 93 0 3 3 20 75 6 1 0 0 7 93
          0 7 7 21 7 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 32 values pushed */
          4 1 2 1 0 1 2 0 126 5 1 1 1 3 93 0 3 3 20 75 6 1 0 0 7
          93 0 7 7 21 7 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 11 values pushed */
          17 17 17 17 17 17 17 16 8 7 28
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Thorn" xMin="56" yMin="0" xMax="678" yMax="740">
      <contour>
        <pt x="483" y="580" on="0"/>
        <pt x="607" y="520" on="0"/>
        <pt x="678" y="420" on="0"/>
        <pt x="678" y="361" on="1"/>
        <pt x="678" y="303" on="0"/>
        <pt x="621" y="205" on="0"/>
        <pt x="499" y="145" on="0"/>
        <pt x="406" y="145" on="1"/>
        <pt x="401" y="145" on="1"/>
        <pt x="401" y="0" on="1"/>
        <pt x="56" y="0" on="1"/>
        <pt x="56" y="152" on="1"/>
        <pt x="137" y="152" on="1"/>
        <pt x="137" y="588" on="1"/>
        <pt x="56" y="588" on="1"/>
        <pt x="56" y="740" on="1"/>
        <pt x="401" y="740" on="1"/>
        <pt x="401" y="588" on="1"/>
        <pt x="322" y="588" on="1"/>
        <pt x="322" y="580" on="1"/>
        <pt x="405" y="580" on="1"/>
      </contour>
      <contour>
        <pt x="475" y="296" on="0"/>
        <pt x="475" y="360" on="1"/>
        <pt x="475" y="392" on="0"/>
        <pt x="415" y="429" on="0"/>
        <pt x="360" y="429" on="1"/>
        <pt x="322" y="429" on="1"/>
        <pt x="322" y="296" on="1"/>
        <pt x="356" y="296" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 63 values pushed */
          9 1 6 0 7 8 6 7 103 10 1 8 0 0 1 8 0 103 5 1 3 3 4 93 0
          4 4 20 75 0 2 2 1 93 0 1 1 21 1 76 21 21 0 0 21 28 21 27 26 24
          0 20 0 20 17 17 17 17 18 22 11 7 26
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="U" xMin="14" yMin="-10" xMax="718" yMax="740">
      <contour>
        <pt x="332" y="740" on="1"/>
        <pt x="332" y="588" on="1"/>
        <pt x="263" y="588" on="1"/>
        <pt x="263" y="294" on="1"/>
        <pt x="263" y="225" on="0"/>
        <pt x="322" y="161" on="0"/>
        <pt x="373" y="161" on="1"/>
        <pt x="427" y="161" on="0"/>
        <pt x="483" y="221" on="0"/>
        <pt x="483" y="294" on="1"/>
        <pt x="483" y="588" on="1"/>
        <pt x="401" y="588" on="1"/>
        <pt x="401" y="740" on="1"/>
        <pt x="718" y="740" on="1"/>
        <pt x="718" y="588" on="1"/>
        <pt x="662" y="588" on="1"/>
        <pt x="662" y="317" on="1"/>
        <pt x="662" y="216" on="0"/>
        <pt x="585" y="68" on="0"/>
        <pt x="452" y="-10" on="0"/>
        <pt x="370" y="-10" on="1"/>
        <pt x="289" y="-10" on="0"/>
        <pt x="157" y="67" on="0"/>
        <pt x="81" y="212" on="0"/>
        <pt x="81" y="308" on="1"/>
        <pt x="81" y="588" on="1"/>
        <pt x="14" y="588" on="1"/>
        <pt x="14" y="740" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 26 values pushed */
          6 4 2 3 0 0 3 93 8 7 2 3 3 20 75 0 1 1 5 95 0 5 5 29 5
          76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 26 values pushed */
          6 4 2 3 0 0 3 93 8 7 2 3 3 20 75 0 1 1 5 95 0 5 5 32 5
          76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 16 values pushed */
          0 0 0 27 0 27 20 36 17 17 19 35 17 9 7 27
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Uacute" xMin="14" yMin="-10" xMax="718" yMax="963">
      <contour>
        <pt x="432" y="963" on="1"/>
        <pt x="606" y="963" on="1"/>
        <pt x="606" y="950" on="1"/>
        <pt x="456" y="809" on="1"/>
        <pt x="326" y="809" on="1"/>
      </contour>
      <contour>
        <pt x="332" y="740" on="1"/>
        <pt x="332" y="588" on="1"/>
        <pt x="263" y="588" on="1"/>
        <pt x="263" y="294" on="1"/>
        <pt x="263" y="225" on="0"/>
        <pt x="322" y="161" on="0"/>
        <pt x="373" y="161" on="1"/>
        <pt x="427" y="161" on="0"/>
        <pt x="483" y="221" on="0"/>
        <pt x="483" y="294" on="1"/>
        <pt x="483" y="588" on="1"/>
        <pt x="401" y="588" on="1"/>
        <pt x="401" y="740" on="1"/>
        <pt x="718" y="740" on="1"/>
        <pt x="718" y="588" on="1"/>
        <pt x="662" y="588" on="1"/>
        <pt x="662" y="317" on="1"/>
        <pt x="662" y="216" on="0"/>
        <pt x="585" y="68" on="0"/>
        <pt x="452" y="-10" on="0"/>
        <pt x="370" y="-10" on="1"/>
        <pt x="289" y="-10" on="0"/>
        <pt x="157" y="67" on="0"/>
        <pt x="81" y="212" on="0"/>
        <pt x="81" y="308" on="1"/>
        <pt x="81" y="588" on="1"/>
        <pt x="14" y="588" on="1"/>
        <pt x="14" y="740" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          2 1 1 0 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 34 values pushed */
          0 0 0 1 5 0 1 101 8 6 4 3 2 2 5 93 10 9 2 5 5 20 75 0 3
          3 7 95 0 7 7 29 7 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 34 values pushed */
          0 0 0 1 5 0 1 101 8 6 4 3 2 2 5 93 10 9 2 5 5 20 75 0 3
          3 7 95 0 7 7 32 7 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 18 values pushed */
          5 5 5 32 5 32 20 36 17 17 19 35 18 18 16 11 7 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Ucircumflex" xMin="14" yMin="-10" xMax="718" yMax="969">
      <contour>
        <pt x="318" y="808" on="1"/>
        <pt x="390" y="883" on="1"/>
        <pt x="465" y="808" on="1"/>
        <pt x="602" y="808" on="1"/>
        <pt x="464" y="969" on="1"/>
        <pt x="316" y="969" on="1"/>
        <pt x="179" y="808" on="1"/>
      </contour>
      <contour>
        <pt x="332" y="740" on="1"/>
        <pt x="332" y="588" on="1"/>
        <pt x="263" y="588" on="1"/>
        <pt x="263" y="294" on="1"/>
        <pt x="263" y="225" on="0"/>
        <pt x="322" y="161" on="0"/>
        <pt x="373" y="161" on="1"/>
        <pt x="427" y="161" on="0"/>
        <pt x="483" y="221" on="0"/>
        <pt x="483" y="294" on="1"/>
        <pt x="483" y="588" on="1"/>
        <pt x="401" y="588" on="1"/>
        <pt x="401" y="740" on="1"/>
        <pt x="718" y="740" on="1"/>
        <pt x="718" y="588" on="1"/>
        <pt x="662" y="588" on="1"/>
        <pt x="662" y="317" on="1"/>
        <pt x="662" y="216" on="0"/>
        <pt x="585" y="68" on="0"/>
        <pt x="452" y="-10" on="0"/>
        <pt x="370" y="-10" on="1"/>
        <pt x="289" y="-10" on="0"/>
        <pt x="157" y="67" on="0"/>
        <pt x="81" y="212" on="0"/>
        <pt x="81" y="308" on="1"/>
        <pt x="81" y="588" on="1"/>
        <pt x="14" y="588" on="1"/>
        <pt x="14" y="740" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          1 1 0 1 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 39 values pushed */
          0 1 0 1 131 11 2 2 0 6 6 0 110 9 7 5 3 3 3 6 93 12 10 2 6
          6 20 75 0 4 4 8 95 0 8 8 29 8 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          18
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 39 values pushed */
          0 1 0 1 131 11 2 2 0 6 6 0 110 9 7 5 3 3 3 6 93 12 10 2 6
          6 20 75 0 4 4 8 95 0 8 8 32 8 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 38 values pushed */
          0 1 0 1 131 11 2 2 0 6 0 131 9 7 5 3 3 3 6 93 12 10 2 6 6
          20 75 0 4 4 8 95 0 8 8 32 8 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 31 values pushed */
          7 7 0 0 7 34 7 34 33 32 28 26 22 21 20 19 18 17 14 12 9 8 0 6 0
          6 17 18 13 7 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Udieresis" xMin="14" yMin="-10" xMax="718" yMax="982">
      <contour>
        <pt x="159" y="926" on="0"/>
        <pt x="214" y="982" on="0"/>
        <pt x="254" y="982" on="1"/>
        <pt x="293" y="982" on="0"/>
        <pt x="348" y="926" on="0"/>
        <pt x="348" y="886" on="1"/>
        <pt x="348" y="847" on="0"/>
        <pt x="293" y="791" on="0"/>
        <pt x="254" y="791" on="1"/>
        <pt x="214" y="791" on="0"/>
        <pt x="159" y="847" on="0"/>
        <pt x="159" y="886" on="1"/>
      </contour>
      <contour>
        <pt x="396" y="926" on="0"/>
        <pt x="451" y="982" on="0"/>
        <pt x="491" y="982" on="1"/>
        <pt x="530" y="982" on="0"/>
        <pt x="585" y="926" on="0"/>
        <pt x="585" y="886" on="1"/>
        <pt x="585" y="847" on="0"/>
        <pt x="530" y="791" on="0"/>
        <pt x="491" y="791" on="1"/>
        <pt x="451" y="791" on="0"/>
        <pt x="396" y="847" on="0"/>
        <pt x="396" y="886" on="1"/>
      </contour>
      <contour>
        <pt x="332" y="740" on="1"/>
        <pt x="332" y="588" on="1"/>
        <pt x="263" y="588" on="1"/>
        <pt x="263" y="294" on="1"/>
        <pt x="263" y="225" on="0"/>
        <pt x="322" y="161" on="0"/>
        <pt x="373" y="161" on="1"/>
        <pt x="427" y="161" on="0"/>
        <pt x="483" y="221" on="0"/>
        <pt x="483" y="294" on="1"/>
        <pt x="483" y="588" on="1"/>
        <pt x="401" y="588" on="1"/>
        <pt x="401" y="740" on="1"/>
        <pt x="718" y="740" on="1"/>
        <pt x="718" y="588" on="1"/>
        <pt x="662" y="588" on="1"/>
        <pt x="662" y="317" on="1"/>
        <pt x="662" y="216" on="0"/>
        <pt x="585" y="68" on="0"/>
        <pt x="452" y="-10" on="0"/>
        <pt x="370" y="-10" on="1"/>
        <pt x="289" y="-10" on="0"/>
        <pt x="157" y="67" on="0"/>
        <pt x="81" y="212" on="0"/>
        <pt x="81" y="308" on="1"/>
        <pt x="81" y="588" on="1"/>
        <pt x="14" y="588" on="1"/>
        <pt x="14" y="740" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 36 values pushed */
          2 1 0 3 1 1 7 0 1 103 10 8 6 3 4 4 7 93 12 11 2 7 7 20 75
          0 5 5 9 95 0 9 9 29 9 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 36 values pushed */
          2 1 0 3 1 1 7 0 1 103 10 8 6 3 4 4 7 93 12 11 2 7 7 20 75
          0 5 5 9 95 0 9 9 32 9 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 22 values pushed */
          24 24 24 51 24 51 50 49 45 43 17 17 19 35 20 36 36 36 33 13 7 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Ugrave" xMin="14" yMin="-10" xMax="718" yMax="963">
      <contour>
        <pt x="455" y="809" on="1"/>
        <pt x="357" y="963" on="1"/>
        <pt x="184" y="963" on="1"/>
        <pt x="184" y="950" on="1"/>
        <pt x="328" y="809" on="1"/>
      </contour>
      <contour>
        <pt x="332" y="740" on="1"/>
        <pt x="332" y="588" on="1"/>
        <pt x="263" y="588" on="1"/>
        <pt x="263" y="294" on="1"/>
        <pt x="263" y="225" on="0"/>
        <pt x="322" y="161" on="0"/>
        <pt x="373" y="161" on="1"/>
        <pt x="427" y="161" on="0"/>
        <pt x="483" y="221" on="0"/>
        <pt x="483" y="294" on="1"/>
        <pt x="483" y="588" on="1"/>
        <pt x="401" y="588" on="1"/>
        <pt x="401" y="740" on="1"/>
        <pt x="718" y="740" on="1"/>
        <pt x="718" y="588" on="1"/>
        <pt x="662" y="588" on="1"/>
        <pt x="662" y="317" on="1"/>
        <pt x="662" y="216" on="0"/>
        <pt x="585" y="68" on="0"/>
        <pt x="452" y="-10" on="0"/>
        <pt x="370" y="-10" on="1"/>
        <pt x="289" y="-10" on="0"/>
        <pt x="157" y="67" on="0"/>
        <pt x="81" y="212" on="0"/>
        <pt x="81" y="308" on="1"/>
        <pt x="81" y="588" on="1"/>
        <pt x="14" y="588" on="1"/>
        <pt x="14" y="740" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          3 1 1 0 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 38 values pushed */
          0 0 1 0 131 10 1 1 5 5 1 110 8 6 4 3 2 2 5 93 11 9 2 5 5
          20 75 0 3 3 7 95 0 7 7 29 7 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          18
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 38 values pushed */
          0 0 1 0 131 10 1 1 5 5 1 110 8 6 4 3 2 2 5 93 11 9 2 5 5
          20 75 0 3 3 7 95 0 7 7 32 7 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 37 values pushed */
          0 0 1 0 131 10 1 1 5 1 131 8 6 4 3 2 2 5 93 11 9 2 5 5 20
          75 0 3 3 7 95 0 7 7 32 7 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 30 values pushed */
          5 5 0 0 5 32 5 32 31 30 26 24 20 19 18 17 16 15 12 10 7 6 0 4 0
          4 17 12 7 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="V" xMin="12" yMin="0" xMax="743" yMax="740">
      <contour>
        <pt x="399" y="740" on="1"/>
        <pt x="743" y="740" on="1"/>
        <pt x="743" y="588" on="1"/>
        <pt x="680" y="588" on="1"/>
        <pt x="487" y="0" on="1"/>
        <pt x="269" y="0" on="1"/>
        <pt x="85" y="588" on="1"/>
        <pt x="12" y="588" on="1"/>
        <pt x="12" y="740" on="1"/>
        <pt x="356" y="740" on="1"/>
        <pt x="356" y="588" on="1"/>
        <pt x="272" y="588" on="1"/>
        <pt x="383" y="222" on="1"/>
        <pt x="491" y="588" on="1"/>
        <pt x="399" y="588" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 36 values pushed */
          12 1 2 1 1 74 6 5 3 3 1 1 0 93 4 1 0 0 20 75 0 2 2 21 2
          76 18 17 17 17 17 17 16 7 7 27
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="W" xMin="13" yMin="0" xMax="1155" yMax="740">
      <contour>
        <pt x="810" y="740" on="1"/>
        <pt x="1155" y="740" on="1"/>
        <pt x="1155" y="588" on="1"/>
        <pt x="1085" y="588" on="1"/>
        <pt x="924" y="0" on="1"/>
        <pt x="686" y="0" on="1"/>
        <pt x="590" y="423" on="1"/>
        <pt x="492" y="0" on="1"/>
        <pt x="257" y="0" on="1"/>
        <pt x="90" y="588" on="1"/>
        <pt x="13" y="588" on="1"/>
        <pt x="13" y="740" on="1"/>
        <pt x="357" y="740" on="1"/>
        <pt x="357" y="588" on="1"/>
        <pt x="280" y="588" on="1"/>
        <pt x="369" y="250" on="1"/>
        <pt x="483" y="739" on="1"/>
        <pt x="695" y="739" on="1"/>
        <pt x="807" y="250" on="1"/>
        <pt x="896" y="588" on="1"/>
        <pt x="810" y="588" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 42 values pushed */
          18 15 6 3 2 1 1 74 8 6 4 3 1 1 0 93 7 5 2 0 0 20 75 3 1
          2 2 21 2 76 18 18 17 17 17 18 17 17 16 9 7 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="X" xMin="-7" yMin="0" xMax="743" yMax="740">
      <contour>
        <pt x="621" y="488" on="0"/>
        <pt x="571" y="438" on="1"/>
        <pt x="495" y="364" on="1"/>
        <pt x="662" y="205" on="1"/>
        <pt x="717" y="152" on="1"/>
        <pt x="741" y="152" on="1"/>
        <pt x="741" y="0" on="1"/>
        <pt x="400" y="0" on="1"/>
        <pt x="400" y="152" on="1"/>
        <pt x="470" y="152" on="1"/>
        <pt x="370" y="237" on="1"/>
        <pt x="274" y="152" on="1"/>
        <pt x="333" y="152" on="1"/>
        <pt x="333" y="0" on="1"/>
        <pt x="-7" y="0" on="1"/>
        <pt x="-7" y="152" on="1"/>
        <pt x="21" y="152" on="1"/>
        <pt x="76" y="205" on="1"/>
        <pt x="246" y="364" on="1"/>
        <pt x="197" y="410" on="0"/>
        <pt x="101" y="504" on="1"/>
        <pt x="14" y="588" on="1"/>
        <pt x="-4" y="588" on="1"/>
        <pt x="-4" y="740" on="1"/>
        <pt x="335" y="740" on="1"/>
        <pt x="335" y="588" on="1"/>
        <pt x="259" y="588" on="1"/>
        <pt x="369" y="490" on="1"/>
        <pt x="435" y="549" on="1"/>
        <pt x="478" y="588" on="1"/>
        <pt x="403" y="588" on="1"/>
        <pt x="403" y="740" on="1"/>
        <pt x="743" y="740" on="1"/>
        <pt x="743" y="588" on="1"/>
        <pt x="725" y="588" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 56 values pushed */
          27 18 10 2 4 0 6 1 74 11 9 8 3 6 6 7 93 10 1 7 7 20 75 5 3
          2 3 0 0 1 93 4 1 1 1 21 1 76 34 33 32 31 30 29 17 17 21 17 17 18
          17 17 20 12 7 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Y" xMin="22" yMin="0" xMax="757" yMax="740">
      <contour>
        <pt x="22" y="740" on="1"/>
        <pt x="367" y="740" on="1"/>
        <pt x="367" y="588" on="1"/>
        <pt x="308" y="588" on="1"/>
        <pt x="392" y="442" on="1"/>
        <pt x="482" y="588" on="1"/>
        <pt x="413" y="588" on="1"/>
        <pt x="413" y="740" on="1"/>
        <pt x="757" y="740" on="1"/>
        <pt x="757" y="588" on="1"/>
        <pt x="705" y="588" on="1"/>
        <pt x="481" y="295" on="1"/>
        <pt x="481" y="152" on="1"/>
        <pt x="576" y="152" on="1"/>
        <pt x="576" y="0" on="1"/>
        <pt x="214" y="0" on="1"/>
        <pt x="214" y="152" on="1"/>
        <pt x="301" y="152" on="1"/>
        <pt x="301" y="297" on="1"/>
        <pt x="90" y="588" on="1"/>
        <pt x="22" y="588" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 46 values pushed */
          18 11 4 3 5 1 1 74 8 4 2 3 1 1 0 93 3 1 0 0 20 75 7 1 5
          5 6 93 0 6 6 21 6 76 18 17 17 18 17 17 18 17 16 9 7 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Yacute" xMin="22" yMin="0" xMax="757" yMax="963">
      <contour>
        <pt x="460" y="963" on="1"/>
        <pt x="634" y="963" on="1"/>
        <pt x="634" y="950" on="1"/>
        <pt x="484" y="809" on="1"/>
        <pt x="354" y="809" on="1"/>
      </contour>
      <contour>
        <pt x="22" y="740" on="1"/>
        <pt x="367" y="740" on="1"/>
        <pt x="367" y="588" on="1"/>
        <pt x="308" y="588" on="1"/>
        <pt x="392" y="442" on="1"/>
        <pt x="482" y="588" on="1"/>
        <pt x="413" y="588" on="1"/>
        <pt x="413" y="740" on="1"/>
        <pt x="757" y="740" on="1"/>
        <pt x="757" y="588" on="1"/>
        <pt x="705" y="588" on="1"/>
        <pt x="481" y="295" on="1"/>
        <pt x="481" y="152" on="1"/>
        <pt x="576" y="152" on="1"/>
        <pt x="576" y="0" on="1"/>
        <pt x="214" y="0" on="1"/>
        <pt x="214" y="152" on="1"/>
        <pt x="301" y="152" on="1"/>
        <pt x="301" y="297" on="1"/>
        <pt x="90" y="588" on="1"/>
        <pt x="22" y="588" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 62 values pushed */
          2 1 1 0 23 16 9 3 7 3 2 74 0 0 0 1 2 0 1 101 10 6 4 3 3
          3 2 93 5 1 2 2 20 75 9 1 7 7 8 93 0 8 8 21 8 76 25 24 22 21
          17 18 17 17 18 17 17 18 16 11 7 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Ydieresis" xMin="22" yMin="0" xMax="757" yMax="982">
      <component glyphName="Y" x="0" y="0" flags="0x0"/>
      <component glyphName="dotaccent" x="156" y="223" flags="0x4"/>
      <component glyphName="dotaccent" x="394" y="223" flags="0x4"/>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          1 1
          PUSHB[ ]	/* 1 value pushed */
          223
          PUSHB[ ]	/* 1 value pushed */
          51
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          2 1
          PUSHB[ ]	/* 1 value pushed */
          223
          PUSHB[ ]	/* 1 value pushed */
          51
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Z" xMin="30" yMin="0" xMax="602" yMax="740">
      <contour>
        <pt x="602" y="571" on="1"/>
        <pt x="261" y="167" on="1"/>
        <pt x="420" y="167" on="1"/>
        <pt x="420" y="279" on="1"/>
        <pt x="602" y="279" on="1"/>
        <pt x="602" y="0" on="1"/>
        <pt x="32" y="0" on="1"/>
        <pt x="32" y="168" on="1"/>
        <pt x="363" y="573" on="1"/>
        <pt x="212" y="573" on="1"/>
        <pt x="212" y="459" on="1"/>
        <pt x="30" y="459" on="1"/>
        <pt x="30" y="740" on="1"/>
        <pt x="602" y="740" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 10 values pushed */
          0 1 4 3 7 1 0 1 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          10
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 34 values pushed */
          0 4 3 1 3 4 112 0 1 0 0 1 110 0 3 3 5 93 0 5 5 20 75 0 0
          0 2 94 0 2 2 21 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 36 values pushed */
          0 4 3 1 3 4 1 126 0 1 0 3 1 0 124 0 3 3 5 93 0 5 5 20 75
          0 0 0 2 94 0 2 2 21 2 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 9 values pushed */
          17 17 18 17 17 17 6 7 26
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Zcaron" xMin="30" yMin="0" xMax="602" yMax="947">
      <component glyphName="Z" x="0" y="0" flags="0x0"/>
      <component glyphName="caron" x="107" y="234" flags="0x4"/>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          1 1
          PUSHB[ ]	/* 1 value pushed */
          234
          PUSHB[ ]	/* 1 value pushed */
          51
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="a" xMin="39" yMin="-11" xMax="589" yMax="517">
      <contour>
        <pt x="319" y="1" on="0"/>
        <pt x="274" y="-11" on="0"/>
        <pt x="240" y="-11" on="1"/>
        <pt x="146" y="-11" on="0"/>
        <pt x="39" y="82" on="0"/>
        <pt x="39" y="156" on="1"/>
        <pt x="39" y="224" on="0"/>
        <pt x="136" y="316" on="0"/>
        <pt x="234" y="316" on="1"/>
        <pt x="301" y="316" on="0"/>
        <pt x="355" y="302" on="1"/>
        <pt x="354" y="308" on="1"/>
        <pt x="354" y="339" on="0"/>
        <pt x="302" y="369" on="0"/>
        <pt x="257" y="369" on="1"/>
        <pt x="212" y="369" on="0"/>
        <pt x="144" y="353" on="0"/>
        <pt x="107" y="335" on="1"/>
        <pt x="54" y="441" on="1"/>
        <pt x="110" y="479" on="0"/>
        <pt x="224" y="517" on="0"/>
        <pt x="288" y="517" on="1"/>
        <pt x="393" y="517" on="0"/>
        <pt x="516" y="420" on="0"/>
        <pt x="516" y="311" on="1"/>
        <pt x="517" y="152" on="1"/>
        <pt x="589" y="152" on="1"/>
        <pt x="589" y="0" on="1"/>
        <pt x="355" y="0" on="1"/>
        <pt x="355" y="20" on="1"/>
      </contour>
      <contour>
        <pt x="310" y="118" on="0"/>
        <pt x="355" y="151" on="1"/>
        <pt x="355" y="196" on="1"/>
        <pt x="233" y="196" on="1"/>
        <pt x="220" y="196" on="0"/>
        <pt x="194" y="176" on="0"/>
        <pt x="194" y="160" on="1"/>
        <pt x="194" y="143" on="0"/>
        <pt x="221" y="118" on="0"/>
        <pt x="248" y="118" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          22
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 22 values pushed */
          18 1 2 3 17 1 1 2 10 1 6 1 31 1 7 4 29 1 0 7 5 74
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 22 values pushed */
          18 1 2 3 17 1 1 2 10 1 6 1 31 1 7 4 29 1 5 7 5 74
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          22
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 42 values pushed */
          0 1 0 6 4 1 6 101 0 2 2 3 95 0 3 3 23 75 0 4 4 0 95 5 1
          0 0 32 75 8 1 7 7 0 95 5 1 0 0 32 0 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 40 values pushed */
          0 1 0 6 4 1 6 101 0 2 2 3 95 0 3 3 23 75 0 4 4 5 93 0 5
          5 21 75 8 1 7 7 0 95 0 0 0 32 0 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 38 values pushed */
          0 3 0 2 1 3 2 103 0 1 0 6 4 1 6 101 0 4 4 5 93 0 5 5 21
          75 8 1 7 7 0 95 0 0 0 32 0 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 16 values pushed */
          30 30 30 39 30 38 36 17 19 37 36 36 33 9 7 27
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="aacute" xMin="39" yMin="-11" xMax="589" yMax="729">
      <contour>
        <pt x="316" y="729" on="1"/>
        <pt x="490" y="729" on="1"/>
        <pt x="490" y="716" on="1"/>
        <pt x="340" y="575" on="1"/>
        <pt x="210" y="575" on="1"/>
      </contour>
      <contour>
        <pt x="319" y="1" on="0"/>
        <pt x="274" y="-11" on="0"/>
        <pt x="240" y="-11" on="1"/>
        <pt x="146" y="-11" on="0"/>
        <pt x="39" y="82" on="0"/>
        <pt x="39" y="156" on="1"/>
        <pt x="39" y="224" on="0"/>
        <pt x="136" y="316" on="0"/>
        <pt x="234" y="316" on="1"/>
        <pt x="301" y="316" on="0"/>
        <pt x="355" y="302" on="1"/>
        <pt x="354" y="308" on="1"/>
        <pt x="354" y="339" on="0"/>
        <pt x="302" y="369" on="0"/>
        <pt x="257" y="369" on="1"/>
        <pt x="212" y="369" on="0"/>
        <pt x="144" y="353" on="0"/>
        <pt x="107" y="335" on="1"/>
        <pt x="54" y="441" on="1"/>
        <pt x="110" y="479" on="0"/>
        <pt x="224" y="517" on="0"/>
        <pt x="288" y="517" on="1"/>
        <pt x="393" y="517" on="0"/>
        <pt x="516" y="420" on="0"/>
        <pt x="516" y="311" on="1"/>
        <pt x="517" y="152" on="1"/>
        <pt x="589" y="152" on="1"/>
        <pt x="589" y="0" on="1"/>
        <pt x="355" y="0" on="1"/>
        <pt x="355" y="20" on="1"/>
      </contour>
      <contour>
        <pt x="310" y="118" on="0"/>
        <pt x="355" y="151" on="1"/>
        <pt x="355" y="196" on="1"/>
        <pt x="233" y="196" on="1"/>
        <pt x="220" y="196" on="0"/>
        <pt x="194" y="176" on="0"/>
        <pt x="194" y="160" on="1"/>
        <pt x="194" y="143" on="0"/>
        <pt x="221" y="118" on="0"/>
        <pt x="248" y="118" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          22
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 26 values pushed */
          2 1 1 0 23 1 4 5 22 1 3 4 15 1 8 3 36 1 9 6 34 1 2 9 6
          74
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 26 values pushed */
          2 1 1 0 23 1 4 5 22 1 3 4 15 1 8 3 36 1 9 6 34 1 7 9 6
          74
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          22
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 52 values pushed */
          0 3 0 8 6 3 8 101 0 1 1 0 93 0 0 0 20 75 0 4 4 5 95 0 5
          5 23 75 0 6 6 2 95 7 1 2 2 32 75 10 1 9 9 2 95 7 1 2 2 32
          2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 50 values pushed */
          0 3 0 8 6 3 8 101 0 1 1 0 93 0 0 0 20 75 0 4 4 5 95 0 5
          5 23 75 0 6 6 7 93 0 7 7 21 75 10 1 9 9 2 95 0 2 2 32 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          45
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 48 values pushed */
          0 5 0 4 3 5 4 103 0 3 0 8 6 3 8 101 0 1 1 0 93 0 0 0 20
          75 0 6 6 7 93 0 7 7 21 75 10 1 9 9 2 95 0 2 2 32 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 46 values pushed */
          0 0 0 1 5 0 1 101 0 5 0 4 3 5 4 103 0 3 0 8 6 3 8 101 0
          6 6 7 93 0 7 7 21 75 10 1 9 9 2 95 0 2 2 32 2 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 18 values pushed */
          35 35 35 44 35 43 36 17 19 37 36 36 34 18 16 11 7 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="acircumflex" xMin="39" yMin="-11" xMax="589" yMax="735">
      <contour>
        <pt x="202" y="574" on="1"/>
        <pt x="274" y="649" on="1"/>
        <pt x="349" y="574" on="1"/>
        <pt x="486" y="574" on="1"/>
        <pt x="348" y="735" on="1"/>
        <pt x="200" y="735" on="1"/>
        <pt x="63" y="574" on="1"/>
      </contour>
      <contour>
        <pt x="319" y="1" on="0"/>
        <pt x="274" y="-11" on="0"/>
        <pt x="240" y="-11" on="1"/>
        <pt x="146" y="-11" on="0"/>
        <pt x="39" y="82" on="0"/>
        <pt x="39" y="156" on="1"/>
        <pt x="39" y="224" on="0"/>
        <pt x="136" y="316" on="0"/>
        <pt x="234" y="316" on="1"/>
        <pt x="301" y="316" on="0"/>
        <pt x="355" y="302" on="1"/>
        <pt x="354" y="308" on="1"/>
        <pt x="354" y="339" on="0"/>
        <pt x="302" y="369" on="0"/>
        <pt x="257" y="369" on="1"/>
        <pt x="212" y="369" on="0"/>
        <pt x="144" y="353" on="0"/>
        <pt x="107" y="335" on="1"/>
        <pt x="54" y="441" on="1"/>
        <pt x="110" y="479" on="0"/>
        <pt x="224" y="517" on="0"/>
        <pt x="288" y="517" on="1"/>
        <pt x="393" y="517" on="0"/>
        <pt x="516" y="420" on="0"/>
        <pt x="516" y="311" on="1"/>
        <pt x="517" y="152" on="1"/>
        <pt x="589" y="152" on="1"/>
        <pt x="589" y="0" on="1"/>
        <pt x="355" y="0" on="1"/>
        <pt x="355" y="20" on="1"/>
      </contour>
      <contour>
        <pt x="310" y="118" on="0"/>
        <pt x="355" y="151" on="1"/>
        <pt x="355" y="196" on="1"/>
        <pt x="233" y="196" on="1"/>
        <pt x="220" y="196" on="0"/>
        <pt x="194" y="176" on="0"/>
        <pt x="194" y="160" on="1"/>
        <pt x="194" y="143" on="0"/>
        <pt x="221" y="118" on="0"/>
        <pt x="248" y="118" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          22
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 26 values pushed */
          1 1 0 1 25 1 5 6 24 1 4 5 17 1 9 4 38 1 10 7 36 1 3 10 6
          74
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 26 values pushed */
          1 1 0 1 25 1 5 6 24 1 4 5 17 1 9 4 38 1 10 7 36 1 8 10 6
          74
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          22
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 54 values pushed */
          0 1 0 1 131 11 2 2 0 6 0 131 0 4 0 9 7 4 9 102 0 5 5 6 95
          0 6 6 23 75 0 7 7 3 95 8 1 3 3 32 75 12 1 10 10 3 95 8 1 3
          3 32 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 52 values pushed */
          0 1 0 1 131 11 2 2 0 6 0 131 0 4 0 9 7 4 9 102 0 5 5 6 95
          0 6 6 23 75 0 7 7 8 93 0 8 8 21 75 12 1 10 10 3 95 0 3 3 32
          3 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 50 values pushed */
          0 1 0 1 131 11 2 2 0 6 0 131 0 6 0 5 4 6 5 103 0 4 0 9 7
          4 9 102 0 7 7 8 93 0 8 8 21 75 12 1 10 10 3 95 0 3 3 32 3 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 31 values pushed */
          37 37 0 0 37 46 37 45 41 39 35 34 33 32 29 27 22 20 16 14 10 8 0 6 0
          6 17 18 13 7 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="acute" xMin="12" yMin="575" xMax="292" yMax="729">
      <contour>
        <pt x="118" y="729" on="1"/>
        <pt x="292" y="729" on="1"/>
        <pt x="292" y="716" on="1"/>
        <pt x="142" y="575" on="1"/>
        <pt x="12" y="575" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          6 100
          WCVTP[ ]	/* WriteCVTInPixels */
          NPUSHB[ ]	/* 27 values pushed */
          2 1 1 0 1 74 0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 18 16 2
          7 22
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          6 0
          WCVTP[ ]	/* WriteCVTInPixels */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="adieresis" xMin="39" yMin="-11" xMax="589" yMax="748">
      <contour>
        <pt x="43" y="692" on="0"/>
        <pt x="98" y="748" on="0"/>
        <pt x="138" y="748" on="1"/>
        <pt x="177" y="748" on="0"/>
        <pt x="232" y="692" on="0"/>
        <pt x="232" y="652" on="1"/>
        <pt x="232" y="613" on="0"/>
        <pt x="177" y="557" on="0"/>
        <pt x="138" y="557" on="1"/>
        <pt x="98" y="557" on="0"/>
        <pt x="43" y="613" on="0"/>
        <pt x="43" y="652" on="1"/>
      </contour>
      <contour>
        <pt x="280" y="692" on="0"/>
        <pt x="335" y="748" on="0"/>
        <pt x="375" y="748" on="1"/>
        <pt x="414" y="748" on="0"/>
        <pt x="469" y="692" on="0"/>
        <pt x="469" y="652" on="1"/>
        <pt x="469" y="613" on="0"/>
        <pt x="414" y="557" on="0"/>
        <pt x="375" y="557" on="1"/>
        <pt x="335" y="557" on="0"/>
        <pt x="280" y="613" on="0"/>
        <pt x="280" y="652" on="1"/>
      </contour>
      <contour>
        <pt x="319" y="1" on="0"/>
        <pt x="274" y="-11" on="0"/>
        <pt x="240" y="-11" on="1"/>
        <pt x="146" y="-11" on="0"/>
        <pt x="39" y="82" on="0"/>
        <pt x="39" y="156" on="1"/>
        <pt x="39" y="224" on="0"/>
        <pt x="136" y="316" on="0"/>
        <pt x="234" y="316" on="1"/>
        <pt x="301" y="316" on="0"/>
        <pt x="355" y="302" on="1"/>
        <pt x="354" y="308" on="1"/>
        <pt x="354" y="339" on="0"/>
        <pt x="302" y="369" on="0"/>
        <pt x="257" y="369" on="1"/>
        <pt x="212" y="369" on="0"/>
        <pt x="144" y="353" on="0"/>
        <pt x="107" y="335" on="1"/>
        <pt x="54" y="441" on="1"/>
        <pt x="110" y="479" on="0"/>
        <pt x="224" y="517" on="0"/>
        <pt x="288" y="517" on="1"/>
        <pt x="393" y="517" on="0"/>
        <pt x="516" y="420" on="0"/>
        <pt x="516" y="311" on="1"/>
        <pt x="517" y="152" on="1"/>
        <pt x="589" y="152" on="1"/>
        <pt x="589" y="0" on="1"/>
        <pt x="355" y="0" on="1"/>
        <pt x="355" y="20" on="1"/>
      </contour>
      <contour>
        <pt x="310" y="118" on="0"/>
        <pt x="355" y="151" on="1"/>
        <pt x="355" y="196" on="1"/>
        <pt x="233" y="196" on="1"/>
        <pt x="220" y="196" on="0"/>
        <pt x="194" y="176" on="0"/>
        <pt x="194" y="160" on="1"/>
        <pt x="194" y="143" on="0"/>
        <pt x="221" y="118" on="0"/>
        <pt x="248" y="118" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          22
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 22 values pushed */
          42 1 6 7 41 1 5 6 34 1 10 5 55 1 11 8 53 1 4 11 5 74
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 22 values pushed */
          42 1 6 7 41 1 5 6 34 1 10 5 55 1 11 8 53 1 9 11 5 74
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          22
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 54 values pushed */
          0 5 0 10 8 5 10 101 3 1 1 1 0 95 2 1 0 0 28 75 0 6 6 7 95
          0 7 7 23 75 0 8 8 4 95 9 1 4 4 32 75 12 1 11 11 4 95 9 1 4
          4 32 4 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 52 values pushed */
          0 5 0 10 8 5 10 101 3 1 1 1 0 95 2 1 0 0 28 75 0 6 6 7 95
          0 7 7 23 75 0 8 8 9 93 0 9 9 21 75 12 1 11 11 4 95 0 4 4 32
          4 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 50 values pushed */
          0 7 0 6 5 7 6 103 0 5 0 10 8 5 10 101 3 1 1 1 0 95 2 1 0
          0 28 75 0 8 8 9 93 0 9 9 21 75 12 1 11 11 4 95 0 4 4 32 4 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 22 values pushed */
          54 54 54 63 54 62 58 56 52 51 19 37 36 36 36 36 36 36 33 13 7 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ae" xMin="39" yMin="-13" xMax="891" yMax="531">
      <contour>
        <pt x="514" y="214" on="1"/>
        <pt x="515" y="217" on="0"/>
        <pt x="512" y="220" on="1"/>
        <pt x="519" y="180" on="0"/>
        <pt x="592" y="134" on="0"/>
        <pt x="637" y="134" on="1"/>
        <pt x="670" y="134" on="0"/>
        <pt x="723" y="145" on="0"/>
        <pt x="764" y="157" on="1"/>
        <pt x="788" y="164" on="1"/>
        <pt x="848" y="50" on="1"/>
        <pt x="802" y="23" on="0"/>
        <pt x="750" y="-1" on="0"/>
        <pt x="686" y="-13" on="0"/>
        <pt x="637" y="-13" on="1"/>
        <pt x="566" y="-13" on="0"/>
        <pt x="455" y="36" on="0"/>
        <pt x="417" y="78" on="1"/>
        <pt x="426" y="62" on="1"/>
        <pt x="383" y="28" on="0"/>
        <pt x="301" y="-11" on="0"/>
        <pt x="237" y="-11" on="1"/>
        <pt x="145" y="-11" on="0"/>
        <pt x="39" y="82" on="0"/>
        <pt x="39" y="156" on="1"/>
        <pt x="39" y="224" on="0"/>
        <pt x="136" y="316" on="0"/>
        <pt x="234" y="316" on="1"/>
        <pt x="292" y="316" on="0"/>
        <pt x="350" y="304" on="1"/>
        <pt x="350" y="308" on="1"/>
        <pt x="350" y="369" on="0"/>
        <pt x="257" y="369" on="1"/>
        <pt x="212" y="369" on="0"/>
        <pt x="144" y="353" on="0"/>
        <pt x="107" y="335" on="1"/>
        <pt x="54" y="441" on="1"/>
        <pt x="110" y="479" on="0"/>
        <pt x="224" y="517" on="0"/>
        <pt x="288" y="517" on="1"/>
        <pt x="393" y="517" on="0"/>
        <pt x="449" y="471" on="1"/>
        <pt x="485" y="500" on="0"/>
        <pt x="575" y="531" on="0"/>
        <pt x="625" y="531" on="1"/>
        <pt x="704" y="531" on="0"/>
        <pt x="824" y="460" on="0"/>
        <pt x="890" y="334" on="0"/>
        <pt x="890" y="254" on="1"/>
        <pt x="891" y="248" on="0"/>
        <pt x="891" y="234" on="1"/>
        <pt x="891" y="221" on="0"/>
        <pt x="890" y="214" on="1"/>
      </contour>
      <contour>
        <pt x="541" y="393" on="0"/>
        <pt x="519" y="328" on="1"/>
        <pt x="711" y="328" on="1"/>
        <pt x="702" y="358" on="0"/>
        <pt x="663" y="393" on="0"/>
        <pt x="622" y="393" on="1"/>
      </contour>
      <contour>
        <pt x="284" y="118" on="0"/>
        <pt x="341" y="136" on="0"/>
        <pt x="370" y="153" on="1"/>
        <pt x="363" y="168" on="0"/>
        <pt x="356" y="198" on="1"/>
        <pt x="356" y="196" on="1"/>
        <pt x="233" y="196" on="1"/>
        <pt x="220" y="196" on="0"/>
        <pt x="194" y="176" on="0"/>
        <pt x="194" y="160" on="1"/>
        <pt x="194" y="143" on="0"/>
        <pt x="221" y="118" on="0"/>
        <pt x="248" y="118" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          10
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 26 values pushed */
          41 36 2 4 5 35 1 3 4 29 1 7 3 61 9 2 0 7 18 17 10 3 1 0 5
          74
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 26 values pushed */
          41 36 2 9 5 35 1 3 4 29 1 7 3 61 9 2 0 7 18 17 10 3 1 0 5
          74
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          16
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 26 values pushed */
          41 36 2 9 5 35 1 3 4 29 1 7 3 61 9 2 0 10 18 17 10 3 1 0 5
          74
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          20
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 26 values pushed */
          41 36 2 9 5 35 1 3 4 29 1 7 3 61 9 2 0 10 18 17 10 3 1 11 5
          74
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 26 values pushed */
          41 36 2 9 5 35 1 8 4 29 1 7 3 61 9 2 0 10 18 17 10 3 1 11 5
          74
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          10
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 38 values pushed */
          8 1 3 10 12 2 7 0 3 7 101 13 9 2 4 4 5 95 6 1 5 5 23 75 14
          11 2 0 0 1 95 2 1 1 1 29 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 48 values pushed */
          8 1 3 10 12 2 7 0 3 7 101 13 1 9 9 5 95 6 1 5 5 23 75 0 4
          4 5 95 6 1 5 5 23 75 14 11 2 0 0 1 95 2 1 1 1 29 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          16
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 53 values pushed */
          12 1 7 10 3 7 85 8 1 3 0 10 0 3 10 101 13 1 9 9 5 95 6 1 5
          5 23 75 0 4 4 5 95 6 1 5 5 23 75 14 11 2 0 0 1 95 2 1 1 1
          29 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          18
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 63 values pushed */
          12 1 7 10 3 7 85 8 1 3 0 10 0 3 10 101 13 1 9 9 5 95 6 1 5
          5 23 75 0 4 4 5 95 6 1 5 5 23 75 0 0 0 1 95 2 1 1 1 29 75
          14 1 11 11 1 95 2 1 1 1 29 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          20
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 61 values pushed */
          12 1 7 10 3 7 85 8 1 3 0 10 0 3 10 101 13 1 9 9 6 95 0 6 6
          31 75 0 4 4 5 95 0 5 5 23 75 0 0 0 1 95 2 1 1 1 29 75 14 1
          11 11 1 95 2 1 1 1 29 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 62 values pushed */
          0 8 12 1 7 10 8 7 101 0 3 0 10 0 3 10 101 13 1 9 9 6 95 0 6
          6 31 75 0 4 4 5 95 0 5 5 23 75 0 0 0 1 95 2 1 1 1 29 75 14
          1 11 11 1 95 2 1 1 1 29 1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 58 values pushed */
          0 6 13 1 9 4 6 9 103 0 5 0 4 8 5 4 103 0 8 12 1 7 10 8 7
          101 0 3 0 10 0 3 10 101 0 0 0 1 95 2 1 1 1 29 75 14 1 11 11 1
          95 2 1 1 1 29 1 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 32 values pushed */
          59 59 53 53 0 0 59 71 59 70 66 63 53 58 53 57 55 54 0 52 0 51 35 37 35
          36 37 39 36 15 7 27
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="agrave" xMin="39" yMin="-11" xMax="589" yMax="729">
      <contour>
        <pt x="369" y="575" on="1"/>
        <pt x="271" y="729" on="1"/>
        <pt x="98" y="729" on="1"/>
        <pt x="98" y="716" on="1"/>
        <pt x="242" y="575" on="1"/>
      </contour>
      <contour>
        <pt x="319" y="1" on="0"/>
        <pt x="274" y="-11" on="0"/>
        <pt x="240" y="-11" on="1"/>
        <pt x="146" y="-11" on="0"/>
        <pt x="39" y="82" on="0"/>
        <pt x="39" y="156" on="1"/>
        <pt x="39" y="224" on="0"/>
        <pt x="136" y="316" on="0"/>
        <pt x="234" y="316" on="1"/>
        <pt x="301" y="316" on="0"/>
        <pt x="355" y="302" on="1"/>
        <pt x="354" y="308" on="1"/>
        <pt x="354" y="339" on="0"/>
        <pt x="302" y="369" on="0"/>
        <pt x="257" y="369" on="1"/>
        <pt x="212" y="369" on="0"/>
        <pt x="144" y="353" on="0"/>
        <pt x="107" y="335" on="1"/>
        <pt x="54" y="441" on="1"/>
        <pt x="110" y="479" on="0"/>
        <pt x="224" y="517" on="0"/>
        <pt x="288" y="517" on="1"/>
        <pt x="393" y="517" on="0"/>
        <pt x="516" y="420" on="0"/>
        <pt x="516" y="311" on="1"/>
        <pt x="517" y="152" on="1"/>
        <pt x="589" y="152" on="1"/>
        <pt x="589" y="0" on="1"/>
        <pt x="355" y="0" on="1"/>
        <pt x="355" y="20" on="1"/>
      </contour>
      <contour>
        <pt x="310" y="118" on="0"/>
        <pt x="355" y="151" on="1"/>
        <pt x="355" y="196" on="1"/>
        <pt x="233" y="196" on="1"/>
        <pt x="220" y="196" on="0"/>
        <pt x="194" y="176" on="0"/>
        <pt x="194" y="160" on="1"/>
        <pt x="194" y="143" on="0"/>
        <pt x="221" y="118" on="0"/>
        <pt x="248" y="118" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          22
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 26 values pushed */
          3 1 1 0 23 1 4 5 22 1 3 4 15 1 8 3 36 1 9 6 34 1 2 9 6
          74
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 26 values pushed */
          3 1 1 0 23 1 4 5 22 1 3 4 15 1 8 3 36 1 9 6 34 1 7 9 6
          74
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          22
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 54 values pushed */
          0 0 1 0 131 10 1 1 5 5 1 110 0 3 0 8 6 3 8 101 0 4 4 5 95
          0 5 5 23 75 0 6 6 2 95 7 1 2 2 32 75 11 1 9 9 2 95 7 1 2
          2 32 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 51 values pushed */
          0 0 1 0 131 10 1 1 5 1 131 0 3 0 8 6 3 8 101 0 4 4 5 95 0
          5 5 23 75 0 6 6 7 93 0 7 7 21 75 11 1 9 9 2 95 0 2 2 32 2
          76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 49 values pushed */
          0 0 1 0 131 10 1 1 5 1 131 0 5 0 4 3 5 4 104 0 3 0 8 6 3
          8 101 0 6 6 7 93 0 7 7 21 75 11 1 9 9 2 95 0 2 2 32 2 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 30 values pushed */
          35 35 0 0 35 44 35 43 39 37 33 32 31 30 27 25 20 18 14 12 8 6 0 4 0
          4 17 12 7 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ampersand" xMin="35" yMin="-32" xMax="697" yMax="790">
      <contour>
        <pt x="654" y="44" on="1"/>
        <pt x="697" y="82" on="1"/>
        <pt x="637" y="143" on="1"/>
        <pt x="576" y="203" on="1"/>
        <pt x="619" y="298" on="0"/>
        <pt x="621" y="395" on="1"/>
        <pt x="456" y="395" on="1"/>
        <pt x="445" y="334" on="1"/>
        <pt x="389" y="392" on="1"/>
        <pt x="503" y="478" on="0"/>
        <pt x="503" y="586" on="1"/>
        <pt x="503" y="639" on="0"/>
        <pt x="450" y="733" on="0"/>
        <pt x="353" y="790" on="0"/>
        <pt x="290" y="790" on="1"/>
        <pt x="230" y="790" on="0"/>
        <pt x="130" y="733" on="0"/>
        <pt x="72" y="639" on="0"/>
        <pt x="72" y="585" on="1"/>
        <pt x="72" y="534" on="0"/>
        <pt x="100" y="465" on="0"/>
        <pt x="135" y="421" on="1"/>
        <pt x="117" y="399" on="0"/>
        <pt x="102" y="382" on="1"/>
        <pt x="76" y="353" on="0"/>
        <pt x="51" y="315" on="0"/>
        <pt x="35" y="264" on="0"/>
        <pt x="35" y="227" on="1"/>
        <pt x="35" y="162" on="0"/>
        <pt x="99" y="55" on="0"/>
        <pt x="210" y="-7" on="0"/>
        <pt x="277" y="-7" on="1"/>
        <pt x="392" y="-7" on="0"/>
        <pt x="476" y="66" on="1"/>
        <pt x="568" y="-32" on="1"/>
      </contour>
      <contour>
        <pt x="301" y="521" on="0"/>
        <pt x="274" y="504" on="1"/>
        <pt x="254" y="526" on="1"/>
        <pt x="245" y="534" on="0"/>
        <pt x="233" y="567" on="0"/>
        <pt x="233" y="586" on="1"/>
        <pt x="233" y="608" on="0"/>
        <pt x="265" y="637" on="0"/>
        <pt x="290" y="637" on="1"/>
        <pt x="310" y="637" on="0"/>
        <pt x="338" y="607" on="0"/>
        <pt x="338" y="586" on="1"/>
        <pt x="338" y="564" on="0"/>
        <pt x="326" y="535" on="0"/>
        <pt x="310" y="525" on="1"/>
      </contour>
      <contour>
        <pt x="268" y="301" on="0"/>
        <pt x="276" y="275" on="1"/>
        <pt x="360" y="187" on="1"/>
        <pt x="328" y="165" on="0"/>
        <pt x="281" y="165" on="1"/>
        <pt x="250" y="165" on="0"/>
        <pt x="213" y="205" on="0"/>
        <pt x="213" y="230" on="1"/>
        <pt x="213" y="257" on="0"/>
        <pt x="236" y="285" on="0"/>
        <pt x="266" y="307" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 59 values pushed */
          36 21 2 0 3 60 52 8 7 3 5 4 0 33 1 2 2 4 3 74 34 1 2 71 0
          0 3 4 3 0 4 126 0 1 0 3 0 1 3 103 0 4 4 2 95 0 2 2 32 2
          76 41 42 47 39 21 5 7 25
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="aring" xMin="39" yMin="-11" xMax="589" yMax="933">
      <contour>
        <pt x="301" y="933" on="0"/>
        <pt x="377" y="888" on="0"/>
        <pt x="422" y="812" on="0"/>
        <pt x="422" y="767" on="1"/>
        <pt x="422" y="722" on="0"/>
        <pt x="377" y="646" on="0"/>
        <pt x="301" y="601" on="0"/>
        <pt x="256" y="601" on="1"/>
        <pt x="211" y="601" on="0"/>
        <pt x="135" y="646" on="0"/>
        <pt x="91" y="722" on="0"/>
        <pt x="91" y="767" on="1"/>
        <pt x="91" y="812" on="0"/>
        <pt x="135" y="888" on="0"/>
        <pt x="211" y="933" on="0"/>
        <pt x="256" y="933" on="1"/>
      </contour>
      <contour>
        <pt x="192" y="739" on="0"/>
        <pt x="229" y="702" on="0"/>
        <pt x="256" y="702" on="1"/>
        <pt x="284" y="702" on="0"/>
        <pt x="320" y="739" on="0"/>
        <pt x="320" y="767" on="1"/>
        <pt x="320" y="794" on="0"/>
        <pt x="284" y="830" on="0"/>
        <pt x="256" y="830" on="1"/>
        <pt x="229" y="830" on="0"/>
        <pt x="192" y="794" on="0"/>
        <pt x="192" y="767" on="1"/>
      </contour>
      <contour>
        <pt x="319" y="1" on="0"/>
        <pt x="274" y="-11" on="0"/>
        <pt x="240" y="-11" on="1"/>
        <pt x="146" y="-11" on="0"/>
        <pt x="39" y="82" on="0"/>
        <pt x="39" y="156" on="1"/>
        <pt x="39" y="224" on="0"/>
        <pt x="136" y="316" on="0"/>
        <pt x="234" y="316" on="1"/>
        <pt x="301" y="316" on="0"/>
        <pt x="355" y="302" on="1"/>
        <pt x="354" y="308" on="1"/>
        <pt x="354" y="339" on="0"/>
        <pt x="302" y="369" on="0"/>
        <pt x="257" y="369" on="1"/>
        <pt x="212" y="369" on="0"/>
        <pt x="144" y="353" on="0"/>
        <pt x="107" y="335" on="1"/>
        <pt x="54" y="441" on="1"/>
        <pt x="110" y="479" on="0"/>
        <pt x="224" y="517" on="0"/>
        <pt x="288" y="517" on="1"/>
        <pt x="393" y="517" on="0"/>
        <pt x="516" y="420" on="0"/>
        <pt x="516" y="311" on="1"/>
        <pt x="517" y="152" on="1"/>
        <pt x="589" y="152" on="1"/>
        <pt x="589" y="0" on="1"/>
        <pt x="355" y="0" on="1"/>
        <pt x="355" y="20" on="1"/>
      </contour>
      <contour>
        <pt x="310" y="118" on="0"/>
        <pt x="355" y="151" on="1"/>
        <pt x="355" y="196" on="1"/>
        <pt x="233" y="196" on="1"/>
        <pt x="220" y="196" on="0"/>
        <pt x="194" y="176" on="0"/>
        <pt x="194" y="160" on="1"/>
        <pt x="194" y="143" on="0"/>
        <pt x="221" y="118" on="0"/>
        <pt x="248" y="118" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          22
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 22 values pushed */
          46 1 6 7 45 1 5 6 38 1 10 5 59 1 11 8 57 1 4 11 5 74
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 22 values pushed */
          46 1 6 7 45 1 5 6 38 1 10 5 59 1 11 8 57 1 9 11 5 74
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          22
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 59 values pushed */
          12 1 1 0 3 2 1 3 103 0 2 0 0 7 2 0 103 0 5 0 10 8 5 10 101
          0 6 6 7 95 0 7 7 23 75 0 8 8 4 95 9 1 4 4 32 75 13 1 11 11
          4 95 9 1 4 4 32 4 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 57 values pushed */
          12 1 1 0 3 2 1 3 103 0 2 0 0 7 2 0 103 0 5 0 10 8 5 10 101
          0 6 6 7 95 0 7 7 23 75 0 8 8 9 93 0 9 9 21 75 13 1 11 11 4
          95 0 4 4 32 4 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 55 values pushed */
          12 1 1 0 3 2 1 3 103 0 2 0 0 7 2 0 103 0 7 0 6 5 7 6 103
          0 5 0 10 8 5 10 101 0 8 8 9 93 0 9 9 21 75 13 1 11 11 4 95 0
          4 4 32 4 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 34 values pushed */
          58 58 0 0 58 67 58 66 62 60 56 55 54 53 50 48 43 41 37 35 31 29 25 23 19
          17 0 15 0 14 38 14 7 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="asciicircum" xMin="34" yMin="353" xMax="564" yMax="739">
      <contour>
        <pt x="367" y="739" on="1"/>
        <pt x="564" y="353" on="1"/>
        <pt x="420" y="353" on="1"/>
        <pt x="301" y="594" on="1"/>
        <pt x="175" y="353" on="1"/>
        <pt x="34" y="353" on="1"/>
        <pt x="239" y="739" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          6 100
          WCVTP[ ]	/* WriteCVTInPixels */
          NPUSHB[ ]	/* 28 values pushed */
          3 1 0 2 1 74 3 1 2 0 2 131 1 1 0 0 116 0 0 0 6 0 6 18 17
          4 7 22
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          6 0
          WCVTP[ ]	/* WriteCVTInPixels */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="asciitilde" xMin="-33" yMin="232" xMax="428" yMax="442">
      <contour>
        <pt x="-33" y="269" on="0"/>
        <pt x="-33" y="286" on="1"/>
        <pt x="-33" y="322" on="0"/>
        <pt x="-6" y="394" on="0"/>
        <pt x="56" y="442" on="0"/>
        <pt x="106" y="442" on="1"/>
        <pt x="118" y="442" on="0"/>
        <pt x="159" y="424" on="0"/>
        <pt x="191" y="407" on="1"/>
        <pt x="228" y="388" on="0"/>
        <pt x="269" y="370" on="0"/>
        <pt x="282" y="370" on="1"/>
        <pt x="301" y="370" on="0"/>
        <pt x="318" y="387" on="0"/>
        <pt x="318" y="405" on="1"/>
        <pt x="318" y="415" on="0"/>
        <pt x="317" y="421" on="1"/>
        <pt x="426" y="414" on="1"/>
        <pt x="428" y="406" on="0"/>
        <pt x="428" y="386" on="1"/>
        <pt x="428" y="350" on="0"/>
        <pt x="399" y="280" on="0"/>
        <pt x="331" y="232" on="0"/>
        <pt x="276" y="232" on="1"/>
        <pt x="249" y="232" on="0"/>
        <pt x="200" y="253" on="0"/>
        <pt x="167" y="273" on="1"/>
        <pt x="163" y="275" on="0"/>
        <pt x="133" y="292" on="0"/>
        <pt x="111" y="300" on="0"/>
        <pt x="103" y="300" on="1"/>
        <pt x="68" y="300" on="0"/>
        <pt x="68" y="270" on="1"/>
        <pt x="68" y="263" on="0"/>
        <pt x="71" y="251" on="1"/>
        <pt x="-30" y="255" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          6 100
          WCVTP[ ]	/* WriteCVTInPixels */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          PUSHB[ ]	/* 6 values pushed */
          32 1 3 4 1 74
          ELSE[ ]	/* Else */
          PUSHB[ ]	/* 6 values pushed */
          32 1 5 4 1 74
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          10
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 26 values pushed */
          0 1 4 3 1 87 2 1 0 0 4 3 0 4 103 0 1 1 3 96 5 1 3 1 3
          80
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 32 values pushed */
          0 2 0 1 1 2 112 0 1 4 3 1 87 0 0 0 4 3 0 4 103 0 1 1 3
          96 5 1 3 1 3 80
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          28
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 38 values pushed */
          0 2 0 1 1 2 112 0 5 4 3 4 5 112 0 1 4 3 1 87 0 0 0 4 5
          0 4 103 0 1 1 3 96 0 3 1 3 80
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 40 values pushed */
          0 2 0 1 0 2 1 126 0 5 4 3 4 5 3 126 0 1 4 3 1 87 0 0 0
          4 5 0 4 103 0 1 1 3 96 0 3 1 3 80
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 9 values pushed */
          19 37 37 35 36 36 6 7 26
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          6 0
          WCVTP[ ]	/* WriteCVTInPixels */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="asterisk" xMin="30" yMin="357" xMax="493" yMax="801">
      <contour>
        <pt x="332" y="678" on="1"/>
        <pt x="448" y="715" on="1"/>
        <pt x="493" y="579" on="1"/>
        <pt x="377" y="541" on="1"/>
        <pt x="448" y="443" on="1"/>
        <pt x="333" y="358" on="1"/>
        <pt x="261" y="459" on="1"/>
        <pt x="189" y="357" on="1"/>
        <pt x="74" y="443" on="1"/>
        <pt x="144" y="541" on="1"/>
        <pt x="30" y="579" on="1"/>
        <pt x="75" y="714" on="1"/>
        <pt x="190" y="677" on="1"/>
        <pt x="190" y="801" on="1"/>
        <pt x="332" y="801" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 24 values pushed */
          12 11 10 9 8 7 6 5 4 3 2 1 0 13 0 71 0 0 0 116 29 1 7 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="at" xMin="100" yMin="-218" xMax="1019" yMax="699">
      <contour>
        <pt x="630" y="467" on="1"/>
        <pt x="786" y="467" on="1"/>
        <pt x="742" y="509" on="0"/>
        <pt x="625" y="557" on="0"/>
        <pt x="559" y="557" on="1"/>
        <pt x="473" y="557" on="0"/>
        <pt x="328" y="472" on="0"/>
        <pt x="244" y="327" on="0"/>
        <pt x="244" y="241" on="1"/>
        <pt x="244" y="155" on="0"/>
        <pt x="328" y="9" on="0"/>
        <pt x="473" y="-76" on="0"/>
        <pt x="559" y="-76" on="1"/>
        <pt x="643" y="-76" on="0"/>
        <pt x="743" y="-17" on="1"/>
        <pt x="818" y="-140" on="1"/>
        <pt x="755" y="-178" on="0"/>
        <pt x="622" y="-218" on="0"/>
        <pt x="559" y="-218" on="1"/>
        <pt x="434" y="-218" on="0"/>
        <pt x="223" y="-95" on="0"/>
        <pt x="100" y="116" on="0"/>
        <pt x="100" y="241" on="1"/>
        <pt x="100" y="366" on="0"/>
        <pt x="223" y="576" on="0"/>
        <pt x="434" y="699" on="0"/>
        <pt x="559" y="699" on="1"/>
        <pt x="685" y="699" on="0"/>
        <pt x="896" y="581" on="0"/>
        <pt x="1019" y="381" on="0"/>
        <pt x="1019" y="264" on="1"/>
        <pt x="1019" y="196" on="0"/>
        <pt x="965" y="71" on="0"/>
        <pt x="861" y="-8" on="0"/>
        <pt x="790" y="-8" on="1"/>
        <pt x="715" y="-8" on="0"/>
        <pt x="674" y="37" on="1"/>
        <pt x="647" y="14" on="0"/>
        <pt x="579" y="-13" on="0"/>
        <pt x="550" y="-13" on="1"/>
        <pt x="478" y="-13" on="0"/>
        <pt x="363" y="55" on="0"/>
        <pt x="297" y="169" on="0"/>
        <pt x="297" y="234" on="1"/>
        <pt x="297" y="298" on="0"/>
        <pt x="358" y="409" on="0"/>
        <pt x="468" y="476" on="0"/>
        <pt x="537" y="476" on="1"/>
        <pt x="582" y="476" on="0"/>
        <pt x="630" y="461" on="1"/>
      </contour>
      <contour>
        <pt x="877" y="320" on="0"/>
        <pt x="830" y="425" on="0"/>
        <pt x="788" y="465" on="1"/>
        <pt x="788" y="154" on="1"/>
        <pt x="787" y="136" on="0"/>
        <pt x="802" y="115" on="0"/>
        <pt x="813" y="115" on="1"/>
        <pt x="848" y="115" on="0"/>
        <pt x="877" y="199" on="0"/>
        <pt x="877" y="263" on="1"/>
      </contour>
      <contour>
        <pt x="630" y="262" on="1"/>
        <pt x="619" y="289" on="0"/>
        <pt x="576" y="321" on="0"/>
        <pt x="552" y="321" on="1"/>
        <pt x="518" y="321" on="0"/>
        <pt x="466" y="270" on="0"/>
        <pt x="466" y="234" on="1"/>
        <pt x="466" y="196" on="0"/>
        <pt x="516" y="149" on="0"/>
        <pt x="550" y="149" on="1"/>
        <pt x="573" y="149" on="0"/>
        <pt x="616" y="176" on="0"/>
        <pt x="630" y="201" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          20
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 23 values pushed */
          52 1 0 1 72 60 2 10 9 36 1 5 8 14 1 2 5 15 1 3 2 5 74
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          46
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 23 values pushed */
          52 1 0 7 72 60 2 10 9 36 1 5 8 14 1 2 5 15 1 3 2 5 74
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 23 values pushed */
          52 1 0 7 72 60 2 10 9 36 1 5 8 14 1 2 6 15 1 3 2 5 74
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          10
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 51 values pushed */
          0 4 0 1 0 4 1 103 7 11 2 0 0 9 10 0 9 103 0 10 10 5 95 6 1
          5 5 29 75 0 8 8 5 96 6 1 5 5 29 75 0 2 2 3 95 0 3 3 25 3
          76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 51 values pushed */
          0 4 0 1 0 4 1 103 7 11 2 0 0 9 10 0 9 103 0 10 10 5 95 6 1
          5 5 32 75 0 8 8 5 96 6 1 5 5 32 75 0 2 2 3 95 0 3 3 25 3
          76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          14
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 51 values pushed */
          0 4 0 1 0 4 1 103 7 11 2 0 0 9 10 0 9 103 0 10 10 5 95 6 1
          5 5 29 75 0 8 8 5 96 6 1 5 5 29 75 0 2 2 3 95 0 3 3 25 3
          76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          20
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 51 values pushed */
          0 4 0 1 0 4 1 103 7 11 2 0 0 9 10 0 9 103 0 10 10 5 95 6 1
          5 5 32 75 0 8 8 5 96 6 1 5 5 32 75 0 2 2 3 95 0 3 3 25 3
          76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          45
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 58 values pushed */
          11 1 0 7 9 7 0 9 126 0 4 0 1 7 4 1 103 0 7 0 9 10 7 9 103
          0 10 10 5 95 6 1 5 5 32 75 0 8 8 5 96 6 1 5 5 32 75 0 2 2
          3 95 0 3 3 25 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          46
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 55 values pushed */
          11 1 0 7 9 7 0 9 126 0 4 0 1 7 4 1 103 0 7 0 9 10 7 9 103
          0 2 0 3 2 3 99 0 10 10 5 95 6 1 5 5 32 75 0 8 8 5 96 6 1
          5 5 32 5 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 53 values pushed */
          11 1 0 7 9 7 0 9 126 0 4 0 1 7 4 1 103 0 7 0 9 10 7 9 103
          0 2 0 3 2 3 99 0 8 8 5 96 0 5 5 32 75 0 10 10 6 95 0 6 6
          29 6 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 29 values pushed */
          1 0 70 68 64 62 57 55 48 46 40 38 35 33 27 25 19 17 13 11 5 3 0 49 1
          49 12 7 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="atilde" xMin="15" yMin="-11" xMax="589" yMax="733">
      <contour>
        <pt x="182" y="733" on="0"/>
        <pt x="215" y="722" on="0"/>
        <pt x="245" y="710" on="1"/>
        <pt x="272" y="699" on="0"/>
        <pt x="300" y="690" on="0"/>
        <pt x="314" y="690" on="1"/>
        <pt x="338" y="690" on="0"/>
        <pt x="372" y="704" on="0"/>
        <pt x="387" y="721" on="1"/>
        <pt x="471" y="681" on="1"/>
        <pt x="453" y="634" on="0"/>
        <pt x="373" y="570" on="0"/>
        <pt x="327" y="570" on="1"/>
        <pt x="303" y="570" on="0"/>
        <pt x="262" y="581" on="0"/>
        <pt x="236" y="592" on="1"/>
        <pt x="190" y="611" on="0"/>
        <pt x="162" y="611" on="1"/>
        <pt x="144" y="611" on="0"/>
        <pt x="118" y="598" on="0"/>
        <pt x="100" y="584" on="0"/>
        <pt x="97" y="582" on="1"/>
        <pt x="15" y="619" on="1"/>
        <pt x="24" y="653" on="0"/>
        <pt x="77" y="705" on="0"/>
        <pt x="141" y="733" on="0"/>
        <pt x="165" y="733" on="1"/>
      </contour>
      <contour>
        <pt x="319" y="1" on="0"/>
        <pt x="274" y="-11" on="0"/>
        <pt x="240" y="-11" on="1"/>
        <pt x="146" y="-11" on="0"/>
        <pt x="39" y="82" on="0"/>
        <pt x="39" y="156" on="1"/>
        <pt x="39" y="224" on="0"/>
        <pt x="136" y="316" on="0"/>
        <pt x="234" y="316" on="1"/>
        <pt x="301" y="316" on="0"/>
        <pt x="355" y="302" on="1"/>
        <pt x="354" y="308" on="1"/>
        <pt x="354" y="339" on="0"/>
        <pt x="302" y="369" on="0"/>
        <pt x="257" y="369" on="1"/>
        <pt x="212" y="369" on="0"/>
        <pt x="144" y="353" on="0"/>
        <pt x="107" y="335" on="1"/>
        <pt x="54" y="441" on="1"/>
        <pt x="110" y="479" on="0"/>
        <pt x="224" y="517" on="0"/>
        <pt x="288" y="517" on="1"/>
        <pt x="393" y="517" on="0"/>
        <pt x="516" y="420" on="0"/>
        <pt x="516" y="311" on="1"/>
        <pt x="517" y="152" on="1"/>
        <pt x="589" y="152" on="1"/>
        <pt x="589" y="0" on="1"/>
        <pt x="355" y="0" on="1"/>
        <pt x="355" y="20" on="1"/>
      </contour>
      <contour>
        <pt x="310" y="118" on="0"/>
        <pt x="355" y="151" on="1"/>
        <pt x="355" y="196" on="1"/>
        <pt x="233" y="196" on="1"/>
        <pt x="220" y="196" on="0"/>
        <pt x="194" y="176" on="0"/>
        <pt x="194" y="160" on="1"/>
        <pt x="194" y="143" on="0"/>
        <pt x="221" y="118" on="0"/>
        <pt x="248" y="118" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          22
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 31 values pushed */
          8 1 0 3 22 9 2 2 0 45 1 6 7 44 1 5 6 37 1 10 5 58 1 11 8
          56 1 4 11 7 74
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 31 values pushed */
          8 1 0 3 22 9 2 2 0 45 1 6 7 44 1 5 6 37 1 10 5 58 1 11 8
          56 1 9 11 7 74
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          22
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 61 values pushed */
          0 0 0 1 7 0 1 103 0 5 0 10 8 5 10 101 0 2 2 3 95 12 1 3 3
          20 75 0 6 6 7 95 0 7 7 23 75 0 8 8 4 95 9 1 4 4 32 75 13 1
          11 11 4 95 9 1 4 4 32 4 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 59 values pushed */
          0 0 0 1 7 0 1 103 0 5 0 10 8 5 10 101 0 2 2 3 95 12 1 3 3
          20 75 0 6 6 7 95 0 7 7 23 75 0 8 8 9 93 0 9 9 21 75 13 1 11
          11 4 95 0 4 4 32 4 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 57 values pushed */
          0 0 0 1 7 0 1 103 0 7 0 6 5 7 6 103 0 5 0 10 8 5 10 101 0
          2 2 3 95 12 1 3 3 20 75 0 8 8 9 93 0 9 9 21 75 13 1 11 11 4
          95 0 4 4 32 4 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 32 values pushed */
          57 57 0 0 57 66 57 65 61 59 55 54 53 52 49 47 42 40 36 34 30 28 0 26 0
          25 35 37 36 14 7 23
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="b" xMin="9" yMin="-9" xMax="621" yMax="760">
      <contour>
        <pt x="424" y="522" on="0"/>
        <pt x="549" y="448" on="0"/>
        <pt x="621" y="325" on="0"/>
        <pt x="621" y="254" on="1"/>
        <pt x="621" y="184" on="0"/>
        <pt x="553" y="63" on="0"/>
        <pt x="431" y="-9" on="0"/>
        <pt x="356" y="-9" on="1"/>
        <pt x="304" y="-9" on="0"/>
        <pt x="250" y="8" on="1"/>
        <pt x="250" y="0" on="1"/>
        <pt x="79" y="0" on="1"/>
        <pt x="79" y="608" on="1"/>
        <pt x="9" y="608" on="1"/>
        <pt x="9" y="760" on="1"/>
        <pt x="250" y="760" on="1"/>
        <pt x="250" y="506" on="1"/>
        <pt x="299" y="522" on="0"/>
        <pt x="348" y="522" on="1"/>
      </contour>
      <contour>
        <pt x="389" y="146" on="0"/>
        <pt x="453" y="207" on="0"/>
        <pt x="453" y="254" on="1"/>
        <pt x="453" y="304" on="0"/>
        <pt x="389" y="367" on="0"/>
        <pt x="343" y="367" on="1"/>
        <pt x="283" y="367" on="0"/>
        <pt x="250" y="311" on="1"/>
        <pt x="250" y="202" on="1"/>
        <pt x="266" y="176" on="0"/>
        <pt x="315" y="146" on="0"/>
        <pt x="343" y="146" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 11 values pushed */
          16 1 5 4 27 26 2 6 5 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          18
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 34 values pushed */
          0 2 2 3 93 0 3 3 22 75 0 5 5 4 95 7 1 4 4 31 75 8 1 6 6
          0 95 1 1 0 0 32 0 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 38 values pushed */
          0 2 2 3 93 0 3 3 22 75 0 5 5 4 95 7 1 4 4 31 75 0 1 1 21
          75 8 1 6 6 0 95 0 0 0 32 0 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 36 values pushed */
          7 1 4 0 5 6 4 5 103 0 2 2 3 93 0 3 3 22 75 0 1 1 21 75 8
          1 6 6 0 95 0 0 0 32 0 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 21 values pushed */
          19 19 0 0 19 30 19 29 25 23 0 18 0 17 17 17 33 38 9 7 24
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="backslash" xMin="-3" yMin="-190" xMax="381" yMax="642">
      <contour>
        <pt x="-3" y="642" on="1"/>
        <pt x="125" y="642" on="1"/>
        <pt x="381" y="-190" on="1"/>
        <pt x="249" y="-190" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 14 values pushed */
          0 0 1 0 131 0 1 1 116 17 16 2 7 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="bar" xMin="55" yMin="-132" xMax="195" yMax="844">
      <contour>
        <pt x="55" y="844" on="1"/>
        <pt x="195" y="844" on="1"/>
        <pt x="195" y="-132" on="1"/>
        <pt x="55" y="-132" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 21 values pushed */
          0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 17 16 2 7 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="braceleft" xMin="45" yMin="-177" xMax="453" yMax="903">
      <contour>
        <pt x="65" y="418" on="0"/>
        <pt x="85" y="418" on="1"/>
        <pt x="117" y="417" on="1"/>
        <pt x="139" y="417" on="0"/>
        <pt x="162" y="436" on="0"/>
        <pt x="173" y="501" on="0"/>
        <pt x="173" y="570" on="1"/>
        <pt x="173" y="731" on="1"/>
        <pt x="173" y="773" on="0"/>
        <pt x="178" y="794" on="1"/>
        <pt x="192" y="856" on="0"/>
        <pt x="264" y="903" on="0"/>
        <pt x="336" y="903" on="1"/>
        <pt x="370" y="903" on="0"/>
        <pt x="420" y="900" on="0"/>
        <pt x="447" y="897" on="0"/>
        <pt x="441" y="897" on="1"/>
        <pt x="441" y="818" on="1"/>
        <pt x="453" y="716" on="1"/>
        <pt x="416" y="714" on="0"/>
        <pt x="384" y="704" on="0"/>
        <pt x="373" y="679" on="0"/>
        <pt x="373" y="649" on="1"/>
        <pt x="373" y="438" on="1"/>
        <pt x="373" y="410" on="0"/>
        <pt x="358" y="379" on="0"/>
        <pt x="327" y="364" on="1"/>
        <pt x="357" y="352" on="0"/>
        <pt x="380" y="304" on="0"/>
        <pt x="380" y="272" on="1"/>
        <pt x="380" y="254" on="0"/>
        <pt x="376" y="222" on="1"/>
        <pt x="375" y="214" on="0"/>
        <pt x="373" y="195" on="0"/>
        <pt x="373" y="184" on="1"/>
        <pt x="373" y="97" on="1"/>
        <pt x="373" y="61" on="0"/>
        <pt x="383" y="33" on="0"/>
        <pt x="413" y="25" on="0"/>
        <pt x="453" y="23" on="1"/>
        <pt x="441" y="-85" on="1"/>
        <pt x="441" y="-172" on="1"/>
        <pt x="441" y="-173" on="0"/>
        <pt x="420" y="-175" on="0"/>
        <pt x="370" y="-177" on="0"/>
        <pt x="336" y="-177" on="1"/>
        <pt x="277" y="-177" on="0"/>
        <pt x="207" y="-144" on="0"/>
        <pt x="173" y="-64" on="0"/>
        <pt x="173" y="7" on="1"/>
        <pt x="173" y="206" on="1"/>
        <pt x="173" y="249" on="0"/>
        <pt x="161" y="294" on="0"/>
        <pt x="138" y="309" on="0"/>
        <pt x="119" y="309" on="1"/>
        <pt x="110" y="309" on="0"/>
        <pt x="89" y="307" on="0"/>
        <pt x="76" y="307" on="1"/>
        <pt x="62" y="307" on="0"/>
        <pt x="45" y="310" on="1"/>
        <pt x="45" y="414" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 64 values pushed */
          17 1 2 1 60 59 26 3 5 0 41 40 2 4 3 3 74 0 1 0 2 0 1 2 103
          0 0 6 1 5 3 0 5 103 0 3 4 4 3 87 0 3 3 4 95 0 4 3 4 79
          58 56 55 53 46 43 39 38 20 56 48 7 7 23
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="braceright" xMin="16" yMin="-177" xMax="424" yMax="903">
      <contour>
        <pt x="28" y="-173" on="0"/>
        <pt x="49" y="-175" on="0"/>
        <pt x="99" y="-177" on="0"/>
        <pt x="133" y="-177" on="1"/>
        <pt x="204" y="-177" on="0"/>
        <pt x="277" y="-130" on="0"/>
        <pt x="291" y="-70" on="1"/>
        <pt x="296" y="-46" on="0"/>
        <pt x="296" y="-5" on="1"/>
        <pt x="296" y="153" on="1"/>
        <pt x="296" y="222" on="0"/>
        <pt x="307" y="287" on="0"/>
        <pt x="331" y="307" on="0"/>
        <pt x="353" y="307" on="1"/>
        <pt x="385" y="306" on="1"/>
        <pt x="405" y="306" on="0"/>
        <pt x="424" y="310" on="1"/>
        <pt x="424" y="414" on="1"/>
        <pt x="404" y="418" on="0"/>
        <pt x="383" y="418" on="1"/>
        <pt x="353" y="417" on="1"/>
        <pt x="331" y="417" on="0"/>
        <pt x="307" y="436" on="0"/>
        <pt x="296" y="501" on="0"/>
        <pt x="296" y="570" on="1"/>
        <pt x="296" y="731" on="1"/>
        <pt x="296" y="773" on="0"/>
        <pt x="291" y="795" on="1"/>
        <pt x="277" y="856" on="0"/>
        <pt x="204" y="903" on="0"/>
        <pt x="133" y="903" on="1"/>
        <pt x="99" y="903" on="0"/>
        <pt x="49" y="900" on="0"/>
        <pt x="22" y="897" on="0"/>
        <pt x="28" y="897" on="1"/>
        <pt x="28" y="818" on="1"/>
        <pt x="16" y="716" on="1"/>
        <pt x="53" y="714" on="0"/>
        <pt x="85" y="704" on="0"/>
        <pt x="96" y="678" on="0"/>
        <pt x="96" y="649" on="1"/>
        <pt x="96" y="438" on="1"/>
        <pt x="96" y="418" on="0"/>
        <pt x="100" y="396" on="0"/>
        <pt x="119" y="374" on="0"/>
        <pt x="141" y="364" on="1"/>
        <pt x="110" y="350" on="0"/>
        <pt x="96" y="312" on="0"/>
        <pt x="96" y="282" on="1"/>
        <pt x="96" y="97" on="1"/>
        <pt x="96" y="61" on="0"/>
        <pt x="85" y="33" on="0"/>
        <pt x="56" y="25" on="0"/>
        <pt x="16" y="23" on="1"/>
        <pt x="28" y="-85" on="1"/>
        <pt x="28" y="-172" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 58 values pushed */
          35 1 4 3 45 17 16 3 1 2 55 54 2 0 5 3 74 0 3 0 4 2 3 4 103
          0 2 0 1 5 2 1 103 0 5 0 0 5 87 0 5 5 0 95 0 0 5 0 79 31
          20 56 51 56 49 6 7 26
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="bracketleft" xMin="13" yMin="-274" xMax="305" yMax="797">
      <contour>
        <pt x="13" y="797" on="1"/>
        <pt x="305" y="797" on="1"/>
        <pt x="305" y="660" on="1"/>
        <pt x="195" y="660" on="1"/>
        <pt x="195" y="-136" on="1"/>
        <pt x="305" y="-136" on="1"/>
        <pt x="305" y="-274" on="1"/>
        <pt x="13" y="-274" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 31 values pushed */
          0 0 0 1 2 0 1 101 0 2 3 3 2 85 0 2 2 3 93 0 3 2 3 77 17
          17 17 16 4 7 24
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="bracketright" xMin="15" yMin="-274" xMax="307" yMax="797">
      <contour>
        <pt x="124" y="660" on="1"/>
        <pt x="15" y="660" on="1"/>
        <pt x="15" y="797" on="1"/>
        <pt x="307" y="797" on="1"/>
        <pt x="307" y="-274" on="1"/>
        <pt x="15" y="-274" on="1"/>
        <pt x="15" y="-136" on="1"/>
        <pt x="124" y="-136" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 31 values pushed */
          0 1 0 0 3 1 0 101 0 3 2 2 3 85 0 3 3 2 93 0 2 3 2 77 17
          17 17 16 4 7 24
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="breve" xMin="6" yMin="566" xMax="461" yMax="723">
      <contour>
        <pt x="170" y="566" on="0"/>
        <pt x="84" y="600" on="0"/>
        <pt x="28" y="668" on="0"/>
        <pt x="6" y="723" on="1"/>
        <pt x="152" y="723" on="1"/>
        <pt x="165" y="699" on="0"/>
        <pt x="203" y="679" on="0"/>
        <pt x="235" y="679" on="1"/>
        <pt x="265" y="679" on="0"/>
        <pt x="302" y="697" on="0"/>
        <pt x="317" y="723" on="1"/>
        <pt x="461" y="723" on="1"/>
        <pt x="433" y="642" on="0"/>
        <pt x="330" y="566" on="0"/>
        <pt x="235" y="566" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          6 100
          WCVTP[ ]	/* WriteCVTInPixels */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          28
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 24 values pushed */
          2 1 0 1 1 0 110 0 1 3 3 1 87 0 1 1 3 96 4 1 3 1 3 80
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 23 values pushed */
          2 1 0 1 0 131 0 1 3 3 1 87 0 1 1 3 96 4 1 3 1 3 80
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 12 values pushed */
          0 0 0 14 0 13 18 34 19 5 7 23
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          6 0
          WCVTP[ ]	/* WriteCVTInPixels */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="brokenbar" xMin="55" yMin="-132" xMax="195" yMax="844">
      <contour>
        <pt x="55" y="844" on="1"/>
        <pt x="195" y="844" on="1"/>
        <pt x="195" y="473" on="1"/>
        <pt x="55" y="473" on="1"/>
      </contour>
      <contour>
        <pt x="55" y="239" on="1"/>
        <pt x="195" y="239" on="1"/>
        <pt x="195" y="-132" on="1"/>
        <pt x="55" y="-132" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 31 values pushed */
          0 0 0 1 2 0 1 101 0 2 3 3 2 85 0 2 2 3 93 0 3 2 3 77 17
          17 17 16 4 7 24
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="bullet" xMin="93" yMin="204" xMax="443" yMax="554">
      <contour>
        <pt x="93" y="427" on="0"/>
        <pt x="140" y="507" on="0"/>
        <pt x="221" y="554" on="0"/>
        <pt x="269" y="554" on="1"/>
        <pt x="316" y="554" on="0"/>
        <pt x="396" y="507" on="0"/>
        <pt x="443" y="427" on="0"/>
        <pt x="443" y="380" on="1"/>
        <pt x="443" y="332" on="0"/>
        <pt x="396" y="251" on="0"/>
        <pt x="316" y="204" on="0"/>
        <pt x="269" y="204" on="1"/>
        <pt x="221" y="204" on="0"/>
        <pt x="140" y="251" on="0"/>
        <pt x="93" y="332" on="0"/>
        <pt x="93" y="380" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          22
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 11 values pushed */
          0 1 1 0 95 0 0 0 31 1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 16 values pushed */
          0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 5 values pushed */
          38 34 2 7 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="c" xMin="32" yMin="-11" xMax="580" yMax="530">
      <contour>
        <pt x="394" y="347" on="0"/>
        <pt x="346" y="370" on="0"/>
        <pt x="315" y="370" on="1"/>
        <pt x="263" y="370" on="0"/>
        <pt x="197" y="306" on="0"/>
        <pt x="197" y="259" on="1"/>
        <pt x="197" y="211" on="0"/>
        <pt x="264" y="148" on="0"/>
        <pt x="315" y="148" on="1"/>
        <pt x="356" y="148" on="0"/>
        <pt x="414" y="199" on="0"/>
        <pt x="425" y="230" on="1"/>
        <pt x="515" y="207" on="0"/>
        <pt x="580" y="190" on="1"/>
        <pt x="571" y="146" on="0"/>
        <pt x="503" y="53" on="0"/>
        <pt x="384" y="-11" on="0"/>
        <pt x="306" y="-11" on="1"/>
        <pt x="228" y="-11" on="0"/>
        <pt x="103" y="62" on="0"/>
        <pt x="32" y="187" on="0"/>
        <pt x="32" y="261" on="1"/>
        <pt x="32" y="335" on="0"/>
        <pt x="102" y="459" on="0"/>
        <pt x="228" y="530" on="0"/>
        <pt x="306" y="530" on="1"/>
        <pt x="374" y="530" on="0"/>
        <pt x="454" y="496" on="1"/>
        <pt x="567" y="496" on="1"/>
        <pt x="567" y="326" on="1"/>
        <pt x="477" y="326" on="1"/>
        <pt x="437" y="326" on="0"/>
        <pt x="417" y="327" on="1"/>
        <pt x="417" y="326" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 7 values pushed */
          13 11 2 1 5 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 31 values pushed */
          0 0 0 3 95 0 3 3 31 75 0 5 5 4 93 0 4 4 23 75 0 1 1 2 95
          0 2 2 32 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 27 values pushed */
          0 3 0 0 5 3 0 103 0 4 0 5 1 4 5 101 0 1 1 2 95 0 2 2 32
          2 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 9 values pushed */
          49 17 38 39 36 33 6 7 26
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="caron" xMin="18" yMin="555" xMax="443" yMax="713">
      <contour>
        <pt x="303" y="713" on="1"/>
        <pt x="230" y="642" on="1"/>
        <pt x="156" y="713" on="1"/>
        <pt x="18" y="713" on="1"/>
        <pt x="156" y="555" on="1"/>
        <pt x="306" y="555" on="1"/>
        <pt x="443" y="713" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          6 100
          WCVTP[ ]	/* WriteCVTInPixels */
          NPUSHB[ ]	/* 37 values pushed */
          1 1 1 0 1 74 3 2 2 0 1 1 0 85 3 2 2 0 0 1 93 0 1 0 1
          77 0 0 0 6 0 6 17 18 4 7 22
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          6 0
          WCVTP[ ]	/* WriteCVTInPixels */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ccaron" xMin="32" yMin="-11" xMax="580" yMax="713">
      <component glyphName="c" x="0" y="0" flags="0x0"/>
      <component glyphName="caron" x="70" y="0" flags="0x0"/>
    </TTGlyph>

    <TTGlyph name="ccaron.001" xMin="32" yMin="-11" xMax="580" yMax="713">
      <component glyphName="c" x="0" y="0" flags="0x0"/>
      <component glyphName="caron" x="70" y="0" flags="0x0"/>
    </TTGlyph>

    <TTGlyph name="ccedilla" xMin="32" yMin="-226" xMax="580" yMax="530">
      <component glyphName="c" x="0" y="0" flags="0x0"/>
      <component glyphName="cedilla" x="50" y="0" flags="0x0"/>
    </TTGlyph>

    <TTGlyph name="cedilla" xMin="89" yMin="-226" xMax="328" yMax="-22">
      <contour>
        <pt x="127" y="-137" on="0"/>
        <pt x="183" y="-78" on="0"/>
        <pt x="193" y="-22" on="1"/>
        <pt x="328" y="-71" on="1"/>
        <pt x="305" y="-148" on="0"/>
        <pt x="188" y="-224" on="0"/>
        <pt x="104" y="-226" on="1"/>
        <pt x="89" y="-141" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          6 100
          WCVTP[ ]	/* WriteCVTInPixels */
          NPUSHB[ ]	/* 14 values pushed */
          7 3 2 3 0 72 0 0 0 116 21 1 7 21
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          6 0
          WCVTP[ ]	/* WriteCVTInPixels */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="cent" xMin="28" yMin="-92" xMax="576" yMax="771">
      <contour>
        <pt x="565" y="217" on="0"/>
        <pt x="474" y="109" on="0"/>
        <pt x="401" y="85" on="1"/>
        <pt x="401" y="-92" on="1"/>
        <pt x="215" y="-92" on="1"/>
        <pt x="215" y="82" on="1"/>
        <pt x="130" y="108" on="0"/>
        <pt x="28" y="251" on="0"/>
        <pt x="28" y="341" on="1"/>
        <pt x="28" y="432" on="0"/>
        <pt x="130" y="571" on="0"/>
        <pt x="215" y="597" on="1"/>
        <pt x="215" y="771" on="1"/>
        <pt x="401" y="771" on="1"/>
        <pt x="401" y="594" on="1"/>
        <pt x="425" y="587" on="0"/>
        <pt x="450" y="576" on="1"/>
        <pt x="563" y="576" on="1"/>
        <pt x="563" y="406" on="1"/>
        <pt x="473" y="406" on="1"/>
        <pt x="433" y="406" on="0"/>
        <pt x="413" y="407" on="1"/>
        <pt x="413" y="406" on="1"/>
        <pt x="390" y="427" on="0"/>
        <pt x="342" y="450" on="0"/>
        <pt x="311" y="450" on="1"/>
        <pt x="259" y="450" on="0"/>
        <pt x="193" y="386" on="0"/>
        <pt x="193" y="339" on="1"/>
        <pt x="193" y="291" on="0"/>
        <pt x="260" y="228" on="0"/>
        <pt x="311" y="228" on="1"/>
        <pt x="352" y="228" on="0"/>
        <pt x="410" y="279" on="0"/>
        <pt x="421" y="310" on="1"/>
        <pt x="511" y="287" on="0"/>
        <pt x="576" y="270" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 17 values pushed */
          14 11 2 2 1 36 34 2 5 3 5 2 2 0 5 3 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          45
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 26 values pushed */
          0 2 0 3 5 2 3 101 0 5 0 0 5 0 97 0 4 4 1 93 0 1 1 22 4
          76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 32 values pushed */
          0 1 0 4 3 1 4 103 0 2 0 3 5 2 3 101 0 5 0 0 5 87 0 5 5
          0 93 0 0 5 0 77
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 9 values pushed */
          36 35 49 19 24 19 6 7 26
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="circumflex" xMin="19" yMin="574" xMax="442" yMax="735">
      <contour>
        <pt x="158" y="574" on="1"/>
        <pt x="230" y="649" on="1"/>
        <pt x="305" y="574" on="1"/>
        <pt x="442" y="574" on="1"/>
        <pt x="304" y="735" on="1"/>
        <pt x="156" y="735" on="1"/>
        <pt x="19" y="574" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          6 100
          WCVTP[ ]	/* WriteCVTInPixels */
          NPUSHB[ ]	/* 28 values pushed */
          1 1 0 1 1 74 0 1 0 1 131 3 2 2 0 0 116 0 0 0 6 0 6 17 18
          4 7 22
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          6 0
          WCVTP[ ]	/* WriteCVTInPixels */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="colon" xMin="31" yMin="-20" xMax="220" yMax="539">
      <component glyphName="dotaccent" x="0" y="-220" flags="0x4"/>
      <component glyphName="dotaccent" x="0" y="-588" flags="0x4"/>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          0 1
          PUSHW[ ]	/* 1 value pushed */
          -220
          PUSHB[ ]	/* 1 value pushed */
          51
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          1 1
          PUSHW[ ]	/* 1 value pushed */
          -588
          PUSHB[ ]	/* 1 value pushed */
          51
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="comma" xMin="10" yMin="-182" xMax="264" yMax="138">
      <contour>
        <pt x="100" y="138" on="1"/>
        <pt x="264" y="82" on="1"/>
        <pt x="121" y="-182" on="1"/>
        <pt x="10" y="-140" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          2 0 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="copyright" xMin="50" yMin="-12" xMax="887" yMax="823">
      <contour>
        <pt x="50" y="520" on="0"/>
        <pt x="162" y="711" on="0"/>
        <pt x="354" y="823" on="0"/>
        <pt x="468" y="823" on="1"/>
        <pt x="582" y="823" on="0"/>
        <pt x="774" y="711" on="0"/>
        <pt x="887" y="520" on="0"/>
        <pt x="887" y="406" on="1"/>
        <pt x="887" y="292" on="0"/>
        <pt x="774" y="100" on="0"/>
        <pt x="582" y="-12" on="0"/>
        <pt x="468" y="-12" on="1"/>
        <pt x="354" y="-12" on="0"/>
        <pt x="162" y="100" on="0"/>
        <pt x="50" y="292" on="0"/>
        <pt x="50" y="406" on="1"/>
      </contour>
      <contour>
        <pt x="161" y="321" on="0"/>
        <pt x="243" y="180" on="0"/>
        <pt x="383" y="98" on="0"/>
        <pt x="468" y="98" on="1"/>
        <pt x="553" y="98" on="0"/>
        <pt x="693" y="180" on="0"/>
        <pt x="775" y="321" on="0"/>
        <pt x="775" y="406" on="1"/>
        <pt x="775" y="491" on="0"/>
        <pt x="693" y="631" on="0"/>
        <pt x="553" y="713" on="0"/>
        <pt x="468" y="713" on="1"/>
        <pt x="383" y="713" on="0"/>
        <pt x="243" y="631" on="0"/>
        <pt x="161" y="491" on="0"/>
        <pt x="161" y="406" on="1"/>
      </contour>
      <contour>
        <pt x="530" y="518" on="0"/>
        <pt x="473" y="518" on="1"/>
        <pt x="426" y="518" on="0"/>
        <pt x="361" y="453" on="0"/>
        <pt x="361" y="406" on="1"/>
        <pt x="361" y="359" on="0"/>
        <pt x="426" y="292" on="0"/>
        <pt x="473" y="292" on="1"/>
        <pt x="502" y="292" on="0"/>
        <pt x="551" y="316" on="0"/>
        <pt x="568" y="338" on="1"/>
        <pt x="668" y="238" on="1"/>
        <pt x="589" y="154" on="0"/>
        <pt x="473" y="154" on="1"/>
        <pt x="405" y="154" on="0"/>
        <pt x="289" y="222" on="0"/>
        <pt x="221" y="337" on="0"/>
        <pt x="221" y="406" on="1"/>
        <pt x="221" y="475" on="0"/>
        <pt x="289" y="590" on="0"/>
        <pt x="405" y="657" on="0"/>
        <pt x="473" y="657" on="1"/>
        <pt x="530" y="657" on="0"/>
        <pt x="628" y="614" on="0"/>
        <pt x="665" y="573" on="1"/>
        <pt x="566" y="471" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          6 100
          WCVTP[ ]	/* WriteCVTInPixels */
          NPUSHB[ ]	/* 66 values pushed */
          56 1 4 7 57 42 2 5 4 43 1 6 5 3 74 0 0 0 3 7 0 3 103 0 7
          0 4 5 7 4 103 0 5 0 6 2 5 6 103 0 2 1 1 2 87 0 2 2 1 95
          0 1 2 1 79 38 36 36 36 38 38 38 34 8 7 28
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          6 0
          WCVTP[ ]	/* WriteCVTInPixels */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="currency" xMin="21" yMin="6" xMax="733" yMax="732">
      <contour>
        <pt x="99" y="425" on="0"/>
        <pt x="124" y="480" on="1"/>
        <pt x="21" y="590" on="1"/>
        <pt x="171" y="729" on="1"/>
        <pt x="274" y="620" on="1"/>
        <pt x="322" y="640" on="0"/>
        <pt x="378" y="640" on="1"/>
        <pt x="433" y="640" on="0"/>
        <pt x="482" y="620" on="1"/>
        <pt x="586" y="732" on="1"/>
        <pt x="733" y="592" on="1"/>
        <pt x="630" y="482" on="1"/>
        <pt x="657" y="427" on="0"/>
        <pt x="657" y="362" on="1"/>
        <pt x="657" y="295" on="0"/>
        <pt x="629" y="240" on="1"/>
        <pt x="723" y="144" on="1"/>
        <pt x="574" y="6" on="1"/>
        <pt x="481" y="102" on="1"/>
        <pt x="433" y="83" on="0"/>
        <pt x="378" y="83" on="1"/>
        <pt x="324" y="83" on="0"/>
        <pt x="271" y="104" on="1"/>
        <pt x="180" y="7" on="1"/>
        <pt x="34" y="147" on="1"/>
        <pt x="124" y="242" on="1"/>
        <pt x="99" y="300" on="0"/>
        <pt x="99" y="362" on="1"/>
      </contour>
      <contour>
        <pt x="259" y="317" on="0"/>
        <pt x="328" y="248" on="0"/>
        <pt x="377" y="248" on="1"/>
        <pt x="427" y="248" on="0"/>
        <pt x="495" y="317" on="0"/>
        <pt x="495" y="366" on="1"/>
        <pt x="495" y="416" on="0"/>
        <pt x="427" y="484" on="0"/>
        <pt x="377" y="484" on="1"/>
        <pt x="328" y="484" on="0"/>
        <pt x="259" y="415" on="0"/>
        <pt x="259" y="366" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 64 values pushed */
          10 8 4 2 4 3 0 11 1 2 2 3 25 24 22 18 16 15 6 1 2 3 74 9 3
          2 0 72 23 17 2 1 71 0 0 0 3 2 0 3 103 0 2 1 1 2 87 0 2 2
          1 95 0 1 2 1 79 36 40 44 37 4 7 24
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="d" xMin="-3" yMin="-10" xMax="651" yMax="760">
      <contour>
        <pt x="543" y="760" on="1"/>
        <pt x="543" y="713" on="1"/>
        <pt x="544" y="635" on="1"/>
        <pt x="544" y="152" on="1"/>
        <pt x="651" y="152" on="1"/>
        <pt x="651" y="0" on="1"/>
        <pt x="373" y="0" on="1"/>
        <pt x="373" y="12" on="1"/>
        <pt x="315" y="-10" on="0"/>
        <pt x="270" y="-10" on="1"/>
        <pt x="191" y="-10" on="0"/>
        <pt x="67" y="64" on="0"/>
        <pt x="-3" y="187" on="0"/>
        <pt x="-3" y="257" on="1"/>
        <pt x="-3" y="329" on="0"/>
        <pt x="66" y="451" on="0"/>
        <pt x="188" y="522" on="0"/>
        <pt x="264" y="522" on="1"/>
        <pt x="307" y="522" on="0"/>
        <pt x="373" y="504" on="1"/>
        <pt x="373" y="608" on="1"/>
        <pt x="301" y="608" on="1"/>
        <pt x="301" y="760" on="1"/>
      </contour>
      <contour>
        <pt x="305" y="147" on="0"/>
        <pt x="355" y="178" on="0"/>
        <pt x="373" y="208" on="1"/>
        <pt x="373" y="308" on="1"/>
        <pt x="358" y="336" on="0"/>
        <pt x="306" y="367" on="0"/>
        <pt x="277" y="367" on="1"/>
        <pt x="231" y="367" on="0"/>
        <pt x="166" y="304" on="0"/>
        <pt x="166" y="255" on="1"/>
        <pt x="166" y="208" on="0"/>
        <pt x="232" y="147" on="0"/>
        <pt x="276" y="147" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          46
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 15 values pushed */
          19 1 6 3 26 25 2 0 6 7 1 1 0 3 74
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 15 values pushed */
          19 1 6 3 26 25 2 0 6 7 1 1 7 3 74
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          24
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 35 values pushed */
          0 4 4 5 93 8 1 5 5 22 75 0 6 6 3 95 0 3 3 31 75 9 7 2 0
          0 1 95 2 1 1 1 21 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 46 values pushed */
          0 4 4 5 93 8 1 5 5 22 75 0 6 6 3 95 0 3 3 31 75 9 7 2 0
          0 1 93 0 1 1 21 75 9 7 2 0 0 2 95 0 2 2 32 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          46
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 44 values pushed */
          0 3 0 6 0 3 6 103 0 4 4 5 93 8 1 5 5 22 75 9 7 2 0 0 1
          93 0 1 1 21 75 9 7 2 0 0 2 95 0 2 2 32 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 41 values pushed */
          0 3 0 6 0 3 6 103 0 4 4 5 93 8 1 5 5 22 75 0 0 0 1 93 0
          1 1 21 75 9 1 7 7 2 95 0 2 2 32 2 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 22 values pushed */
          23 23 0 0 23 35 23 34 30 28 0 22 0 22 18 38 34 17 19 10 7 25
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="degree" xMin="50" yMin="498" xMax="373" yMax="828">
      <contour>
        <pt x="168" y="828" on="0"/>
        <pt x="93" y="784" on="0"/>
        <pt x="50" y="708" on="0"/>
        <pt x="50" y="664" on="1"/>
        <pt x="50" y="619" on="0"/>
        <pt x="93" y="542" on="0"/>
        <pt x="167" y="498" on="0"/>
        <pt x="212" y="498" on="1"/>
        <pt x="257" y="498" on="0"/>
        <pt x="330" y="542" on="0"/>
        <pt x="373" y="618" on="0"/>
        <pt x="373" y="663" on="1"/>
        <pt x="373" y="710" on="0"/>
        <pt x="331" y="785" on="0"/>
        <pt x="257" y="828" on="0"/>
        <pt x="212" y="828" on="1"/>
      </contour>
      <contour>
        <pt x="135" y="694" on="0"/>
        <pt x="179" y="741" on="0"/>
        <pt x="211" y="741" on="1"/>
        <pt x="244" y="741" on="0"/>
        <pt x="286" y="698" on="0"/>
        <pt x="286" y="662" on="1"/>
        <pt x="286" y="627" on="0"/>
        <pt x="243" y="585" on="0"/>
        <pt x="208" y="585" on="1"/>
        <pt x="179" y="585" on="0"/>
        <pt x="135" y="630" on="0"/>
        <pt x="135" y="659" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          6 100
          WCVTP[ ]	/* WriteCVTInPixels */
          NPUSHB[ ]	/* 39 values pushed */
          4 1 1 0 2 3 1 2 103 0 3 0 0 3 87 0 3 3 0 95 0 0 3 0 79
          0 0 25 23 19 17 0 15 0 14 38 5 7 21
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          6 0
          WCVTP[ ]	/* WriteCVTInPixels */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="dieresis" xMin="24" yMin="558" xMax="452" yMax="749">
      <contour>
        <pt x="24" y="693" on="0"/>
        <pt x="80" y="749" on="0"/>
        <pt x="120" y="749" on="1"/>
        <pt x="160" y="749" on="0"/>
        <pt x="215" y="693" on="0"/>
        <pt x="215" y="653" on="1"/>
        <pt x="215" y="614" on="0"/>
        <pt x="160" y="558" on="0"/>
        <pt x="120" y="558" on="1"/>
        <pt x="80" y="558" on="0"/>
        <pt x="24" y="614" on="0"/>
        <pt x="24" y="653" on="1"/>
      </contour>
      <contour>
        <pt x="261" y="693" on="0"/>
        <pt x="317" y="749" on="0"/>
        <pt x="357" y="749" on="1"/>
        <pt x="397" y="749" on="0"/>
        <pt x="452" y="693" on="0"/>
        <pt x="452" y="653" on="1"/>
        <pt x="452" y="614" on="0"/>
        <pt x="397" y="558" on="0"/>
        <pt x="357" y="558" on="1"/>
        <pt x="317" y="558" on="0"/>
        <pt x="261" y="614" on="0"/>
        <pt x="261" y="653" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          6 100
          WCVTP[ ]	/* WriteCVTInPixels */
          NPUSHB[ ]	/* 26 values pushed */
          2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 36 36 36 33 4 7
          24
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          6 0
          WCVTP[ ]	/* WriteCVTInPixels */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="divide" xMin="25" yMin="-20" xMax="525" yMax="539">
      <component glyphName="dotaccent" x="155" y="-220" flags="0x4"/>
      <component glyphName="dotaccent" x="155" y="-588" flags="0x4"/>
      <component glyphName="endash" x="-43" y="-35" flags="0x4"/>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          0 1
          PUSHW[ ]	/* 1 value pushed */
          -220
          PUSHB[ ]	/* 1 value pushed */
          51
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          1 1
          PUSHW[ ]	/* 1 value pushed */
          -588
          PUSHB[ ]	/* 1 value pushed */
          51
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          2 1
          PUSHW[ ]	/* 1 value pushed */
          -35
          PUSHB[ ]	/* 1 value pushed */
          51
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="dollar" xMin="42" yMin="-92" xMax="552" yMax="771">
      <contour>
        <pt x="452" y="414" on="1"/>
        <pt x="366" y="414" on="1"/>
        <pt x="367" y="445" on="0"/>
        <pt x="329" y="484" on="0"/>
        <pt x="294" y="484" on="1"/>
        <pt x="280" y="484" on="0"/>
        <pt x="265" y="472" on="0"/>
        <pt x="265" y="462" on="1"/>
        <pt x="265" y="454" on="0"/>
        <pt x="298" y="434" on="0"/>
        <pt x="326" y="425" on="1"/>
        <pt x="412" y="397" on="0"/>
        <pt x="495" y="357" on="0"/>
        <pt x="538" y="294" on="0"/>
        <pt x="538" y="239" on="1"/>
        <pt x="538" y="177" on="0"/>
        <pt x="465" y="86" on="0"/>
        <pt x="401" y="65" on="1"/>
        <pt x="401" y="-92" on="1"/>
        <pt x="215" y="-92" on="1"/>
        <pt x="215" y="65" on="1"/>
        <pt x="209" y="68" on="0"/>
        <pt x="157" y="91" on="0"/>
        <pt x="138" y="106" on="1"/>
        <pt x="42" y="106" on="1"/>
        <pt x="42" y="275" on="1"/>
        <pt x="225" y="275" on="1"/>
        <pt x="225" y="228" on="0"/>
        <pt x="288" y="169" on="0"/>
        <pt x="344" y="170" on="1"/>
        <pt x="344" y="199" on="0"/>
        <pt x="305" y="199" on="1"/>
        <pt x="321" y="199" on="0"/>
        <pt x="338" y="213" on="0"/>
        <pt x="338" y="223" on="1"/>
        <pt x="338" y="231" on="0"/>
        <pt x="314" y="249" on="0"/>
        <pt x="298" y="255" on="1"/>
        <pt x="263" y="267" on="1"/>
        <pt x="206" y="285" on="1"/>
        <pt x="70" y="328" on="0"/>
        <pt x="70" y="449" on="1"/>
        <pt x="70" y="519" on="0"/>
        <pt x="149" y="602" on="0"/>
        <pt x="215" y="616" on="1"/>
        <pt x="215" y="771" on="1"/>
        <pt x="401" y="771" on="1"/>
        <pt x="401" y="604" on="1"/>
        <pt x="447" y="585" on="0"/>
        <pt x="450" y="584" on="1"/>
        <pt x="552" y="584" on="1"/>
        <pt x="552" y="414" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 20 values pushed */
          47 44 2 9 8 7 1 0 1 34 1 6 4 20 17 2 2 3 4 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          41
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 49 values pushed */
          0 6 4 7 4 6 7 126 0 7 5 5 7 110 0 9 10 1 0 4 9 0 101 0 4
          0 3 2 4 3 101 0 5 0 2 5 2 98 0 1 1 8 93 0 8 8 22 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          45
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 50 values pushed */
          0 6 4 7 4 6 7 126 0 7 5 4 7 5 124 0 9 10 1 0 4 9 0 101 0
          4 0 3 2 4 3 101 0 5 0 2 5 2 98 0 1 1 8 93 0 8 8 22 1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 56 values pushed */
          0 6 4 7 4 6 7 126 0 7 5 4 7 5 124 0 8 0 1 0 8 1 103 0 9
          10 1 0 4 9 0 101 0 5 3 2 5 87 0 4 0 3 2 4 3 101 0 5 5 2
          94 0 2 5 2 78
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 27 values pushed */
          1 0 50 48 46 45 32 31 31 30 29 28 26 25 24 23 19 18 5 3 0 51 1 51 11
          7 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="dotaccent" xMin="31" yMin="568" xMax="220" yMax="759">
      <contour>
        <pt x="31" y="703" on="0"/>
        <pt x="86" y="759" on="0"/>
        <pt x="126" y="759" on="1"/>
        <pt x="165" y="759" on="0"/>
        <pt x="220" y="703" on="0"/>
        <pt x="220" y="663" on="1"/>
        <pt x="220" y="624" on="0"/>
        <pt x="165" y="568" on="0"/>
        <pt x="126" y="568" on="1"/>
        <pt x="86" y="568" on="0"/>
        <pt x="31" y="624" on="0"/>
        <pt x="31" y="663" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          6 100
          WCVTP[ ]	/* WriteCVTInPixels */
          NPUSHB[ ]	/* 21 values pushed */
          0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 36 33 2 7 22
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          6 0
          WCVTP[ ]	/* WriteCVTInPixels */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="dotlessi" xMin="29" yMin="0" xMax="347" yMax="506">
      <contour>
        <pt x="29" y="506" on="1"/>
        <pt x="280" y="506" on="1"/>
        <pt x="280" y="152" on="1"/>
        <pt x="347" y="152" on="1"/>
        <pt x="347" y="0" on="1"/>
        <pt x="30" y="0" on="1"/>
        <pt x="30" y="152" on="1"/>
        <pt x="107" y="152" on="1"/>
        <pt x="107" y="354" on="1"/>
        <pt x="29" y="354" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 22 values pushed */
          0 4 4 0 93 0 0 0 23 75 3 1 1 1 2 93 0 2 2 21 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 20 values pushed */
          0 0 0 4 1 0 4 101 3 1 1 1 2 93 0 2 2 21 2 76
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 8 values pushed */
          17 17 17 17 16 5 7 25
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="e" xMin="18" yMin="-13" xMax="560" yMax="531">
      <contour>
        <pt x="184" y="217" on="0"/>
        <pt x="181" y="220" on="1"/>
        <pt x="188" y="180" on="0"/>
        <pt x="261" y="134" on="0"/>
        <pt x="306" y="134" on="1"/>
        <pt x="339" y="134" on="0"/>
        <pt x="392" y="145" on="0"/>
        <pt x="433" y="157" on="1"/>
        <pt x="457" y="164" on="1"/>
        <pt x="517" y="50" on="1"/>
        <pt x="471" y="23" on="0"/>
        <pt x="419" y="-1" on="0"/>
        <pt x="355" y="-13" on="0"/>
        <pt x="306" y="-13" on="1"/>
        <pt x="215" y="-13" on="0"/>
        <pt x="85" y="64" on="0"/>
        <pt x="18" y="190" on="0"/>
        <pt x="18" y="262" on="1"/>
        <pt x="18" y="336" on="0"/>
        <pt x="90" y="459" on="0"/>
        <pt x="217" y="531" on="0"/>
        <pt x="294" y="531" on="1"/>
        <pt x="373" y="531" on="0"/>
        <pt x="493" y="460" on="0"/>
        <pt x="559" y="334" on="0"/>
        <pt x="559" y="254" on="1"/>
        <pt x="560" y="248" on="0"/>
        <pt x="560" y="234" on="1"/>
        <pt x="560" y="221" on="0"/>
        <pt x="559" y="214" on="1"/>
        <pt x="183" y="214" on="1"/>
      </contour>
      <contour>
        <pt x="210" y="393" on="0"/>
        <pt x="188" y="328" on="1"/>
        <pt x="380" y="328" on="1"/>
        <pt x="371" y="358" on="0"/>
        <pt x="332" y="393" on="0"/>
        <pt x="291" y="393" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 10 values pushed */
          8 1 0 3 9 1 1 0 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 30 values pushed */
          0 4 0 3 0 4 3 101 6 1 5 5 2 95 0 2 2 31 75 0 0 0 1 95 0
          1 1 29 1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 28 values pushed */
          0 2 6 1 5 4 2 5 103 0 4 0 3 0 4 3 101 0 0 0 1 95 0 1 1
          29 1 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          31 31 31 36 31 35 18 38 38 39 35 7 7 25
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="eacute" xMin="18" yMin="-13" xMax="560" yMax="729">
      <component glyphName="e" x="0" y="0" flags="0x0"/>
      <component glyphName="acute" x="228" y="0" flags="0x0"/>
    </TTGlyph>

    <TTGlyph name="ecircumflex" xMin="18" yMin="-13" xMax="560" yMax="735">
      <component glyphName="e" x="0" y="0" flags="0x0"/>
      <component glyphName="circumflex" x="74" y="0" flags="0x0"/>
    </TTGlyph>

    <TTGlyph name="edieresis" xMin="18" yMin="-13" xMax="560" yMax="748">
      <component glyphName="e" x="0" y="0" flags="0x0"/>
      <component glyphName="dotaccent" x="42" y="-11" flags="0x4"/>
      <component glyphName="dotaccent" x="280" y="-11" flags="0x4"/>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          2 1
          PUSHW[ ]	/* 1 value pushed */
          -11
          PUSHB[ ]	/* 1 value pushed */
          51
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          3 1
          PUSHW[ ]	/* 1 value pushed */
          -11
          PUSHB[ ]	/* 1 value pushed */
          51
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="egrave" xMin="18" yMin="-13" xMax="560" yMax="729">
      <component glyphName="e" x="0" y="0" flags="0x0"/>
      <component glyphName="grave" x="19" y="0" flags="0x0"/>
    </TTGlyph>

    <TTGlyph name="eight" xMin="50" yMin="-15" xMax="578" yMax="754">
      <contour>
        <pt x="382" y="754" on="0"/>
        <pt x="499" y="692" on="0"/>
        <pt x="567" y="587" on="0"/>
        <pt x="567" y="527" on="1"/>
        <pt x="567" y="487" on="0"/>
        <pt x="530" y="412" on="0"/>
        <pt x="497" y="382" on="1"/>
        <pt x="535" y="354" on="0"/>
        <pt x="578" y="274" on="0"/>
        <pt x="578" y="228" on="1"/>
        <pt x="578" y="164" on="0"/>
        <pt x="509" y="52" on="0"/>
        <pt x="387" y="-15" on="0"/>
        <pt x="314" y="-15" on="1"/>
        <pt x="241" y="-15" on="0"/>
        <pt x="120" y="54" on="0"/>
        <pt x="50" y="166" on="0"/>
        <pt x="50" y="226" on="1"/>
        <pt x="50" y="274" on="0"/>
        <pt x="94" y="355" on="0"/>
        <pt x="133" y="385" on="1"/>
        <pt x="100" y="413" on="0"/>
        <pt x="63" y="486" on="0"/>
        <pt x="63" y="523" on="1"/>
        <pt x="63" y="585" on="0"/>
        <pt x="131" y="691" on="0"/>
        <pt x="246" y="754" on="0"/>
        <pt x="313" y="754" on="1"/>
      </contour>
      <contour>
        <pt x="226" y="490" on="0"/>
        <pt x="277" y="448" on="0"/>
        <pt x="313" y="448" on="1"/>
        <pt x="350" y="448" on="0"/>
        <pt x="403" y="490" on="0"/>
        <pt x="403" y="517" on="1"/>
        <pt x="403" y="546" on="0"/>
        <pt x="350" y="591" on="0"/>
        <pt x="313" y="591" on="1"/>
        <pt x="277" y="591" on="0"/>
        <pt x="226" y="546" on="0"/>
        <pt x="226" y="517" on="1"/>
      </contour>
      <contour>
        <pt x="211" y="196" on="0"/>
        <pt x="271" y="146" on="0"/>
        <pt x="314" y="146" on="1"/>
        <pt x="357" y="146" on="0"/>
        <pt x="416" y="196" on="0"/>
        <pt x="416" y="230" on="1"/>
        <pt x="416" y="263" on="0"/>
        <pt x="357" y="311" on="0"/>
        <pt x="314" y="311" on="1"/>
        <pt x="270" y="311" on="0"/>
        <pt x="211" y="263" on="0"/>
        <pt x="211" y="230" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 55 values pushed */
          20 6 2 5 2 1 74 0 2 0 5 4 2 5 103 0 3 3 1 95 6 1 1 1 28
          75 0 4 4 0 95 0 0 0 29 0 76 0 0 49 47 43 41 37 35 31 29 0 27 0
          26 44 7 7 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ellipsis" xMin="-15" yMin="-16" xMax="529" yMax="163">
      <contour>
        <pt x="469" y="163" on="0"/>
        <pt x="529" y="111" on="0"/>
        <pt x="529" y="74" on="1"/>
        <pt x="529" y="38" on="0"/>
        <pt x="468" y="-16" on="0"/>
        <pt x="429" y="-16" on="1"/>
        <pt x="402" y="-16" on="0"/>
        <pt x="356" y="10" on="0"/>
        <pt x="343" y="32" on="1"/>
        <pt x="329" y="10" on="0"/>
        <pt x="282" y="-16" on="0"/>
        <pt x="256" y="-16" on="1"/>
        <pt x="229" y="-16" on="0"/>
        <pt x="183" y="10" on="0"/>
        <pt x="170" y="32" on="1"/>
        <pt x="156" y="11" on="0"/>
        <pt x="109" y="-16" on="0"/>
        <pt x="82" y="-16" on="1"/>
        <pt x="42" y="-16" on="0"/>
        <pt x="-15" y="38" on="0"/>
        <pt x="-15" y="74" on="1"/>
        <pt x="-15" y="112" on="0"/>
        <pt x="41" y="163" on="0"/>
        <pt x="82" y="163" on="1"/>
        <pt x="109" y="163" on="0"/>
        <pt x="156" y="138" on="0"/>
        <pt x="170" y="118" on="1"/>
        <pt x="183" y="139" on="0"/>
        <pt x="229" y="163" on="0"/>
        <pt x="256" y="163" on="1"/>
        <pt x="283" y="163" on="0"/>
        <pt x="329" y="139" on="0"/>
        <pt x="343" y="118" on="1"/>
        <pt x="356" y="139" on="0"/>
        <pt x="402" y="163" on="0"/>
        <pt x="429" y="163" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 39 values pushed */
          32 26 14 8 4 0 3 1 74 6 5 4 3 3 3 0 95 2 1 2 0 0 29 0 76
          0 0 0 35 0 34 36 36 36 36 36 7 7 25
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="emdash" xMin="0" yMin="219" xMax="864" yMax="373">
      <contour>
        <pt x="0" y="373" on="1"/>
        <pt x="864" y="373" on="1"/>
        <pt x="864" y="219" on="1"/>
        <pt x="0" y="219" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 21 values pushed */
          0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 17 16 2 7 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="endash" xMin="68" yMin="219" xMax="568" yMax="373">
      <contour>
        <pt x="68" y="373" on="1"/>
        <pt x="568" y="373" on="1"/>
        <pt x="568" y="219" on="1"/>
        <pt x="68" y="219" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 21 values pushed */
          0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 17 16 2 7 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="equal" xMin="26" yMin="133" xMax="473" yMax="524">
      <contour>
        <pt x="26" y="524" on="1"/>
        <pt x="473" y="524" on="1"/>
        <pt x="473" y="359" on="1"/>
        <pt x="26" y="359" on="1"/>
      </contour>
      <contour>
        <pt x="26" y="298" on="1"/>
        <pt x="473" y="298" on="1"/>
        <pt x="473" y="133" on="1"/>
        <pt x="26" y="133" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          28
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 18 values pushed */
          0 2 0 3 2 3 97 0 1 1 0 93 0 0 0 23 1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 24 values pushed */
          0 0 0 1 2 0 1 101 0 2 3 3 2 85 0 2 2 3 93 0 3 2 3 77
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          17 17 17 16 4 7 24
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="eth" xMin="54" yMin="3" xMax="563" yMax="750">
      <contour>
        <pt x="318" y="750" on="1"/>
        <pt x="354" y="684" on="1"/>
        <pt x="163" y="684" on="1"/>
        <pt x="127" y="750" on="1"/>
      </contour>
      <contour>
        <pt x="114" y="684" on="1"/>
        <pt x="163" y="684" on="1"/>
        <pt x="247" y="532" on="1"/>
        <pt x="114" y="532" on="1"/>
      </contour>
      <contour>
        <pt x="476" y="532" on="1"/>
        <pt x="438" y="532" on="1"/>
        <pt x="354" y="684" on="1"/>
        <pt x="476" y="684" on="1"/>
      </contour>
      <contour>
        <pt x="533" y="363" on="0"/>
        <pt x="563" y="289" on="0"/>
        <pt x="563" y="244" on="1"/>
        <pt x="563" y="179" on="0"/>
        <pt x="495" y="68" on="0"/>
        <pt x="378" y="3" on="0"/>
        <pt x="309" y="3" on="1"/>
        <pt x="239" y="3" on="0"/>
        <pt x="122" y="69" on="0"/>
        <pt x="54" y="181" on="0"/>
        <pt x="54" y="247" on="1"/>
        <pt x="54" y="328" on="0"/>
        <pt x="158" y="457" on="0"/>
        <pt x="240" y="478" on="1"/>
        <pt x="246" y="480" on="0"/>
        <pt x="265" y="486" on="0"/>
        <pt x="271" y="489" on="1"/>
        <pt x="247" y="532" on="1"/>
        <pt x="438" y="532" on="1"/>
        <pt x="502" y="417" on="1"/>
      </contour>
      <contour>
        <pt x="341" y="167" on="0"/>
        <pt x="381" y="195" on="0"/>
        <pt x="399" y="232" on="0"/>
        <pt x="399" y="247" on="1"/>
        <pt x="399" y="273" on="0"/>
        <pt x="382" y="299" on="1"/>
        <pt x="369" y="312" on="0"/>
        <pt x="331" y="325" on="0"/>
        <pt x="309" y="325" on="1"/>
        <pt x="271" y="325" on="0"/>
        <pt x="218" y="279" on="0"/>
        <pt x="218" y="246" on="1"/>
        <pt x="218" y="209" on="0"/>
        <pt x="274" y="167" on="0"/>
        <pt x="309" y="167" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          28 1 8 7 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 41 values pushed */
          5 1 2 4 1 3 7 2 3 101 0 7 0 8 9 7 8 103 0 0 0 1 93 10 1
          1 1 20 75 11 1 9 9 6 95 0 6 6 21 6 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 39 values pushed */
          10 1 1 0 0 2 1 0 101 5 1 2 4 1 3 7 2 3 101 0 7 0 8 9 7
          8 103 11 1 9 9 6 95 0 6 6 21 6 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 30 values pushed */
          32 32 0 0 32 46 32 45 41 39 30 29 19 17 11 10 9 8 7 6 5 4 0 3 0
          3 17 12 7 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="exclam" xMin="55" yMin="-20" xMax="254" yMax="770">
      <contour>
        <pt x="55" y="770" on="1"/>
        <pt x="254" y="770" on="1"/>
        <pt x="234" y="267" on="1"/>
        <pt x="75" y="267" on="1"/>
      </contour>
      <contour>
        <pt x="56" y="115" on="0"/>
        <pt x="111" y="171" on="0"/>
        <pt x="151" y="171" on="1"/>
        <pt x="190" y="171" on="0"/>
        <pt x="245" y="115" on="0"/>
        <pt x="245" y="75" on="1"/>
        <pt x="245" y="36" on="0"/>
        <pt x="190" y="-20" on="0"/>
        <pt x="151" y="-20" on="1"/>
        <pt x="111" y="-20" on="0"/>
        <pt x="56" y="36" on="0"/>
        <pt x="56" y="75" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 21 values pushed */
          0 1 1 0 93 0 0 0 22 75 0 2 2 3 95 0 3 3 29 3 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 19 values pushed */
          0 0 0 1 2 0 1 101 0 2 2 3 95 0 3 3 29 3 76
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          36 34 17 16 4 7 24
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="exclamdown" xMin="55" yMin="-230" xMax="254" yMax="572">
      <contour>
        <pt x="56" y="516" on="0"/>
        <pt x="111" y="572" on="0"/>
        <pt x="151" y="572" on="1"/>
        <pt x="190" y="572" on="0"/>
        <pt x="245" y="516" on="0"/>
        <pt x="245" y="476" on="1"/>
        <pt x="245" y="437" on="0"/>
        <pt x="190" y="381" on="0"/>
        <pt x="151" y="381" on="1"/>
        <pt x="111" y="381" on="0"/>
        <pt x="56" y="437" on="0"/>
        <pt x="56" y="476" on="1"/>
      </contour>
      <contour>
        <pt x="55" y="-230" on="1"/>
        <pt x="254" y="-230" on="1"/>
        <pt x="234" y="273" on="1"/>
        <pt x="75" y="273" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 22 values pushed */
          0 0 1 0 131 0 1 3 3 1 110 0 3 3 2 94 0 2 2 25 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 21 values pushed */
          0 0 1 0 131 0 1 3 1 131 0 3 3 2 94 0 2 2 25 2 76
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          17 19 36 33 4 7 24
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="f" xMin="36" yMin="0" xMax="446" yMax="775">
      <contour>
        <pt x="360" y="506" on="1"/>
        <pt x="360" y="359" on="1"/>
        <pt x="277" y="359" on="1"/>
        <pt x="277" y="152" on="1"/>
        <pt x="375" y="152" on="1"/>
        <pt x="375" y="0" on="1"/>
        <pt x="36" y="0" on="1"/>
        <pt x="36" y="152" on="1"/>
        <pt x="113" y="152" on="1"/>
        <pt x="113" y="359" on="1"/>
        <pt x="43" y="359" on="1"/>
        <pt x="43" y="506" on="1"/>
        <pt x="113" y="506" on="1"/>
        <pt x="113" y="592" on="1"/>
        <pt x="113" y="649" on="0"/>
        <pt x="168" y="732" on="0"/>
        <pt x="259" y="775" on="0"/>
        <pt x="311" y="775" on="1"/>
        <pt x="361" y="775" on="0"/>
        <pt x="432" y="745" on="0"/>
        <pt x="446" y="728" on="1"/>
        <pt x="380" y="611" on="1"/>
        <pt x="369" y="620" on="0"/>
        <pt x="348" y="629" on="0"/>
        <pt x="332" y="629" on="1"/>
        <pt x="309" y="629" on="0"/>
        <pt x="277" y="599" on="0"/>
        <pt x="277" y="573" on="1"/>
        <pt x="277" y="506" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 10 values pushed */
          20 1 7 6 21 1 5 7 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 35 values pushed */
          0 7 7 6 95 0 6 6 30 75 4 1 0 0 5 93 9 8 2 5 5 23 75 3 1
          1 1 2 93 0 2 2 21 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          35
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 33 values pushed */
          9 8 2 5 4 1 0 1 5 0 101 0 7 7 6 95 0 6 6 30 75 3 1 1 1
          2 93 0 2 2 21 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 31 values pushed */
          0 6 0 7 5 6 7 103 9 8 2 5 4 1 0 1 5 0 101 3 1 1 1 2 93
          0 2 2 21 2 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 17 values pushed */
          0 0 0 28 0 28 37 36 17 17 17 17 17 17 10 7 28
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="five" xMin="60" yMin="-15" xMax="584" yMax="740">
      <contour>
        <pt x="288" y="472" on="0"/>
        <pt x="338" y="472" on="1"/>
        <pt x="404" y="472" on="0"/>
        <pt x="516" y="421" on="0"/>
        <pt x="584" y="316" on="0"/>
        <pt x="584" y="239" on="1"/>
        <pt x="584" y="155" on="0"/>
        <pt x="509" y="41" on="0"/>
        <pt x="390" y="-15" on="0"/>
        <pt x="326" y="-15" on="1"/>
        <pt x="222" y="-15" on="0"/>
        <pt x="75" y="94" on="0"/>
        <pt x="60" y="199" on="1"/>
        <pt x="237" y="240" on="1"/>
        <pt x="239" y="197" on="0"/>
        <pt x="288" y="148" on="0"/>
        <pt x="326" y="148" on="1"/>
        <pt x="364" y="148" on="0"/>
        <pt x="409" y="202" on="0"/>
        <pt x="409" y="243" on="1"/>
        <pt x="409" y="275" on="0"/>
        <pt x="359" y="327" on="0"/>
        <pt x="318" y="327" on="1"/>
        <pt x="289" y="327" on="0"/>
        <pt x="250" y="322" on="0"/>
        <pt x="225" y="314" on="1"/>
        <pt x="71" y="343" on="1"/>
        <pt x="71" y="740" on="1"/>
        <pt x="560" y="740" on="1"/>
        <pt x="560" y="567" on="1"/>
        <pt x="234" y="567" on="1"/>
        <pt x="234" y="457" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 51 values pushed */
          31 26 2 3 0 25 13 12 3 2 3 2 74 0 0 0 3 2 0 3 103 0 5 5 4
          93 0 4 4 20 75 0 2 2 1 95 0 1 1 29 1 76 17 20 36 37 38 32 6 7
          26
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="four" xMin="-9" yMin="0" xMax="595" yMax="740">
      <contour>
        <pt x="-9" y="340" on="1"/>
        <pt x="254" y="740" on="1"/>
        <pt x="438" y="740" on="1"/>
        <pt x="176" y="336" on="1"/>
        <pt x="320" y="336" on="1"/>
        <pt x="320" y="487" on="1"/>
        <pt x="493" y="487" on="1"/>
        <pt x="493" y="336" on="1"/>
        <pt x="594" y="336" on="1"/>
        <pt x="594" y="198" on="1"/>
        <pt x="493" y="198" on="1"/>
        <pt x="493" y="152" on="1"/>
        <pt x="595" y="152" on="1"/>
        <pt x="595" y="0" on="1"/>
        <pt x="250" y="0" on="1"/>
        <pt x="250" y="152" on="1"/>
        <pt x="320" y="152" on="1"/>
        <pt x="320" y="198" on="1"/>
        <pt x="-9" y="198" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          0 1 1 2 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          26
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 32 values pushed */
          3 1 1 8 1 4 5 1 4 102 0 0 0 20 75 0 2 2 23 75 7 1 5 5 6
          94 0 6 6 21 6 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 35 values pushed */
          0 2 0 1 0 2 1 126 3 1 1 8 1 4 5 1 4 102 0 0 0 20 75 7 1
          5 5 6 94 0 6 6 21 6 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 12 values pushed */
          17 17 17 17 17 17 17 17 17 9 7 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="fraction" xMin="-103" yMin="-30" xMax="639" yMax="770">
      <contour>
        <pt x="504" y="770" on="1"/>
        <pt x="639" y="770" on="1"/>
        <pt x="36" y="-30" on="1"/>
        <pt x="-103" y="-30" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 11 values pushed */
          0 1 0 1 132 0 0 0 22 0 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 9 values pushed */
          0 0 1 0 131 0 1 1 116
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 5 values pushed */
          17 16 2 7 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="g" xMin="23" yMin="-228" xMax="572" yMax="529">
      <contour>
        <pt x="355" y="0" on="0"/>
        <pt x="302" y="0" on="1"/>
        <pt x="222" y="0" on="0"/>
        <pt x="95" y="71" on="0"/>
        <pt x="23" y="191" on="0"/>
        <pt x="23" y="262" on="1"/>
        <pt x="23" y="332" on="0"/>
        <pt x="92" y="455" on="0"/>
        <pt x="214" y="529" on="0"/>
        <pt x="290" y="529" on="1"/>
        <pt x="342" y="529" on="0"/>
        <pt x="404" y="507" on="1"/>
        <pt x="404" y="522" on="1"/>
        <pt x="572" y="522" on="1"/>
        <pt x="572" y="21" on="1"/>
        <pt x="572" y="-61" on="0"/>
        <pt x="492" y="-174" on="0"/>
        <pt x="363" y="-228" on="0"/>
        <pt x="291" y="-228" on="1"/>
        <pt x="167" y="-228" on="0"/>
        <pt x="65" y="-163" on="1"/>
        <pt x="90" y="-117" on="1"/>
        <pt x="103" y="-92" on="0"/>
        <pt x="131" y="-42" on="1"/>
        <pt x="169" y="-63" on="0"/>
        <pt x="245" y="-84" on="0"/>
        <pt x="291" y="-84" on="1"/>
        <pt x="341" y="-84" on="0"/>
        <pt x="404" y="-36" on="0"/>
        <pt x="404" y="19" on="1"/>
        <pt x="404" y="20" on="1"/>
      </contour>
      <contour>
        <pt x="333" y="156" on="0"/>
        <pt x="388" y="191" on="0"/>
        <pt x="404" y="222" on="1"/>
        <pt x="404" y="298" on="1"/>
        <pt x="391" y="331" on="0"/>
        <pt x="336" y="371" on="0"/>
        <pt x="303" y="371" on="1"/>
        <pt x="258" y="371" on="0"/>
        <pt x="192" y="306" on="0"/>
        <pt x="192" y="262" on="1"/>
        <pt x="192" y="216" on="0"/>
        <pt x="256" y="156" on="0"/>
        <pt x="302" y="156" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          33
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 23 values pushed */
          11 1 5 1 34 33 2 6 5 29 1 0 6 23 1 4 0 20 1 3 4 5 74
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 23 values pushed */
          11 1 5 2 34 33 2 6 5 29 1 0 6 23 1 4 0 20 1 3 4 5 74
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 33 values pushed */
          0 5 5 1 95 2 1 1 1 31 75 7 1 6 6 0 95 0 0 0 21 75 0 4 4
          3 95 0 3 3 25 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          33
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 31 values pushed */
          2 1 1 0 5 6 1 5 103 7 1 6 6 0 95 0 0 0 21 75 0 4 4 3 95
          0 3 3 25 3 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 38 values pushed */
          0 2 1 5 1 2 5 126 0 1 0 5 6 1 5 103 7 1 6 6 0 95 0 0 0
          21 75 0 4 4 3 95 0 3 3 25 3 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 15 values pushed */
          31 31 31 43 31 42 41 38 36 18 38 32 8 7 26
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="germandbls" xMin="22" yMin="-6" xMax="650" yMax="771">
      <contour>
        <pt x="349" y="372" on="0"/>
        <pt x="349" y="477" on="1"/>
        <pt x="383" y="477" on="1"/>
        <pt x="385" y="477" on="1"/>
        <pt x="407" y="478" on="0"/>
        <pt x="437" y="524" on="0"/>
        <pt x="437" y="546" on="1"/>
        <pt x="437" y="581" on="0"/>
        <pt x="398" y="622" on="0"/>
        <pt x="362" y="622" on="1"/>
        <pt x="331" y="622" on="0"/>
        <pt x="293" y="580" on="0"/>
        <pt x="293" y="545" on="1"/>
        <pt x="293" y="1" on="1"/>
        <pt x="291" y="1" on="1"/>
        <pt x="291" y="0" on="1"/>
        <pt x="22" y="0" on="1"/>
        <pt x="22" y="152" on="1"/>
        <pt x="127" y="152" on="1"/>
        <pt x="127" y="577" on="1"/>
        <pt x="127" y="624" on="0"/>
        <pt x="184" y="714" on="0"/>
        <pt x="291" y="771" on="0"/>
        <pt x="362" y="771" on="1"/>
        <pt x="433" y="771" on="0"/>
        <pt x="539" y="718" on="0"/>
        <pt x="595" y="627" on="0"/>
        <pt x="595" y="572" on="1"/>
        <pt x="595" y="485" on="0"/>
        <pt x="543" y="437" on="1"/>
        <pt x="594" y="406" on="0"/>
        <pt x="650" y="306" on="0"/>
        <pt x="650" y="242" on="1"/>
        <pt x="650" y="118" on="0"/>
        <pt x="504" y="-6" on="0"/>
        <pt x="383" y="-6" on="1"/>
        <pt x="368" y="-6" on="0"/>
        <pt x="348" y="-3" on="1"/>
        <pt x="354" y="101" on="0"/>
        <pt x="358" y="148" on="1"/>
        <pt x="365" y="147" on="0"/>
        <pt x="378" y="147" on="0"/>
        <pt x="381" y="147" on="1"/>
        <pt x="418" y="147" on="0"/>
        <pt x="467" y="197" on="0"/>
        <pt x="467" y="236" on="1"/>
        <pt x="467" y="272" on="0"/>
        <pt x="418" y="321" on="0"/>
        <pt x="382" y="321" on="1"/>
        <pt x="351" y="321" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          39
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 10 values pushed */
          29 1 7 0 1 74 37 1 2 71
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 10 values pushed */
          29 1 7 0 37 1 5 2 2 74
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          39
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 31 values pushed */
          0 0 0 7 3 0 7 103 0 1 1 4 95 0 4 4 30 75 6 1 3 3 2 95 5
          1 2 2 21 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          46
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 41 values pushed */
          0 0 0 7 3 0 7 103 0 1 1 4 95 0 4 4 30 75 6 1 3 3 2 93 0
          2 2 21 75 6 1 3 3 5 95 0 5 5 32 5 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 39 values pushed */
          0 0 0 7 3 0 7 103 0 1 1 4 95 0 4 4 30 75 0 3 3 2 93 0 2
          2 21 75 0 6 6 5 95 0 5 5 32 5 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 37 values pushed */
          0 4 0 1 0 4 1 103 0 0 0 7 3 0 7 103 0 3 3 2 93 0 2 2 21
          75 0 6 6 5 95 0 5 5 32 5 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 11 values pushed */
          36 67 42 36 17 51 36 49 8 7 28
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="grave" xMin="79" yMin="575" xMax="350" yMax="729">
      <contour>
        <pt x="350" y="575" on="1"/>
        <pt x="252" y="729" on="1"/>
        <pt x="79" y="729" on="1"/>
        <pt x="79" y="716" on="1"/>
        <pt x="223" y="575" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          6 100
          WCVTP[ ]	/* WriteCVTInPixels */
          NPUSHB[ ]	/* 33 values pushed */
          3 1 1 0 1 74 0 0 1 1 0 85 0 0 0 1 93 2 1 1 0 1 77 0 0
          0 4 0 4 17 3 7 21
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          6 0
          WCVTP[ ]	/* WriteCVTInPixels */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="greater" xMin="18" yMin="75" xMax="381" yMax="468">
      <contour>
        <pt x="381" y="212" on="1"/>
        <pt x="18" y="75" on="1"/>
        <pt x="18" y="216" on="1"/>
        <pt x="207" y="272" on="1"/>
        <pt x="18" y="323" on="1"/>
        <pt x="18" y="468" on="1"/>
        <pt x="381" y="340" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          5 1 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="guillemotleft" xMin="27" yMin="73" xMax="504" yMax="475">
      <contour>
        <pt x="286" y="73" on="1"/>
        <pt x="168" y="73" on="1"/>
        <pt x="36" y="250" on="1"/>
        <pt x="27" y="282" on="1"/>
        <pt x="171" y="475" on="1"/>
        <pt x="285" y="475" on="1"/>
        <pt x="185" y="275" on="1"/>
      </contour>
      <contour>
        <pt x="504" y="73" on="1"/>
        <pt x="386" y="73" on="1"/>
        <pt x="254" y="250" on="1"/>
        <pt x="245" y="282" on="1"/>
        <pt x="388" y="475" on="1"/>
        <pt x="503" y="475" on="1"/>
        <pt x="403" y="275" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 35 values pushed */
          13 10 6 3 4 0 1 1 74 3 1 1 0 0 1 85 3 1 1 1 0 93 2 1 0
          1 0 77 19 18 19 16 4 7 24
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="guillemotright" xMin="2" yMin="73" xMax="480" yMax="475">
      <contour>
        <pt x="2" y="73" on="1"/>
        <pt x="121" y="73" on="1"/>
        <pt x="252" y="250" on="1"/>
        <pt x="262" y="282" on="1"/>
        <pt x="118" y="475" on="1"/>
        <pt x="4" y="475" on="1"/>
        <pt x="104" y="275" on="1"/>
      </contour>
      <contour>
        <pt x="220" y="73" on="1"/>
        <pt x="339" y="73" on="1"/>
        <pt x="470" y="250" on="1"/>
        <pt x="480" y="282" on="1"/>
        <pt x="336" y="475" on="1"/>
        <pt x="222" y="475" on="1"/>
        <pt x="321" y="275" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 35 values pushed */
          13 10 6 3 4 0 1 1 74 3 1 1 0 0 1 85 3 1 1 1 0 93 2 1 0
          1 0 77 19 18 19 16 4 7 24
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="guilsinglleft" xMin="27" yMin="155" xMax="286" yMax="556">
      <contour>
        <pt x="286" y="155" on="1"/>
        <pt x="168" y="155" on="1"/>
        <pt x="36" y="332" on="1"/>
        <pt x="27" y="363" on="1"/>
        <pt x="171" y="556" on="1"/>
        <pt x="285" y="556" on="1"/>
        <pt x="185" y="356" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 28 values pushed */
          6 3 2 0 1 1 74 0 1 0 0 1 85 0 1 1 0 93 0 0 1 0 77 19 16
          2 7 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="guilsinglright" xMin="2" yMin="155" xMax="262" yMax="556">
      <contour>
        <pt x="2" y="155" on="1"/>
        <pt x="121" y="155" on="1"/>
        <pt x="252" y="332" on="1"/>
        <pt x="262" y="363" on="1"/>
        <pt x="118" y="556" on="1"/>
        <pt x="4" y="556" on="1"/>
        <pt x="104" y="356" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 28 values pushed */
          6 3 2 0 1 1 74 0 1 0 0 1 85 0 1 1 0 93 0 0 1 0 77 19 16
          2 7 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="h" xMin="15" yMin="0" xMax="670" yMax="790">
      <contour>
        <pt x="271" y="760" on="1"/>
        <pt x="271" y="790" on="1"/>
        <pt x="272" y="790" on="1"/>
        <pt x="272" y="462" on="1"/>
        <pt x="327" y="515" on="0"/>
        <pt x="405" y="515" on="1"/>
        <pt x="492" y="515" on="0"/>
        <pt x="597" y="407" on="0"/>
        <pt x="597" y="311" on="1"/>
        <pt x="597" y="152" on="1"/>
        <pt x="670" y="152" on="1"/>
        <pt x="670" y="0" on="1"/>
        <pt x="442" y="0" on="1"/>
        <pt x="442" y="152" on="1"/>
        <pt x="424" y="152" on="1"/>
        <pt x="424" y="269" on="1"/>
        <pt x="424" y="305" on="0"/>
        <pt x="389" y="350" on="0"/>
        <pt x="363" y="350" on="1"/>
        <pt x="324" y="350" on="0"/>
        <pt x="272" y="304" on="1"/>
        <pt x="272" y="152" on="1"/>
        <pt x="346" y="152" on="1"/>
        <pt x="346" y="0" on="1"/>
        <pt x="29" y="0" on="1"/>
        <pt x="29" y="152" on="1"/>
        <pt x="101" y="152" on="1"/>
        <pt x="101" y="608" on="1"/>
        <pt x="15" y="608" on="1"/>
        <pt x="15" y="760" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 10 values pushed */
          3 1 4 0 20 1 3 4 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 43 values pushed */
          0 3 4 1 4 3 1 126 0 8 8 9 93 10 1 9 9 22 75 0 4 4 0 95 0
          0 0 23 75 7 5 2 1 1 2 93 6 1 2 2 21 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 41 values pushed */
          0 3 4 1 4 3 1 126 0 0 0 4 3 0 4 103 0 8 8 9 93 10 1 9 9
          22 75 7 5 2 1 1 2 93 6 1 2 2 21 2 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 18 values pushed */
          0 0 0 29 0 29 17 17 17 18 35 17 17 19 36 11 7 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="hungarumlaut" xMin="42" yMin="702" xMax="483" yMax="856">
      <contour>
        <pt x="226" y="854" on="0"/>
        <pt x="276" y="856" on="1"/>
        <pt x="203" y="774" on="0"/>
        <pt x="149" y="710" on="1"/>
        <pt x="108" y="708" on="0"/>
        <pt x="42" y="702" on="1"/>
        <pt x="124" y="848" on="1"/>
      </contour>
      <contour>
        <pt x="431" y="854" on="0"/>
        <pt x="483" y="856" on="1"/>
        <pt x="388" y="759" on="1"/>
        <pt x="340" y="710" on="1"/>
        <pt x="233" y="702" on="1"/>
        <pt x="329" y="848" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          6 100
          WCVTP[ ]	/* WriteCVTInPixels */
          NPUSHB[ ]	/* 44 values pushed */
          11 5 2 1 71 4 2 3 3 0 1 1 0 85 4 2 3 3 0 0 1 95 0 1 0
          1 79 8 7 1 0 7 12 8 12 4 3 0 6 1 6 5 7 20
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          6 0
          WCVTP[ ]	/* WriteCVTInPixels */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="hyphen" xMin="24" yMin="211" xMax="344" yMax="363">
      <contour>
        <pt x="24" y="211" on="1"/>
        <pt x="24" y="363" on="1"/>
        <pt x="344" y="363" on="1"/>
        <pt x="344" y="211" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 27 values pushed */
          0 0 1 1 0 85 0 0 0 1 93 2 1 1 0 1 77 0 0 0 3 0 3 17 3
          7 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="i" xMin="24" yMin="0" xMax="342" yMax="759">
      <contour>
        <pt x="97" y="703" on="0"/>
        <pt x="152" y="759" on="0"/>
        <pt x="192" y="759" on="1"/>
        <pt x="231" y="759" on="0"/>
        <pt x="286" y="703" on="0"/>
        <pt x="286" y="663" on="1"/>
        <pt x="286" y="624" on="0"/>
        <pt x="231" y="568" on="0"/>
        <pt x="192" y="568" on="1"/>
        <pt x="152" y="568" on="0"/>
        <pt x="97" y="624" on="0"/>
        <pt x="97" y="663" on="1"/>
      </contour>
      <contour>
        <pt x="24" y="506" on="1"/>
        <pt x="274" y="506" on="1"/>
        <pt x="274" y="152" on="1"/>
        <pt x="342" y="152" on="1"/>
        <pt x="342" y="0" on="1"/>
        <pt x="24" y="0" on="1"/>
        <pt x="24" y="152" on="1"/>
        <pt x="102" y="152" on="1"/>
        <pt x="102" y="354" on="1"/>
        <pt x="24" y="354" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 32 values pushed */
          0 1 1 0 95 0 0 0 22 75 0 6 6 2 93 0 2 2 23 75 5 1 3 3 4
          93 0 4 4 21 4 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 30 values pushed */
          0 2 0 6 3 2 6 101 0 1 1 0 95 0 0 0 22 75 5 1 3 3 4 93 0
          4 4 21 4 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 10 values pushed */
          17 17 17 17 19 36 33 7 7 27
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="iacute" xMin="29" yMin="0" xMax="458" yMax="729">
      <contour>
        <pt x="284" y="729" on="1"/>
        <pt x="458" y="729" on="1"/>
        <pt x="458" y="716" on="1"/>
        <pt x="308" y="575" on="1"/>
        <pt x="178" y="575" on="1"/>
      </contour>
      <contour>
        <pt x="29" y="506" on="1"/>
        <pt x="280" y="506" on="1"/>
        <pt x="280" y="152" on="1"/>
        <pt x="347" y="152" on="1"/>
        <pt x="347" y="0" on="1"/>
        <pt x="30" y="0" on="1"/>
        <pt x="30" y="152" on="1"/>
        <pt x="107" y="152" on="1"/>
        <pt x="107" y="354" on="1"/>
        <pt x="29" y="354" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          2 1 1 0 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 32 values pushed */
          0 1 1 0 93 0 0 0 20 75 0 6 6 2 93 0 2 2 23 75 5 1 3 3 4
          93 0 4 4 21 4 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          45
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 30 values pushed */
          0 2 0 6 3 2 6 101 0 1 1 0 93 0 0 0 20 75 5 1 3 3 4 93 0
          4 4 21 4 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 28 values pushed */
          0 0 0 1 2 0 1 101 0 2 0 6 3 2 6 101 5 1 3 3 4 93 0 4 4
          21 4 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 10 values pushed */
          17 17 17 17 17 18 16 7 7 27
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="icircumflex" xMin="29" yMin="0" xMax="454" yMax="735">
      <contour>
        <pt x="170" y="574" on="1"/>
        <pt x="242" y="649" on="1"/>
        <pt x="317" y="574" on="1"/>
        <pt x="454" y="574" on="1"/>
        <pt x="316" y="735" on="1"/>
        <pt x="168" y="735" on="1"/>
        <pt x="31" y="574" on="1"/>
      </contour>
      <contour>
        <pt x="29" y="506" on="1"/>
        <pt x="280" y="506" on="1"/>
        <pt x="280" y="152" on="1"/>
        <pt x="347" y="152" on="1"/>
        <pt x="347" y="0" on="1"/>
        <pt x="30" y="0" on="1"/>
        <pt x="30" y="152" on="1"/>
        <pt x="107" y="152" on="1"/>
        <pt x="107" y="354" on="1"/>
        <pt x="29" y="354" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          1 1 0 1 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          18
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 35 values pushed */
          0 1 0 1 131 8 2 2 0 3 3 0 110 0 7 7 3 93 0 3 3 23 75 6 1
          4 4 5 94 0 5 5 21 5 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 34 values pushed */
          0 1 0 1 131 8 2 2 0 3 0 131 0 7 7 3 93 0 3 3 23 75 6 1 4
          4 5 94 0 5 5 21 5 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 32 values pushed */
          0 1 0 1 131 8 2 2 0 3 0 131 0 3 0 7 4 3 7 102 6 1 4 4 5
          94 0 5 5 21 5 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 21 values pushed */
          0 0 16 15 14 13 12 11 10 9 8 7 0 6 0 6 17 18 9 7 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="idieresis" xMin="11" yMin="0" xMax="438" yMax="748">
      <contour>
        <pt x="11" y="692" on="0"/>
        <pt x="66" y="748" on="0"/>
        <pt x="106" y="748" on="1"/>
        <pt x="145" y="748" on="0"/>
        <pt x="200" y="692" on="0"/>
        <pt x="200" y="652" on="1"/>
        <pt x="200" y="613" on="0"/>
        <pt x="145" y="557" on="0"/>
        <pt x="106" y="557" on="1"/>
        <pt x="66" y="557" on="0"/>
        <pt x="11" y="613" on="0"/>
        <pt x="11" y="652" on="1"/>
      </contour>
      <contour>
        <pt x="249" y="692" on="0"/>
        <pt x="304" y="748" on="0"/>
        <pt x="344" y="748" on="1"/>
        <pt x="383" y="748" on="0"/>
        <pt x="438" y="692" on="0"/>
        <pt x="438" y="652" on="1"/>
        <pt x="438" y="613" on="0"/>
        <pt x="383" y="557" on="0"/>
        <pt x="344" y="557" on="1"/>
        <pt x="304" y="557" on="0"/>
        <pt x="249" y="613" on="0"/>
        <pt x="249" y="652" on="1"/>
      </contour>
      <contour>
        <pt x="29" y="506" on="1"/>
        <pt x="280" y="506" on="1"/>
        <pt x="280" y="152" on="1"/>
        <pt x="347" y="152" on="1"/>
        <pt x="347" y="0" on="1"/>
        <pt x="30" y="0" on="1"/>
        <pt x="30" y="152" on="1"/>
        <pt x="107" y="152" on="1"/>
        <pt x="107" y="354" on="1"/>
        <pt x="29" y="354" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 34 values pushed */
          3 1 1 1 0 95 2 1 0 0 28 75 0 8 8 4 93 0 4 4 23 75 7 1 5
          5 6 93 0 6 6 21 6 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 32 values pushed */
          0 4 0 8 5 4 8 101 3 1 1 1 0 95 2 1 0 0 28 75 7 1 5 5 6
          93 0 6 6 21 6 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 12 values pushed */
          17 17 17 17 19 36 36 36 33 9 7 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="igrave" xMin="29" yMin="0" xMax="347" yMax="729">
      <contour>
        <pt x="307" y="575" on="1"/>
        <pt x="209" y="729" on="1"/>
        <pt x="36" y="729" on="1"/>
        <pt x="36" y="716" on="1"/>
        <pt x="180" y="575" on="1"/>
      </contour>
      <contour>
        <pt x="29" y="506" on="1"/>
        <pt x="280" y="506" on="1"/>
        <pt x="280" y="152" on="1"/>
        <pt x="347" y="152" on="1"/>
        <pt x="347" y="0" on="1"/>
        <pt x="30" y="0" on="1"/>
        <pt x="30" y="152" on="1"/>
        <pt x="107" y="152" on="1"/>
        <pt x="107" y="354" on="1"/>
        <pt x="29" y="354" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          3 1 1 0 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 33 values pushed */
          0 0 1 0 131 7 1 1 2 1 131 0 6 6 2 93 0 2 2 23 75 5 1 3 3
          4 94 0 4 4 21 4 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 31 values pushed */
          0 0 1 0 131 7 1 1 2 1 131 0 2 0 6 3 2 6 101 5 1 3 3 4 94
          0 4 4 21 4 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 20 values pushed */
          0 0 14 13 12 11 10 9 8 7 6 5 0 4 0 4 17 8 7 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="j" xMin="19" yMin="-230" xMax="279" yMax="761">
      <contour>
        <pt x="85" y="704" on="0"/>
        <pt x="141" y="761" on="0"/>
        <pt x="182" y="761" on="1"/>
        <pt x="221" y="761" on="0"/>
        <pt x="279" y="703" on="0"/>
        <pt x="279" y="663" on="1"/>
        <pt x="279" y="623" on="0"/>
        <pt x="221" y="566" on="0"/>
        <pt x="182" y="566" on="1"/>
        <pt x="141" y="566" on="0"/>
        <pt x="85" y="623" on="0"/>
        <pt x="85" y="663" on="1"/>
      </contour>
      <contour>
        <pt x="275" y="506" on="1"/>
        <pt x="275" y="324" on="1"/>
        <pt x="262" y="324" on="1"/>
        <pt x="262" y="2" on="1"/>
        <pt x="262" y="-121" on="0"/>
        <pt x="144" y="-230" on="0"/>
        <pt x="27" y="-229" on="1"/>
        <pt x="26" y="-165" on="1"/>
        <pt x="27" y="-102" on="1"/>
        <pt x="58" y="-102" on="0"/>
        <pt x="91" y="-56" on="0"/>
        <pt x="91" y="-15" on="1"/>
        <pt x="91" y="354" on="1"/>
        <pt x="19" y="354" on="1"/>
        <pt x="19" y="506" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 39 values pushed */
          0 2 5 4 5 2 112 0 1 1 0 95 0 0 0 30 75 0 5 5 6 93 7 1 6
          6 23 75 0 4 4 3 95 0 3 3 25 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          41
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 37 values pushed */
          0 2 5 4 5 2 112 7 1 6 0 5 2 6 5 101 0 1 1 0 95 0 0 0 30
          75 0 4 4 3 95 0 3 3 25 3 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 38 values pushed */
          0 2 5 4 5 2 4 126 7 1 6 0 5 2 6 5 101 0 1 1 0 95 0 0 0
          30 75 0 4 4 3 95 0 3 3 25 3 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 15 values pushed */
          12 12 12 26 12 26 19 18 19 20 36 33 8 7 26
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="k" xMin="18" yMin="0" xMax="639" yMax="760">
      <contour>
        <pt x="285" y="760" on="1"/>
        <pt x="285" y="671" on="1"/>
        <pt x="286" y="671" on="1"/>
        <pt x="286" y="331" on="1"/>
        <pt x="337" y="331" on="1"/>
        <pt x="340" y="337" on="0"/>
        <pt x="343" y="349" on="0"/>
        <pt x="345" y="354" on="1"/>
        <pt x="350" y="354" on="1"/>
        <pt x="350" y="506" on="1"/>
        <pt x="639" y="506" on="1"/>
        <pt x="639" y="354" on="1"/>
        <pt x="539" y="354" on="1"/>
        <pt x="466" y="263" on="1"/>
        <pt x="508" y="209" on="1"/>
        <pt x="517" y="196" on="0"/>
        <pt x="537" y="170" on="1"/>
        <pt x="629" y="170" on="1"/>
        <pt x="629" y="0" on="1"/>
        <pt x="481" y="0" on="1"/>
        <pt x="332" y="214" on="1"/>
        <pt x="286" y="214" on="1"/>
        <pt x="286" y="152" on="1"/>
        <pt x="341" y="152" on="1"/>
        <pt x="341" y="0" on="1"/>
        <pt x="38" y="0" on="1"/>
        <pt x="38" y="152" on="1"/>
        <pt x="115" y="152" on="1"/>
        <pt x="115" y="608" on="1"/>
        <pt x="18" y="608" on="1"/>
        <pt x="18" y="760" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 11 values pushed */
          13 1 5 0 1 74 8 1 2 1 73
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          14
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 43 values pushed */
          0 0 0 5 3 0 5 101 0 9 9 10 93 11 1 10 10 22 75 0 2 2 1 93 0
          1 1 23 75 8 6 2 3 3 4 93 7 1 4 4 21 4 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 53 values pushed */
          0 0 0 5 3 0 5 101 0 9 9 10 93 11 1 10 10 22 75 0 2 2 1 93 0
          1 1 23 75 0 3 3 4 93 7 1 4 4 21 75 8 1 6 6 4 93 7 1 4 4
          21 4 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 51 values pushed */
          0 1 0 2 0 1 2 101 0 0 0 5 3 0 5 101 0 9 9 10 93 11 1 10 10
          22 75 0 3 3 4 93 7 1 4 4 21 75 8 1 6 6 4 93 7 1 4 4 21 4
          76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 20 values pushed */
          0 0 0 30 0 30 29 28 17 17 17 17 17 20 17 21 19 12 7 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="l" xMin="25" yMin="0" xMax="352" yMax="760">
      <contour>
        <pt x="25" y="760" on="1"/>
        <pt x="276" y="760" on="1"/>
        <pt x="276" y="578" on="1"/>
        <pt x="274" y="152" on="1"/>
        <pt x="352" y="152" on="1"/>
        <pt x="352" y="0" on="1"/>
        <pt x="26" y="0" on="1"/>
        <pt x="26" y="152" on="1"/>
        <pt x="103" y="152" on="1"/>
        <pt x="103" y="608" on="1"/>
        <pt x="25" y="608" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 30 values pushed */
          0 4 4 0 93 0 0 0 22 75 3 1 1 1 2 93 0 2 2 21 2 76 17 17 17
          18 16 5 7 25
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="less" xMin="19" yMin="75" xMax="381" yMax="468">
      <contour>
        <pt x="19" y="339" on="1"/>
        <pt x="381" y="468" on="1"/>
        <pt x="381" y="323" on="1"/>
        <pt x="193" y="272" on="1"/>
        <pt x="381" y="216" on="1"/>
        <pt x="381" y="75" on="1"/>
        <pt x="19" y="211" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          5 1 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="logicalnot" xMin="25" yMin="89" xMax="812" yMax="512">
      <contour>
        <pt x="25" y="512" on="1"/>
        <pt x="25" y="376" on="1"/>
        <pt x="654" y="376" on="1"/>
        <pt x="654" y="89" on="1"/>
        <pt x="812" y="89" on="1"/>
        <pt x="812" y="512" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 17 values pushed */
          0 1 0 1 132 0 0 0 2 93 3 1 2 2 23 0 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 23 values pushed */
          0 1 0 1 132 3 1 2 0 0 2 85 3 1 2 2 0 93 0 0 2 0 77
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 11 values pushed */
          0 0 0 5 0 5 17 17 4 7 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="m" xMin="24" yMin="0" xMax="1043" yMax="516">
      <contour>
        <pt x="242" y="506" on="1"/>
        <pt x="233" y="503" on="0"/>
        <pt x="223" y="503" on="1"/>
        <pt x="223" y="442" on="1"/>
        <pt x="266" y="477" on="0"/>
        <pt x="373" y="516" on="0"/>
        <pt x="428" y="516" on="1"/>
        <pt x="546" y="516" on="0"/>
        <pt x="595" y="435" on="1"/>
        <pt x="627" y="472" on="0"/>
        <pt x="722" y="516" on="0"/>
        <pt x="774" y="516" on="1"/>
        <pt x="870" y="516" on="0"/>
        <pt x="971" y="410" on="0"/>
        <pt x="971" y="311" on="1"/>
        <pt x="971" y="152" on="1"/>
        <pt x="1043" y="152" on="1"/>
        <pt x="1043" y="0" on="1"/>
        <pt x="815" y="0" on="1"/>
        <pt x="815" y="83" on="1"/>
        <pt x="789" y="83" on="1"/>
        <pt x="789" y="281" on="1"/>
        <pt x="789" y="319" on="0"/>
        <pt x="750" y="364" on="0"/>
        <pt x="716" y="364" on="1"/>
        <pt x="689" y="364" on="0"/>
        <pt x="649" y="339" on="0"/>
        <pt x="627" y="305" on="1"/>
        <pt x="627" y="293" on="1"/>
        <pt x="627" y="152" on="1"/>
        <pt x="700" y="152" on="1"/>
        <pt x="700" y="0" on="1"/>
        <pt x="472" y="0" on="1"/>
        <pt x="472" y="152" on="1"/>
        <pt x="446" y="152" on="1"/>
        <pt x="446" y="282" on="1"/>
        <pt x="446" y="316" on="0"/>
        <pt x="404" y="362" on="0"/>
        <pt x="373" y="364" on="1"/>
        <pt x="346" y="364" on="0"/>
        <pt x="301" y="342" on="0"/>
        <pt x="281" y="312" on="1"/>
        <pt x="281" y="152" on="1"/>
        <pt x="365" y="152" on="1"/>
        <pt x="365" y="0" on="1"/>
        <pt x="24" y="0" on="1"/>
        <pt x="24" y="152" on="1"/>
        <pt x="100" y="152" on="1"/>
        <pt x="100" y="354" on="1"/>
        <pt x="26" y="354" on="1"/>
        <pt x="26" y="506" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          24
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 12 values pushed */
          8 3 2 6 0 41 27 2 9 6 2 74
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 12 values pushed */
          8 3 2 6 0 41 27 2 9 14 2 74
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          24
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 55 values pushed */
          0 0 1 6 1 0 6 126 0 9 6 3 6 9 3 126 0 5 3 4 3 5 4 126 14
          10 2 6 6 1 96 16 15 2 3 1 1 23 75 13 11 7 3 3 3 4 93 12 8 2
          4 4 21 4 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 63 values pushed */
          0 0 15 6 15 0 6 126 0 9 14 3 14 9 3 126 0 5 3 4 3 5 4 126 10
          1 6 6 1 95 2 1 1 1 23 75 0 14 14 15 94 16 1 15 15 23 75 13 11 7
          3 3 3 4 93 12 8 2 4 4 21 4 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 59 values pushed */
          0 0 15 6 15 0 6 126 0 9 14 3 14 9 3 126 0 5 3 4 3 5 4 126 2
          1 1 10 1 6 14 1 6 103 16 1 15 0 14 9 15 14 101 13 11 7 3 3 3 4
          93 12 8 2 4 4 21 4 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 30 values pushed */
          0 0 0 50 0 50 49 48 47 46 45 44 43 42 39 37 34 33 17 20 35 17 17 19 35
          35 17 17 7 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="macron" xMin="48" yMin="565" xMax="371" yMax="687">
      <contour>
        <pt x="371" y="565" on="1"/>
        <pt x="48" y="565" on="1"/>
        <pt x="48" y="687" on="1"/>
        <pt x="371" y="687" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          6 100
          WCVTP[ ]	/* WriteCVTInPixels */
          NPUSHB[ ]	/* 21 values pushed */
          0 1 0 0 1 85 0 1 1 0 93 0 0 1 0 77 17 16 2 7 22
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          6 0
          WCVTP[ ]	/* WriteCVTInPixels */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="minus" xMin="68" yMin="219" xMax="568" yMax="373">
      <contour>
        <pt x="68" y="373" on="1"/>
        <pt x="568" y="373" on="1"/>
        <pt x="568" y="219" on="1"/>
        <pt x="68" y="219" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          2 0 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="multiply" xMin="14" yMin="45" xMax="580" yMax="616">
      <contour>
        <pt x="185" y="323" on="1"/>
        <pt x="14" y="501" on="1"/>
        <pt x="135" y="613" on="1"/>
        <pt x="297" y="444" on="1"/>
        <pt x="461" y="616" on="1"/>
        <pt x="580" y="503" on="1"/>
        <pt x="409" y="324" on="1"/>
        <pt x="571" y="156" on="1"/>
        <pt x="451" y="45" on="1"/>
        <pt x="296" y="205" on="1"/>
        <pt x="143" y="46" on="1"/>
        <pt x="26" y="158" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          8 4 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="n" xMin="24" yMin="0" xMax="697" yMax="515">
      <contour>
        <pt x="443" y="152" on="1"/>
        <pt x="443" y="282" on="1"/>
        <pt x="443" y="318" on="0"/>
        <pt x="403" y="364" on="0"/>
        <pt x="373" y="364" on="1"/>
        <pt x="346" y="364" on="0"/>
        <pt x="300" y="342" on="0"/>
        <pt x="279" y="311" on="1"/>
        <pt x="279" y="152" on="1"/>
        <pt x="365" y="152" on="1"/>
        <pt x="365" y="0" on="1"/>
        <pt x="24" y="0" on="1"/>
        <pt x="24" y="152" on="1"/>
        <pt x="99" y="152" on="1"/>
        <pt x="99" y="354" on="1"/>
        <pt x="26" y="354" on="1"/>
        <pt x="26" y="506" on="1"/>
        <pt x="279" y="506" on="1"/>
        <pt x="279" y="466" on="1"/>
        <pt x="310" y="490" on="0"/>
        <pt x="389" y="515" on="0"/>
        <pt x="431" y="515" on="1"/>
        <pt x="524" y="515" on="0"/>
        <pt x="625" y="409" on="0"/>
        <pt x="625" y="311" on="1"/>
        <pt x="625" y="152" on="1"/>
        <pt x="697" y="152" on="1"/>
        <pt x="697" y="0" on="1"/>
        <pt x="470" y="0" on="1"/>
        <pt x="470" y="152" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          24
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 10 values pushed */
          18 1 0 5 7 1 9 0 2 74
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 10 values pushed */
          18 1 0 5 7 1 9 4 2 74
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          24
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 35 values pushed */
          10 1 9 0 1 0 9 1 126 4 1 0 0 5 95 6 1 5 5 23 75 7 3 2 1
          1 2 93 8 1 2 2 21 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          26
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 45 values pushed */
          10 1 9 4 1 4 9 1 126 0 0 0 5 95 6 1 5 5 23 75 0 4 4 5 95
          6 1 5 5 23 75 7 3 2 1 1 2 93 8 1 2 2 21 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 43 values pushed */
          10 1 9 4 1 4 9 1 126 0 0 0 6 95 0 6 6 23 75 0 4 4 5 93 0
          5 5 23 75 7 3 2 1 1 2 93 8 1 2 2 21 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 39 values pushed */
          10 1 9 4 1 4 9 1 126 0 6 0 0 4 6 0 103 0 5 0 4 9 5 4 101
          7 3 2 1 1 2 93 8 1 2 2 21 2 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 18 values pushed */
          0 0 0 29 0 29 17 19 35 17 17 17 17 19 35 11 7 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="nine" xMin="54" yMin="-1" xMax="563" yMax="746">
      <contour>
        <pt x="271" y="260" on="1"/>
        <pt x="265" y="263" on="0"/>
        <pt x="246" y="269" on="0"/>
        <pt x="240" y="271" on="1"/>
        <pt x="158" y="292" on="0"/>
        <pt x="54" y="421" on="0"/>
        <pt x="54" y="502" on="1"/>
        <pt x="54" y="568" on="0"/>
        <pt x="122" y="680" on="0"/>
        <pt x="239" y="746" on="0"/>
        <pt x="309" y="746" on="1"/>
        <pt x="378" y="746" on="0"/>
        <pt x="495" y="681" on="0"/>
        <pt x="563" y="570" on="0"/>
        <pt x="563" y="505" on="1"/>
        <pt x="563" y="460" on="0"/>
        <pt x="533" y="386" on="0"/>
        <pt x="502" y="332" on="1"/>
        <pt x="318" y="-1" on="1"/>
        <pt x="127" y="-1" on="1"/>
      </contour>
      <contour>
        <pt x="331" y="424" on="0"/>
        <pt x="369" y="437" on="0"/>
        <pt x="382" y="450" on="1"/>
        <pt x="399" y="476" on="0"/>
        <pt x="399" y="502" on="1"/>
        <pt x="399" y="517" on="0"/>
        <pt x="381" y="554" on="0"/>
        <pt x="341" y="582" on="0"/>
        <pt x="309" y="582" on="1"/>
        <pt x="274" y="582" on="0"/>
        <pt x="218" y="540" on="0"/>
        <pt x="218" y="503" on="1"/>
        <pt x="218" y="470" on="0"/>
        <pt x="271" y="424" on="0"/>
        <pt x="309" y="424" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 34 values pushed */
          0 2 2 0 95 0 0 0 20 75 4 1 3 3 1 93 0 1 1 21 1 76 20 20 20
          34 20 33 40 23 41 5 7 23
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="nonmarkingreturn"/><!-- contains no outline data -->

    <TTGlyph name="ntilde" xMin="28" yMin="0" xMax="675" yMax="733">
      <contour>
        <pt x="365" y="733" on="0"/>
        <pt x="398" y="722" on="0"/>
        <pt x="428" y="710" on="1"/>
        <pt x="455" y="699" on="0"/>
        <pt x="483" y="690" on="0"/>
        <pt x="497" y="690" on="1"/>
        <pt x="521" y="690" on="0"/>
        <pt x="555" y="704" on="0"/>
        <pt x="570" y="721" on="1"/>
        <pt x="654" y="681" on="1"/>
        <pt x="636" y="634" on="0"/>
        <pt x="556" y="570" on="0"/>
        <pt x="510" y="570" on="1"/>
        <pt x="487" y="570" on="0"/>
        <pt x="445" y="581" on="0"/>
        <pt x="419" y="592" on="1"/>
        <pt x="373" y="611" on="0"/>
        <pt x="345" y="611" on="1"/>
        <pt x="327" y="611" on="0"/>
        <pt x="301" y="598" on="0"/>
        <pt x="283" y="584" on="0"/>
        <pt x="280" y="582" on="1"/>
        <pt x="198" y="619" on="1"/>
        <pt x="207" y="653" on="0"/>
        <pt x="260" y="705" on="0"/>
        <pt x="324" y="733" on="0"/>
        <pt x="348" y="733" on="1"/>
      </contour>
      <contour>
        <pt x="447" y="152" on="1"/>
        <pt x="447" y="282" on="1"/>
        <pt x="447" y="318" on="0"/>
        <pt x="407" y="364" on="0"/>
        <pt x="377" y="364" on="1"/>
        <pt x="349" y="364" on="0"/>
        <pt x="304" y="342" on="0"/>
        <pt x="283" y="311" on="1"/>
        <pt x="283" y="152" on="1"/>
        <pt x="368" y="152" on="1"/>
        <pt x="368" y="0" on="1"/>
        <pt x="28" y="0" on="1"/>
        <pt x="28" y="152" on="1"/>
        <pt x="102" y="152" on="1"/>
        <pt x="102" y="354" on="1"/>
        <pt x="30" y="354" on="1"/>
        <pt x="30" y="506" on="1"/>
        <pt x="282" y="506" on="1"/>
        <pt x="282" y="466" on="1"/>
        <pt x="346" y="515" on="0"/>
        <pt x="434" y="515" on="1"/>
        <pt x="528" y="515" on="0"/>
        <pt x="629" y="409" on="0"/>
        <pt x="629" y="311" on="1"/>
        <pt x="629" y="152" on="1"/>
        <pt x="675" y="152" on="1"/>
        <pt x="675" y="0" on="1"/>
        <pt x="448" y="0" on="1"/>
        <pt x="448" y="152" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          24
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 19 values pushed */
          8 1 0 3 22 9 2 2 0 45 1 4 9 34 1 5 4 4 74
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 19 values pushed */
          8 1 0 3 22 9 2 2 0 45 1 4 9 34 1 5 8 4 74
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          24
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 45 values pushed */
          0 0 0 1 9 0 1 103 0 2 2 3 95 13 1 3 3 20 75 8 1 4 4 9 95
          10 1 9 9 23 75 11 7 2 5 5 6 93 12 1 6 6 21 6 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          26
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 55 values pushed */
          0 0 0 1 9 0 1 103 0 2 2 3 95 13 1 3 3 20 75 0 4 4 9 95 10
          1 9 9 23 75 0 8 8 9 95 10 1 9 9 23 75 11 7 2 5 5 6 93 12 1
          6 6 21 6 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 53 values pushed */
          0 0 0 1 10 0 1 103 0 2 2 3 95 13 1 3 3 20 75 0 4 4 10 95 0
          10 10 23 75 0 8 8 9 93 0 9 9 23 75 11 7 2 5 5 6 93 12 1 6 6
          21 6 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 49 values pushed */
          0 0 0 1 10 0 1 103 0 10 0 4 8 10 4 103 0 9 0 8 5 9 8 101 0
          2 2 3 95 13 1 3 3 20 75 11 7 2 5 5 6 93 12 1 6 6 21 6 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 30 values pushed */
          0 0 54 53 52 51 48 46 44 43 42 41 40 39 38 37 36 35 32 30 0 26 0 25 35
          37 36 14 7 23
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="numbersign" xMin="2" yMin="0" xMax="751" yMax="740">
      <contour>
        <pt x="80" y="585" on="1"/>
        <pt x="156" y="585" on="1"/>
        <pt x="187" y="740" on="1"/>
        <pt x="373" y="740" on="1"/>
        <pt x="343" y="585" on="1"/>
        <pt x="498" y="585" on="1"/>
        <pt x="528" y="740" on="1"/>
        <pt x="715" y="740" on="1"/>
        <pt x="685" y="585" on="1"/>
        <pt x="751" y="585" on="1"/>
        <pt x="716" y="432" on="1"/>
        <pt x="655" y="432" on="1"/>
        <pt x="623" y="270" on="1"/>
        <pt x="706" y="270" on="1"/>
        <pt x="670" y="118" on="1"/>
        <pt x="593" y="118" on="1"/>
        <pt x="571" y="0" on="1"/>
        <pt x="383" y="0" on="1"/>
        <pt x="406" y="118" on="1"/>
        <pt x="254" y="118" on="1"/>
        <pt x="231" y="0" on="1"/>
        <pt x="41" y="0" on="1"/>
        <pt x="65" y="118" on="1"/>
        <pt x="2" y="118" on="1"/>
        <pt x="37" y="270" on="1"/>
        <pt x="94" y="270" on="1"/>
        <pt x="126" y="432" on="1"/>
        <pt x="45" y="432" on="1"/>
      </contour>
      <contour>
        <pt x="283" y="270" on="1"/>
        <pt x="436" y="270" on="1"/>
        <pt x="467" y="432" on="1"/>
        <pt x="314" y="432" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 63 values pushed */
          4 2 2 0 15 13 2 5 6 0 5 102 14 12 2 6 11 9 2 7 8 6 7 101 3
          1 1 1 20 75 10 1 8 8 21 8 76 31 30 29 28 27 26 25 24 23 22 21 20 19
          18 17 17 17 17 17 17 17 17 16 16 7 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="o" xMin="31" yMin="-11" xMax="581" yMax="521">
      <contour>
        <pt x="31" y="327" on="0"/>
        <pt x="103" y="448" on="0"/>
        <pt x="229" y="521" on="0"/>
        <pt x="307" y="521" on="1"/>
        <pt x="385" y="521" on="0"/>
        <pt x="510" y="448" on="0"/>
        <pt x="581" y="326" on="0"/>
        <pt x="581" y="255" on="1"/>
        <pt x="581" y="184" on="0"/>
        <pt x="512" y="62" on="0"/>
        <pt x="387" y="-11" on="0"/>
        <pt x="307" y="-11" on="1"/>
        <pt x="226" y="-11" on="0"/>
        <pt x="100" y="61" on="0"/>
        <pt x="31" y="184" on="0"/>
        <pt x="31" y="256" on="1"/>
      </contour>
      <contour>
        <pt x="196" y="209" on="0"/>
        <pt x="261" y="144" on="0"/>
        <pt x="307" y="144" on="1"/>
        <pt x="353" y="144" on="0"/>
        <pt x="415" y="208" on="0"/>
        <pt x="415" y="256" on="1"/>
        <pt x="415" y="305" on="0"/>
        <pt x="353" y="366" on="0"/>
        <pt x="307" y="366" on="1"/>
        <pt x="260" y="366" on="0"/>
        <pt x="196" y="305" on="0"/>
        <pt x="196" y="256" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 21 values pushed */
          0 3 3 0 95 0 0 0 31 75 0 2 2 1 95 0 1 1 32 1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 19 values pushed */
          0 0 0 3 2 0 3 103 0 2 2 1 95 0 1 1 32 1 76
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          36 37 38 34 4 7 24
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="oacute" xMin="24" yMin="-11" xMax="574" yMax="729">
      <component glyphName="o" x="-7" y="0" flags="0x0"/>
      <component glyphName="acute" x="236" y="0" flags="0x0"/>
    </TTGlyph>

    <TTGlyph name="ocircumflex" xMin="24" yMin="-11" xMax="574" yMax="735">
      <component glyphName="o" x="-7" y="0" flags="0x0"/>
      <component glyphName="circumflex" x="81" y="0" flags="0x0"/>
    </TTGlyph>

    <TTGlyph name="odieresis" xMin="31" yMin="-11" xMax="581" yMax="748">
      <component glyphName="o" x="0" y="0" flags="0x0"/>
      <component glyphName="dotaccent" x="56" y="-11" flags="0x4"/>
      <component glyphName="dotaccent" x="294" y="-11" flags="0x4"/>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          2 1
          PUSHW[ ]	/* 1 value pushed */
          -11
          PUSHB[ ]	/* 1 value pushed */
          51
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          3 1
          PUSHW[ ]	/* 1 value pushed */
          -11
          PUSHB[ ]	/* 1 value pushed */
          51
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ogonek" xMin="14" yMin="-223" xMax="238" yMax="52">
      <contour>
        <pt x="166" y="-13" on="0"/>
        <pt x="114" y="-66" on="0"/>
        <pt x="114" y="-100" on="1"/>
        <pt x="114" y="-117" on="0"/>
        <pt x="140" y="-133" on="0"/>
        <pt x="159" y="-133" on="1"/>
        <pt x="190" y="-133" on="0"/>
        <pt x="214" y="-122" on="1"/>
        <pt x="238" y="-203" on="1"/>
        <pt x="226" y="-210" on="0"/>
        <pt x="172" y="-223" on="0"/>
        <pt x="151" y="-223" on="1"/>
        <pt x="90" y="-223" on="0"/>
        <pt x="14" y="-170" on="0"/>
        <pt x="14" y="-122" on="1"/>
        <pt x="14" y="-76" on="0"/>
        <pt x="72" y="-3" on="0"/>
        <pt x="153" y="43" on="0"/>
        <pt x="187" y="52" on="1"/>
        <pt x="229" y="14" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          6 100
          WCVTP[ ]	/* WriteCVTInPixels */
          NPUSHB[ ]	/* 33 values pushed */
          8 1 1 0 1 74 19 18 7 3 0 72 0 0 1 1 0 87 0 0 0 1 95 0 1
          0 1 79 36 36 2 7 22
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          6 0
          WCVTP[ ]	/* WriteCVTInPixels */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ograve" xMin="24" yMin="-11" xMax="574" yMax="729">
      <component glyphName="o" x="-7" y="0" flags="0x0"/>
      <component glyphName="grave" x="27" y="0" flags="0x0"/>
    </TTGlyph>

    <TTGlyph name="one" xMin="13" yMin="0" xMax="378" yMax="735">
      <contour>
        <pt x="34" y="152" on="1"/>
        <pt x="114" y="152" on="1"/>
        <pt x="114" y="482" on="1"/>
        <pt x="13" y="419" on="1"/>
        <pt x="13" y="613" on="1"/>
        <pt x="216" y="735" on="1"/>
        <pt x="299" y="734" on="1"/>
        <pt x="299" y="152" on="1"/>
        <pt x="378" y="152" on="1"/>
        <pt x="378" y="0" on="1"/>
        <pt x="34" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 32 values pushed */
          4 3 2 3 0 1 1 74 0 1 1 20 75 2 1 0 0 3 94 0 3 3 21 3 76
          17 17 20 16 4 7 24
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="onehalf" xMin="287" yMin="-30" xMax="1096" yMax="770">
      <component glyphName="fraction" x="390" y="0" flags="0x0"/>
      <component glyphName="uni2082" x="0" y="0" flags="0x0"/>
      <component glyphName="uni00B9" x="291" y="-30" flags="0x4"/>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          2 1
          PUSHW[ ]	/* 1 value pushed */
          -30
          PUSHB[ ]	/* 1 value pushed */
          51
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="onequarter" xMin="287" yMin="-30" xMax="1114" yMax="770">
      <component glyphName="fraction" x="390" y="0" flags="0x0"/>
      <component glyphName="uni2084" x="0" y="0" flags="0x0"/>
      <component glyphName="uni00B9" x="291" y="-30" flags="0x4"/>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          2 1
          PUSHW[ ]	/* 1 value pushed */
          -30
          PUSHB[ ]	/* 1 value pushed */
          51
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ordfeminine" xMin="85" yMin="382" xMax="451" yMax="755">
      <contour>
        <pt x="264" y="387" on="0"/>
        <pt x="231" y="382" on="0"/>
        <pt x="209" y="382" on="1"/>
        <pt x="152" y="382" on="0"/>
        <pt x="85" y="447" on="0"/>
        <pt x="85" y="500" on="1"/>
        <pt x="85" y="541" on="0"/>
        <pt x="135" y="606" on="0"/>
        <pt x="201" y="606" on="1"/>
        <pt x="233" y="606" on="0"/>
        <pt x="281" y="598" on="1"/>
        <pt x="281" y="624" on="1"/>
        <pt x="281" y="636" on="0"/>
        <pt x="252" y="645" on="0"/>
        <pt x="224" y="645" on="1"/>
        <pt x="194" y="645" on="0"/>
        <pt x="154" y="638" on="0"/>
        <pt x="129" y="626" on="1"/>
        <pt x="90" y="703" on="1"/>
        <pt x="130" y="730" on="0"/>
        <pt x="205" y="755" on="0"/>
        <pt x="249" y="755" on="1"/>
        <pt x="402" y="755" on="0"/>
        <pt x="402" y="627" on="1"/>
        <pt x="402" y="500" on="1"/>
        <pt x="451" y="500" on="1"/>
        <pt x="451" y="389" on="1"/>
        <pt x="283" y="389" on="1"/>
        <pt x="283" y="393" on="1"/>
      </contour>
      <contour>
        <pt x="260" y="476" on="0"/>
        <pt x="281" y="486" on="1"/>
        <pt x="281" y="516" on="1"/>
        <pt x="220" y="516" on="1"/>
        <pt x="202" y="516" on="0"/>
        <pt x="202" y="496" on="1"/>
        <pt x="202" y="488" on="0"/>
        <pt x="211" y="476" on="0"/>
        <pt x="221" y="476" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          10
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 19 values pushed */
          18 1 2 3 17 1 1 2 10 1 6 1 34 30 2 0 4 4 74
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 19 values pushed */
          18 1 2 3 17 1 1 2 10 1 6 1 34 30 2 7 4 4 74
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          10
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 32 values pushed */
          0 1 0 6 4 1 6 103 0 2 2 3 95 0 3 3 68 75 5 1 0 0 4 95 8
          7 2 4 4 63 0 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 39 values pushed */
          8 1 7 4 0 4 7 0 126 0 1 0 6 4 1 6 103 0 2 2 3 95 0 3 3
          68 75 5 1 0 0 4 93 0 4 4 63 0 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          33
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 36 values pushed */
          8 1 7 4 0 4 7 0 126 0 1 0 6 4 1 6 103 0 4 5 1 0 4 0 99
          0 2 2 3 95 0 3 3 68 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 41 values pushed */
          8 1 7 4 5 4 7 5 126 0 0 5 0 132 0 1 0 6 4 1 6 103 0 4 0
          5 0 4 5 101 0 2 2 3 95 0 3 3 68 2 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 16 values pushed */
          29 29 29 37 29 36 36 17 18 37 36 36 33 9 9 27
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ordmasculine" xMin="23" yMin="394" xMax="399" yMax="755">
      <contour>
        <pt x="23" y="621" on="0"/>
        <pt x="72" y="704" on="0"/>
        <pt x="159" y="755" on="0"/>
        <pt x="212" y="755" on="1"/>
        <pt x="264" y="755" on="0"/>
        <pt x="350" y="704" on="0"/>
        <pt x="399" y="620" on="0"/>
        <pt x="399" y="575" on="1"/>
        <pt x="399" y="529" on="0"/>
        <pt x="351" y="445" on="0"/>
        <pt x="266" y="394" on="0"/>
        <pt x="212" y="394" on="1"/>
        <pt x="157" y="394" on="0"/>
        <pt x="71" y="445" on="0"/>
        <pt x="23" y="529" on="0"/>
        <pt x="23" y="575" on="1"/>
      </contour>
      <contour>
        <pt x="146" y="558" on="0"/>
        <pt x="186" y="523" on="0"/>
        <pt x="212" y="523" on="1"/>
        <pt x="237" y="523" on="0"/>
        <pt x="275" y="558" on="0"/>
        <pt x="275" y="575" on="1"/>
        <pt x="275" y="593" on="0"/>
        <pt x="238" y="625" on="0"/>
        <pt x="212" y="625" on="1"/>
        <pt x="185" y="625" on="0"/>
        <pt x="146" y="593" on="0"/>
        <pt x="146" y="575" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 21 values pushed */
          0 3 3 0 95 0 0 0 68 75 0 1 1 2 95 0 2 2 71 1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 18 values pushed */
          0 2 0 1 2 1 99 0 3 3 0 95 0 0 0 68 3 76
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          36 37 38 34 4 9 24
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="oslash" xMin="-9" yMin="-30" xMax="579" yMax="570">
      <contour>
        <pt x="529" y="412" on="0"/>
        <pt x="574" y="311" on="0"/>
        <pt x="574" y="255" on="1"/>
        <pt x="574" y="184" on="0"/>
        <pt x="505" y="62" on="0"/>
        <pt x="380" y="-11" on="0"/>
        <pt x="300" y="-11" on="1"/>
        <pt x="226" y="-11" on="0"/>
        <pt x="167" y="20" on="1"/>
        <pt x="130" y="-30" on="1"/>
        <pt x="-9" y="-30" on="1"/>
        <pt x="81" y="89" on="1"/>
        <pt x="24" y="163" on="0"/>
        <pt x="24" y="256" on="1"/>
        <pt x="24" y="327" on="0"/>
        <pt x="96" y="448" on="0"/>
        <pt x="222" y="521" on="0"/>
        <pt x="300" y="521" on="1"/>
        <pt x="349" y="521" on="0"/>
        <pt x="395" y="505" on="1"/>
        <pt x="444" y="570" on="1"/>
        <pt x="579" y="570" on="1"/>
        <pt x="489" y="449" on="1"/>
      </contour>
      <contour>
        <pt x="189" y="249" on="0"/>
        <pt x="191" y="235" on="1"/>
        <pt x="290" y="366" on="1"/>
        <pt x="246" y="362" on="0"/>
        <pt x="189" y="302" on="0"/>
        <pt x="189" y="256" on="1"/>
      </contour>
      <contour>
        <pt x="346" y="144" on="0"/>
        <pt x="408" y="208" on="0"/>
        <pt x="408" y="256" on="1"/>
        <pt x="408" y="292" on="0"/>
        <pt x="391" y="318" on="1"/>
        <pt x="265" y="150" on="1"/>
        <pt x="282" y="144" on="0"/>
        <pt x="300" y="144" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 17 values pushed */
          34 33 28 25 24 22 19 7 4 2 11 8 2 0 4 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 23 values pushed */
          0 3 2 3 131 0 2 2 31 75 5 1 4 4 0 96 1 1 0 0 32 0 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 27 values pushed */
          0 3 2 3 131 0 1 0 1 132 0 2 2 31 75 5 1 4 4 0 96 0 0 0 32
          0 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 27 values pushed */
          0 3 2 3 131 0 2 4 2 131 0 1 0 1 132 5 1 4 4 0 96 0 0 0 32
          0 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 13 values pushed */
          29 29 29 36 29 35 18 38 18 37 6 7 24
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="otilde" xMin="24" yMin="-11" xMax="574" yMax="733">
      <component glyphName="o" x="-7" y="0" flags="0x0"/>
      <component glyphName="tilde" x="62" y="0" flags="0x0"/>
    </TTGlyph>

    <TTGlyph name="p" xMin="30" yMin="-230" xMax="664" yMax="522">
      <contour>
        <pt x="85" y="506" on="1"/>
        <pt x="85" y="522" on="1"/>
        <pt x="177" y="503" on="0"/>
        <pt x="236" y="503" on="1"/>
        <pt x="236" y="502" on="1"/>
        <pt x="258" y="502" on="1"/>
        <pt x="258" y="492" on="1"/>
        <pt x="328" y="522" on="0"/>
        <pt x="391" y="522" on="1"/>
        <pt x="467" y="522" on="0"/>
        <pt x="592" y="448" on="0"/>
        <pt x="664" y="324" on="0"/>
        <pt x="664" y="254" on="1"/>
        <pt x="664" y="184" on="0"/>
        <pt x="596" y="64" on="0"/>
        <pt x="474" y="-8" on="0"/>
        <pt x="398" y="-8" on="1"/>
        <pt x="341" y="-8" on="0"/>
        <pt x="289" y="14" on="1"/>
        <pt x="289" y="-78" on="1"/>
        <pt x="392" y="-78" on="1"/>
        <pt x="392" y="-230" on="1"/>
        <pt x="30" y="-230" on="1"/>
        <pt x="30" y="-78" on="1"/>
        <pt x="118" y="-78" on="1"/>
        <pt x="118" y="354" on="1"/>
        <pt x="68" y="354" on="1"/>
        <pt x="68" y="506" on="1"/>
      </contour>
      <contour>
        <pt x="355" y="367" on="0"/>
        <pt x="305" y="335" on="0"/>
        <pt x="289" y="304" on="1"/>
        <pt x="289" y="207" on="1"/>
        <pt x="305" y="179" on="0"/>
        <pt x="356" y="147" on="0"/>
        <pt x="385" y="147" on="1"/>
        <pt x="431" y="147" on="0"/>
        <pt x="495" y="210" on="0"/>
        <pt x="495" y="254" on="1"/>
        <pt x="495" y="305" on="0"/>
        <pt x="432" y="367" on="0"/>
        <pt x="384" y="367" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 19 values pushed */
          6 1 6 0 31 30 2 8 6 18 1 2 8 3 74 1 1 0 72
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          18
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 19 values pushed */
          6 1 6 0 31 30 2 8 6 18 1 2 8 3 74 1 1 1 72
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 19 values pushed */
          6 1 9 0 31 30 2 8 6 18 1 2 8 3 74 1 1 1 72
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          10
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 37 values pushed */
          11 9 2 6 6 0 95 10 7 1 3 0 0 23 75 0 8 8 2 95 0 2 2 29 75
          5 1 3 3 4 94 0 4 4 25 4 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 37 values pushed */
          11 9 2 6 6 0 95 10 7 1 3 0 0 23 75 0 8 8 2 95 0 2 2 32 75
          5 1 3 3 4 94 0 4 4 25 4 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          14
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 48 values pushed */
          11 9 2 6 6 1 95 0 1 1 31 75 11 9 2 6 6 0 95 10 7 2 0 0 23
          75 0 8 8 2 95 0 2 2 29 75 5 1 3 3 4 94 0 4 4 25 4 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          18
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 48 values pushed */
          11 9 2 6 6 1 95 0 1 1 31 75 11 9 2 6 6 0 95 10 7 2 0 0 23
          75 0 8 8 2 95 0 2 2 32 75 5 1 3 3 4 94 0 4 4 25 4 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 45 values pushed */
          11 1 9 9 1 95 0 1 1 31 75 0 6 6 0 95 10 7 2 0 0 23 75 0 8
          8 2 95 0 2 2 32 75 5 1 3 3 4 94 0 4 4 25 4 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 41 values pushed */
          0 1 11 1 9 6 1 9 103 10 7 2 0 0 6 8 0 6 101 0 8 8 2 95 0
          2 2 32 75 5 1 3 3 4 94 0 4 4 25 4 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 24 values pushed */
          28 28 0 0 28 40 28 39 35 33 0 27 0 27 17 17 17 18 38 34 50 12 7 27
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="paragraph" xMin="34" yMin="-176" xMax="687" yMax="740">
      <contour>
        <pt x="132" y="258" on="0"/>
        <pt x="34" y="385" on="0"/>
        <pt x="34" y="479" on="1"/>
        <pt x="34" y="549" on="0"/>
        <pt x="110" y="669" on="0"/>
        <pt x="248" y="740" on="0"/>
        <pt x="338" y="740" on="1"/>
        <pt x="687" y="740" on="1"/>
        <pt x="687" y="586" on="1"/>
        <pt x="607" y="586" on="1"/>
        <pt x="607" y="-176" on="1"/>
        <pt x="445" y="-176" on="1"/>
        <pt x="445" y="586" on="1"/>
        <pt x="371" y="586" on="1"/>
        <pt x="371" y="-176" on="1"/>
        <pt x="208" y="-176" on="1"/>
        <pt x="208" y="231" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 32 values pushed */
          16 1 2 1 1 74 4 1 2 1 2 132 3 1 1 1 0 93 0 0 0 20 1 76 17
          17 17 17 37 5 7 25
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="parenleft" xMin="47" yMin="-231" xMax="387" yMax="888">
      <contour>
        <pt x="148" y="-111" on="0"/>
        <pt x="47" y="173" on="0"/>
        <pt x="47" y="326" on="1"/>
        <pt x="47" y="480" on="0"/>
        <pt x="149" y="768" on="0"/>
        <pt x="248" y="888" on="1"/>
        <pt x="387" y="794" on="1"/>
        <pt x="312" y="694" on="0"/>
        <pt x="229" y="450" on="0"/>
        <pt x="229" y="326" on="1"/>
        <pt x="229" y="202" on="0"/>
        <pt x="312" y="-44" on="0"/>
        <pt x="386" y="-144" on="1"/>
        <pt x="245" y="-231" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          13 5 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="parenright" xMin="-5" yMin="-231" xMax="335" yMax="888">
      <contour>
        <pt x="70" y="-37" on="0"/>
        <pt x="153" y="208" on="0"/>
        <pt x="153" y="331" on="1"/>
        <pt x="153" y="456" on="0"/>
        <pt x="70" y="701" on="0"/>
        <pt x="-4" y="802" on="1"/>
        <pt x="136" y="888" on="1"/>
        <pt x="234" y="769" on="0"/>
        <pt x="335" y="484" on="0"/>
        <pt x="335" y="331" on="1"/>
        <pt x="335" y="177" on="0"/>
        <pt x="233" y="-111" on="0"/>
        <pt x="134" y="-231" on="1"/>
        <pt x="-5" y="-136" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          12 6 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="percent" xMin="106" yMin="-8" xMax="877" yMax="756">
      <contour>
        <pt x="106" y="620" on="0"/>
        <pt x="156" y="706" on="0"/>
        <pt x="243" y="756" on="0"/>
        <pt x="298" y="756" on="1"/>
        <pt x="352" y="756" on="0"/>
        <pt x="440" y="706" on="0"/>
        <pt x="489" y="620" on="0"/>
        <pt x="489" y="570" on="1"/>
        <pt x="489" y="520" on="0"/>
        <pt x="441" y="435" on="0"/>
        <pt x="353" y="384" on="0"/>
        <pt x="298" y="384" on="1"/>
        <pt x="242" y="384" on="0"/>
        <pt x="154" y="435" on="0"/>
        <pt x="106" y="520" on="0"/>
        <pt x="106" y="570" on="1"/>
      </contour>
      <contour>
        <pt x="669" y="752" on="1"/>
        <pt x="812" y="752" on="1"/>
        <pt x="304" y="-8" on="1"/>
        <pt x="161" y="-8" on="1"/>
      </contour>
      <contour>
        <pt x="271" y="632" on="0"/>
        <pt x="235" y="597" on="0"/>
        <pt x="235" y="570" on="1"/>
        <pt x="235" y="544" on="0"/>
        <pt x="272" y="508" on="0"/>
        <pt x="298" y="508" on="1"/>
        <pt x="324" y="508" on="0"/>
        <pt x="360" y="544" on="0"/>
        <pt x="360" y="570" on="1"/>
        <pt x="360" y="597" on="0"/>
        <pt x="325" y="632" on="0"/>
        <pt x="298" y="632" on="1"/>
      </contour>
      <contour>
        <pt x="494" y="235" on="0"/>
        <pt x="543" y="321" on="0"/>
        <pt x="631" y="371" on="0"/>
        <pt x="685" y="371" on="1"/>
        <pt x="740" y="371" on="0"/>
        <pt x="827" y="321" on="0"/>
        <pt x="877" y="235" on="0"/>
        <pt x="877" y="185" on="1"/>
        <pt x="877" y="135" on="0"/>
        <pt x="828" y="50" on="0"/>
        <pt x="741" y="-1" on="0"/>
        <pt x="685" y="-1" on="1"/>
        <pt x="630" y="-1" on="0"/>
        <pt x="542" y="50" on="0"/>
        <pt x="494" y="135" on="0"/>
        <pt x="494" y="185" on="1"/>
      </contour>
      <contour>
        <pt x="658" y="247" on="0"/>
        <pt x="623" y="212" on="0"/>
        <pt x="623" y="185" on="1"/>
        <pt x="623" y="159" on="0"/>
        <pt x="659" y="123" on="0"/>
        <pt x="685" y="123" on="1"/>
        <pt x="711" y="123" on="0"/>
        <pt x="748" y="159" on="0"/>
        <pt x="748" y="185" on="1"/>
        <pt x="748" y="212" on="0"/>
        <pt x="712" y="247" on="0"/>
        <pt x="685" y="247" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          10
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 43 values pushed */
          0 6 11 1 9 8 6 9 104 10 1 5 5 0 95 2 1 0 0 28 75 0 1 1 4
          95 0 4 4 23 75 0 8 8 3 95 7 1 3 3 29 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 43 values pushed */
          0 6 11 1 9 8 6 9 104 10 1 5 5 0 95 2 1 0 0 28 75 0 1 1 4
          95 0 4 4 23 75 0 8 8 3 95 7 1 3 3 32 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          14
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 43 values pushed */
          0 6 11 1 9 8 6 9 104 10 1 5 5 0 95 2 1 0 0 28 75 0 1 1 4
          95 0 4 4 23 75 0 8 8 3 95 7 1 3 3 29 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 43 values pushed */
          0 6 11 1 9 8 6 9 104 10 1 5 5 0 95 2 1 0 0 28 75 0 1 1 4
          95 0 4 4 23 75 0 8 8 3 95 7 1 3 3 32 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          33
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 41 values pushed */
          0 4 0 1 6 4 1 103 0 6 11 1 9 8 6 9 104 10 1 5 5 0 95 2 1
          0 0 28 75 0 8 8 3 95 7 1 3 3 32 3 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 45 values pushed */
          0 4 0 1 6 4 1 103 0 6 11 1 9 8 6 9 104 10 1 5 5 0 95 2 1
          0 0 28 75 0 8 8 7 95 0 7 7 21 75 0 3 3 21 3 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 26 values pushed */
          48 48 20 20 48 59 48 58 54 52 44 42 36 34 20 31 20 30 37 17 20 38 34 12 7
          25
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="period" xMin="31" yMin="-20" xMax="220" yMax="171">
      <component glyphName="dotaccent" x="0" y="-588" flags="0x4"/>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          0 1
          PUSHW[ ]	/* 1 value pushed */
          -588
          PUSHB[ ]	/* 1 value pushed */
          51
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="periodcentered" xMin="103" yMin="208" xMax="292" yMax="399">
      <component glyphName="dotaccent" x="72" y="-360" flags="0x4"/>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          0 1
          PUSHW[ ]	/* 1 value pushed */
          -360
          PUSHB[ ]	/* 1 value pushed */
          51
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="plus" xMin="43" yMin="15" xMax="543" yMax="515">
      <contour>
        <pt x="43" y="348" on="1"/>
        <pt x="210" y="348" on="1"/>
        <pt x="210" y="515" on="1"/>
        <pt x="375" y="515" on="1"/>
        <pt x="375" y="348" on="1"/>
        <pt x="543" y="348" on="1"/>
        <pt x="543" y="183" on="1"/>
        <pt x="375" y="183" on="1"/>
        <pt x="375" y="15" on="1"/>
        <pt x="210" y="15" on="1"/>
        <pt x="210" y="183" on="1"/>
        <pt x="43" y="183" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 21 values pushed */
          2 1 0 5 1 3 4 0 3 101 0 1 1 23 75 0 4 4 21 4 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          33
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 21 values pushed */
          2 1 0 5 1 3 4 0 3 101 0 1 1 4 93 0 4 4 21 4 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 26 values pushed */
          0 1 0 4 1 85 2 1 0 5 1 3 4 0 3 101 0 1 1 4 93 0 4 1 4
          77
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 9 values pushed */
          17 17 17 17 17 16 6 7 26
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="plusminus" xMin="50" yMin="-14" xMax="550" yMax="640">
      <contour>
        <pt x="50" y="473" on="1"/>
        <pt x="217" y="473" on="1"/>
        <pt x="217" y="640" on="1"/>
        <pt x="382" y="640" on="1"/>
        <pt x="382" y="473" on="1"/>
        <pt x="550" y="473" on="1"/>
        <pt x="550" y="308" on="1"/>
        <pt x="382" y="308" on="1"/>
        <pt x="382" y="163" on="1"/>
        <pt x="217" y="163" on="1"/>
        <pt x="217" y="308" on="1"/>
        <pt x="50" y="308" on="1"/>
      </contour>
      <contour>
        <pt x="50" y="140" on="1"/>
        <pt x="550" y="140" on="1"/>
        <pt x="550" y="-14" on="1"/>
        <pt x="50" y="-14" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          35
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 29 values pushed */
          2 1 0 5 1 3 4 0 3 101 0 1 0 4 6 1 4 101 0 6 6 7 93 0 7
          7 21 7 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 34 values pushed */
          2 1 0 5 1 3 4 0 3 101 0 1 0 4 6 1 4 101 0 6 7 7 6 85 0
          6 6 7 93 0 7 6 7 77
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 11 values pushed */
          17 17 17 17 17 17 17 16 8 7 28
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="q" xMin="25" yMin="-230" xMax="642" yMax="526">
      <contour>
        <pt x="396" y="-78" on="1"/>
        <pt x="396" y="10" on="1"/>
        <pt x="339" y="-10" on="0"/>
        <pt x="297" y="-10" on="1"/>
        <pt x="218" y="-10" on="0"/>
        <pt x="94" y="64" on="0"/>
        <pt x="25" y="187" on="0"/>
        <pt x="25" y="258" on="1"/>
        <pt x="25" y="328" on="0"/>
        <pt x="94" y="449" on="0"/>
        <pt x="215" y="522" on="0"/>
        <pt x="291" y="522" on="1"/>
        <pt x="343" y="522" on="0"/>
        <pt x="396" y="505" on="1"/>
        <pt x="396" y="526" on="1"/>
        <pt x="567" y="526" on="1"/>
        <pt x="567" y="-78" on="1"/>
        <pt x="642" y="-78" on="1"/>
        <pt x="642" y="-230" on="1"/>
        <pt x="280" y="-230" on="1"/>
        <pt x="280" y="-78" on="1"/>
      </contour>
      <contour>
        <pt x="331" y="147" on="0"/>
        <pt x="379" y="175" on="0"/>
        <pt x="396" y="201" on="1"/>
        <pt x="396" y="311" on="1"/>
        <pt x="382" y="337" on="0"/>
        <pt x="333" y="367" on="0"/>
        <pt x="305" y="367" on="1"/>
        <pt x="258" y="367" on="0"/>
        <pt x="193" y="304" on="0"/>
        <pt x="193" y="255" on="1"/>
        <pt x="193" y="208" on="0"/>
        <pt x="259" y="147" on="0"/>
        <pt x="305" y="147" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 15 values pushed */
          13 1 6 1 24 23 2 7 6 1 1 0 7 3 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 35 values pushed */
          0 6 6 1 95 2 1 1 1 31 75 9 1 7 7 0 95 0 0 0 29 75 8 5 2
          3 3 4 94 0 4 4 25 4 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 35 values pushed */
          0 6 6 1 95 2 1 1 1 31 75 9 1 7 7 0 95 0 0 0 32 75 8 5 2
          3 3 4 94 0 4 4 25 4 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 33 values pushed */
          2 1 1 0 6 7 1 6 103 9 1 7 7 0 95 0 0 0 32 75 8 5 2 3 3
          4 94 0 4 4 25 4 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 22 values pushed */
          21 21 0 0 21 33 21 32 28 26 0 20 0 20 17 17 18 38 34 10 7 25
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="question" xMin="39" yMin="-20" xMax="504" yMax="755">
      <contour>
        <pt x="148" y="275" on="0"/>
        <pt x="158" y="341" on="0"/>
        <pt x="194" y="386" on="0"/>
        <pt x="238" y="415" on="1"/>
        <pt x="277" y="448" on="0"/>
        <pt x="299" y="500" on="0"/>
        <pt x="299" y="542" on="1"/>
        <pt x="299" y="589" on="0"/>
        <pt x="267" y="589" on="1"/>
        <pt x="265" y="589" on="0"/>
        <pt x="236" y="590" on="0"/>
        <pt x="218" y="556" on="0"/>
        <pt x="218" y="521" on="1"/>
        <pt x="39" y="539" on="1"/>
        <pt x="40" y="650" on="0"/>
        <pt x="167" y="755" on="0"/>
        <pt x="275" y="755" on="1"/>
        <pt x="338" y="755" on="0"/>
        <pt x="442" y="707" on="0"/>
        <pt x="504" y="610" on="0"/>
        <pt x="504" y="539" on="1"/>
        <pt x="504" y="485" on="0"/>
        <pt x="456" y="394" on="0"/>
        <pt x="405" y="353" on="1"/>
        <pt x="358" y="319" on="0"/>
        <pt x="324" y="258" on="0"/>
        <pt x="324" y="201" on="1"/>
        <pt x="148" y="201" on="1"/>
      </contour>
      <contour>
        <pt x="141" y="115" on="0"/>
        <pt x="196" y="171" on="0"/>
        <pt x="236" y="171" on="1"/>
        <pt x="275" y="171" on="0"/>
        <pt x="330" y="115" on="0"/>
        <pt x="330" y="75" on="1"/>
        <pt x="330" y="36" on="0"/>
        <pt x="275" y="-20" on="0"/>
        <pt x="236" y="-20" on="1"/>
        <pt x="196" y="-20" on="0"/>
        <pt x="141" y="36" on="0"/>
        <pt x="141" y="75" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 44 values pushed */
          13 12 2 2 0 1 74 0 2 0 3 0 2 3 126 0 0 0 1 95 0 1 1 28 75
          0 3 3 4 95 0 4 4 29 4 76 36 34 25 37 55 5 7 25
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="questiondown" xMin="-20" yMin="-221" xMax="445" yMax="557">
      <contour>
        <pt x="129" y="501" on="0"/>
        <pt x="184" y="557" on="0"/>
        <pt x="224" y="557" on="1"/>
        <pt x="263" y="557" on="0"/>
        <pt x="318" y="501" on="0"/>
        <pt x="318" y="461" on="1"/>
        <pt x="318" y="422" on="0"/>
        <pt x="263" y="366" on="0"/>
        <pt x="224" y="366" on="1"/>
        <pt x="184" y="366" on="0"/>
        <pt x="129" y="422" on="0"/>
        <pt x="129" y="461" on="1"/>
      </contour>
      <contour>
        <pt x="335" y="259" on="0"/>
        <pt x="325" y="193" on="0"/>
        <pt x="289" y="148" on="0"/>
        <pt x="245" y="119" on="1"/>
        <pt x="206" y="87" on="0"/>
        <pt x="184" y="34" on="0"/>
        <pt x="184" y="-8" on="1"/>
        <pt x="184" y="-55" on="0"/>
        <pt x="217" y="-55" on="1"/>
        <pt x="219" y="-55" on="0"/>
        <pt x="247" y="-56" on="0"/>
        <pt x="265" y="-22" on="0"/>
        <pt x="265" y="13" on="1"/>
        <pt x="445" y="-5" on="1"/>
        <pt x="444" y="-116" on="0"/>
        <pt x="316" y="-221" on="0"/>
        <pt x="208" y="-221" on="1"/>
        <pt x="145" y="-221" on="0"/>
        <pt x="42" y="-173" on="0"/>
        <pt x="-20" y="-76" on="0"/>
        <pt x="-20" y="-5" on="1"/>
        <pt x="-20" y="50" on="0"/>
        <pt x="27" y="140" on="0"/>
        <pt x="78" y="181" on="1"/>
        <pt x="125" y="215" on="0"/>
        <pt x="159" y="276" on="0"/>
        <pt x="159" y="333" on="1"/>
        <pt x="335" y="333" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 42 values pushed */
          25 24 2 2 4 1 74 0 4 1 2 1 4 2 126 0 0 0 1 4 0 1 103 0 2
          2 3 96 0 3 3 25 3 76 25 37 58 36 33 5 7 25
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="quotedbl" xMin="20" yMin="517" xMax="310" yMax="770">
      <contour>
        <pt x="141" y="517" on="1"/>
        <pt x="40" y="517" on="1"/>
        <pt x="20" y="770" on="1"/>
        <pt x="150" y="770" on="1"/>
      </contour>
      <contour>
        <pt x="287" y="517" on="1"/>
        <pt x="190" y="517" on="1"/>
        <pt x="183" y="770" on="1"/>
        <pt x="310" y="770" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 13 values pushed */
          2 1 0 0 1 93 3 1 1 1 22 0 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 19 values pushed */
          3 1 1 0 0 1 85 3 1 1 1 0 93 2 1 0 1 0 77
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          17 17 17 16 4 7 24
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="quotedblbase" xMin="10" yMin="-182" xMax="518" yMax="138">
      <component glyphName="comma" x="0" y="0" flags="0x0"/>
      <component glyphName="comma" x="254" y="0" flags="0x0"/>
    </TTGlyph>

    <TTGlyph name="quotedblleft" xMin="-43" yMin="485" xMax="472" yMax="831">
      <contour>
        <pt x="116" y="831" on="1"/>
        <pt x="239" y="781" on="1"/>
        <pt x="113" y="492" on="1"/>
        <pt x="-43" y="549" on="1"/>
      </contour>
      <contour>
        <pt x="348" y="827" on="1"/>
        <pt x="472" y="782" on="1"/>
        <pt x="363" y="485" on="1"/>
        <pt x="207" y="542" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          6 4 2 0 2 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="quotedblright" xMin="-20" yMin="485" xMax="495" yMax="831">
      <contour>
        <pt x="104" y="489" on="1"/>
        <pt x="-20" y="533" on="1"/>
        <pt x="89" y="831" on="1"/>
        <pt x="245" y="774" on="1"/>
      </contour>
      <contour>
        <pt x="336" y="485" on="1"/>
        <pt x="212" y="535" on="1"/>
        <pt x="339" y="824" on="1"/>
        <pt x="495" y="767" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          6 4 2 0 2 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="quoteleft" xMin="-6" yMin="494" xMax="252" yMax="822">
      <contour>
        <pt x="139" y="822" on="1"/>
        <pt x="252" y="782" on="1"/>
        <pt x="163" y="494" on="1"/>
        <pt x="-6" y="551" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          2 0 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="quoteright" xMin="-3" yMin="490" xMax="252" yMax="810">
      <contour>
        <pt x="87" y="810" on="1"/>
        <pt x="252" y="755" on="1"/>
        <pt x="108" y="490" on="1"/>
        <pt x="-3" y="532" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          2 0 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="quotesingle" xMin="18" yMin="517" xMax="158" yMax="778">
      <contour>
        <pt x="125" y="517" on="1"/>
        <pt x="18" y="517" on="1"/>
        <pt x="18" y="770" on="1"/>
        <pt x="158" y="778" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          35
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 11 values pushed */
          0 0 0 1 93 0 1 1 22 0 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 16 values pushed */
          0 1 0 0 1 85 0 1 1 0 93 0 0 1 0 77
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 5 values pushed */
          17 16 2 7 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="r" xMin="36" yMin="0" xMax="534" yMax="506">
      <contour>
        <pt x="381" y="294" on="1"/>
        <pt x="381" y="354" on="1"/>
        <pt x="333" y="354" on="0"/>
        <pt x="289" y="337" on="0"/>
        <pt x="285" y="309" on="1"/>
        <pt x="285" y="152" on="1"/>
        <pt x="394" y="152" on="1"/>
        <pt x="394" y="0" on="1"/>
        <pt x="36" y="0" on="1"/>
        <pt x="36" y="152" on="1"/>
        <pt x="114" y="152" on="1"/>
        <pt x="114" y="354" on="1"/>
        <pt x="36" y="354" on="1"/>
        <pt x="36" y="506" on="1"/>
        <pt x="285" y="506" on="1"/>
        <pt x="285" y="482" on="1"/>
        <pt x="327" y="505" on="0"/>
        <pt x="391" y="505" on="1"/>
        <pt x="429" y="505" on="0"/>
        <pt x="449" y="504" on="1"/>
        <pt x="464" y="504" on="0"/>
        <pt x="508" y="503" on="0"/>
        <pt x="534" y="504" on="1"/>
        <pt x="534" y="294" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 10 values pushed */
          15 1 0 5 4 1 7 0 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          22
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 32 values pushed */
          8 1 7 0 1 0 7 112 4 1 0 0 5 93 6 1 5 5 23 75 3 1 1 1 2
          93 0 2 2 21 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 33 values pushed */
          8 1 7 0 1 0 7 1 126 4 1 0 0 5 93 6 1 5 5 23 75 3 1 1 1
          2 93 0 2 2 21 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 31 values pushed */
          8 1 7 0 1 0 7 1 126 6 1 5 4 1 0 7 5 0 103 3 1 1 1 2 93
          0 2 2 21 2 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 16 values pushed */
          0 0 0 23 0 23 98 17 17 17 17 19 17 9 7 27
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="registered" xMin="-3" yMin="-92" xMax="940" yMax="849">
      <contour>
        <pt x="-3" y="507" on="0"/>
        <pt x="123" y="723" on="0"/>
        <pt x="339" y="849" on="0"/>
        <pt x="468" y="849" on="1"/>
        <pt x="596" y="849" on="0"/>
        <pt x="813" y="723" on="0"/>
        <pt x="940" y="507" on="0"/>
        <pt x="940" y="379" on="1"/>
        <pt x="940" y="250" on="0"/>
        <pt x="813" y="34" on="0"/>
        <pt x="596" y="-92" on="0"/>
        <pt x="468" y="-92" on="1"/>
        <pt x="339" y="-92" on="0"/>
        <pt x="123" y="34" on="0"/>
        <pt x="-3" y="250" on="0"/>
        <pt x="-3" y="379" on="1"/>
      </contour>
      <contour>
        <pt x="130" y="285" on="0"/>
        <pt x="220" y="130" on="0"/>
        <pt x="375" y="40" on="0"/>
        <pt x="468" y="40" on="1"/>
        <pt x="561" y="40" on="0"/>
        <pt x="716" y="130" on="0"/>
        <pt x="806" y="285" on="0"/>
        <pt x="806" y="379" on="1"/>
        <pt x="806" y="472" on="0"/>
        <pt x="716" y="627" on="0"/>
        <pt x="561" y="717" on="0"/>
        <pt x="468" y="717" on="1"/>
        <pt x="375" y="717" on="0"/>
        <pt x="220" y="627" on="0"/>
        <pt x="130" y="472" on="0"/>
        <pt x="130" y="379" on="1"/>
      </contour>
      <contour>
        <pt x="289" y="264" on="1"/>
        <pt x="289" y="499" on="1"/>
        <pt x="238" y="499" on="1"/>
        <pt x="238" y="615" on="1"/>
        <pt x="524" y="615" on="1"/>
        <pt x="575" y="615" on="0"/>
        <pt x="648" y="572" on="0"/>
        <pt x="684" y="509" on="0"/>
        <pt x="684" y="478" on="1"/>
        <pt x="684" y="431" on="0"/>
        <pt x="650" y="379" on="0"/>
        <pt x="604" y="361" on="1"/>
        <pt x="624" y="353" on="0"/>
        <pt x="650" y="320" on="0"/>
        <pt x="656" y="290" on="1"/>
        <pt x="662" y="264" on="1"/>
        <pt x="698" y="264" on="1"/>
        <pt x="699" y="147" on="1"/>
        <pt x="518" y="147" on="1"/>
        <pt x="516" y="228" on="1"/>
        <pt x="516" y="237" on="0"/>
        <pt x="515" y="287" on="0"/>
        <pt x="493" y="302" on="0"/>
        <pt x="466" y="302" on="1"/>
        <pt x="433" y="302" on="1"/>
        <pt x="433" y="264" on="1"/>
        <pt x="471" y="264" on="1"/>
        <pt x="471" y="147" on="1"/>
        <pt x="234" y="147" on="1"/>
        <pt x="234" y="264" on="1"/>
      </contour>
      <contour>
        <pt x="433" y="419" on="1"/>
        <pt x="452" y="419" on="1"/>
        <pt x="489" y="419" on="0"/>
        <pt x="526" y="437" on="0"/>
        <pt x="526" y="458" on="1"/>
        <pt x="526" y="477" on="0"/>
        <pt x="490" y="499" on="0"/>
        <pt x="461" y="499" on="1"/>
        <pt x="433" y="499" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          6 100
          WCVTP[ ]	/* WriteCVTInPixels */
          NPUSHB[ ]	/* 85 values pushed */
          43 1 8 12 1 74 0 0 0 3 5 0 3 103 0 5 13 1 4 12 5 4 103 0 12
          0 8 6 12 8 103 14 11 9 3 6 10 1 7 2 6 7 101 0 2 1 1 2 87 0
          2 2 1 95 0 1 2 1 79 32 32 70 68 64 62 32 61 32 61 60 59 58 57 36 17
          26 33 21 38 38 38 34 15 7 29
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          6 0
          WCVTP[ ]	/* WriteCVTInPixels */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ring" xMin="130" yMin="437" xMax="461" yMax="769">
      <contour>
        <pt x="340" y="769" on="0"/>
        <pt x="416" y="724" on="0"/>
        <pt x="461" y="648" on="0"/>
        <pt x="461" y="603" on="1"/>
        <pt x="461" y="558" on="0"/>
        <pt x="416" y="482" on="0"/>
        <pt x="340" y="437" on="0"/>
        <pt x="295" y="437" on="1"/>
        <pt x="250" y="437" on="0"/>
        <pt x="174" y="482" on="0"/>
        <pt x="130" y="558" on="0"/>
        <pt x="130" y="603" on="1"/>
        <pt x="130" y="648" on="0"/>
        <pt x="174" y="724" on="0"/>
        <pt x="250" y="769" on="0"/>
        <pt x="295" y="769" on="1"/>
      </contour>
      <contour>
        <pt x="231" y="575" on="0"/>
        <pt x="268" y="538" on="0"/>
        <pt x="295" y="538" on="1"/>
        <pt x="323" y="538" on="0"/>
        <pt x="359" y="575" on="0"/>
        <pt x="359" y="603" on="1"/>
        <pt x="359" y="630" on="0"/>
        <pt x="323" y="666" on="0"/>
        <pt x="295" y="666" on="1"/>
        <pt x="268" y="666" on="0"/>
        <pt x="231" y="630" on="0"/>
        <pt x="231" y="603" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          6 100
          WCVTP[ ]	/* WriteCVTInPixels */
          NPUSHB[ ]	/* 39 values pushed */
          4 1 1 0 3 2 1 3 103 0 2 0 0 2 87 0 2 2 0 95 0 0 2 0 79
          0 0 25 23 19 17 0 15 0 14 38 5 7 21
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          6 0
          WCVTP[ ]	/* WriteCVTInPixels */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="s" xMin="19" yMin="-11" xMax="515" yMax="536">
      <contour>
        <pt x="370" y="364" on="0"/>
        <pt x="308" y="397" on="0"/>
        <pt x="252" y="397" on="1"/>
        <pt x="193" y="397" on="0"/>
        <pt x="193" y="367" on="1"/>
        <pt x="193" y="346" on="0"/>
        <pt x="229" y="341" on="1"/>
        <pt x="273" y="334" on="0"/>
        <pt x="369" y="317" on="0"/>
        <pt x="399" y="309" on="1"/>
        <pt x="462" y="287" on="0"/>
        <pt x="515" y="220" on="0"/>
        <pt x="515" y="171" on="1"/>
        <pt x="515" y="112" on="0"/>
        <pt x="441" y="30" on="0"/>
        <pt x="327" y="-11" on="0"/>
        <pt x="268" y="-11" on="1"/>
        <pt x="218" y="-11" on="0"/>
        <pt x="150" y="7" on="0"/>
        <pt x="124" y="24" on="1"/>
        <pt x="22" y="24" on="1"/>
        <pt x="22" y="179" on="1"/>
        <pt x="174" y="179" on="1"/>
        <pt x="174" y="155" on="0"/>
        <pt x="228" y="126" on="0"/>
        <pt x="268" y="126" on="1"/>
        <pt x="347" y="126" on="0"/>
        <pt x="347" y="156" on="1"/>
        <pt x="347" y="176" on="0"/>
        <pt x="281" y="196" on="0"/>
        <pt x="219" y="205" on="1"/>
        <pt x="167" y="212" on="0"/>
        <pt x="146" y="219" on="1"/>
        <pt x="19" y="260" on="0"/>
        <pt x="19" y="367" on="1"/>
        <pt x="19" y="417" on="0"/>
        <pt x="82" y="494" on="0"/>
        <pt x="188" y="536" on="0"/>
        <pt x="249" y="536" on="1"/>
        <pt x="305" y="536" on="0"/>
        <pt x="377" y="516" on="0"/>
        <pt x="407" y="499" on="1"/>
        <pt x="505" y="499" on="1"/>
        <pt x="505" y="344" on="1"/>
        <pt x="370" y="344" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          20
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 41 values pushed */
          0 0 0 5 95 0 5 5 31 75 0 7 7 6 93 0 6 6 23 75 0 3 3 2 93
          0 2 2 21 75 0 4 4 1 95 0 1 1 32 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 39 values pushed */
          0 3 0 2 1 3 2 101 0 0 0 5 95 0 5 5 31 75 0 7 7 6 93 0 6
          6 23 75 0 4 4 1 95 0 1 1 32 1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 35 values pushed */
          0 5 0 0 7 5 0 103 0 6 0 7 3 6 7 101 0 3 0 2 1 3 2 101 0
          4 4 1 95 0 1 1 32 1 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 11 values pushed */
          17 18 43 34 17 18 44 33 8 7 28
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="scaron" xMin="19" yMin="-11" xMax="515" yMax="713">
      <component glyphName="s" x="0" y="0" flags="0x0"/>
      <component glyphName="caron" x="7" y="0" flags="0x0"/>
    </TTGlyph>

    <TTGlyph name="scaron.001" xMin="19" yMin="-11" xMax="515" yMax="713">
      <component glyphName="s" x="0" y="0" flags="0x0"/>
      <component glyphName="caron" x="7" y="0" flags="0x0"/>
    </TTGlyph>

    <TTGlyph name="section" xMin="6" yMin="-229" xMax="548" yMax="756">
      <contour>
        <pt x="520" y="116" on="0"/>
        <pt x="548" y="46" on="0"/>
        <pt x="548" y="3" on="1"/>
        <pt x="548" y="-66" on="0"/>
        <pt x="483" y="-172" on="0"/>
        <pt x="364" y="-229" on="0"/>
        <pt x="285" y="-229" on="1"/>
        <pt x="215" y="-229" on="0"/>
        <pt x="87" y="-170" on="0"/>
        <pt x="59" y="-115" on="1"/>
        <pt x="6" y="-115" on="1"/>
        <pt x="6" y="52" on="1"/>
        <pt x="195" y="52" on="1"/>
        <pt x="195" y="-2" on="1"/>
        <pt x="201" y="-28" on="0"/>
        <pt x="243" y="-61" on="0"/>
        <pt x="282" y="-61" on="1"/>
        <pt x="313" y="-61" on="0"/>
        <pt x="344" y="-35" on="0"/>
        <pt x="344" y="-12" on="1"/>
        <pt x="344" y="3" on="0"/>
        <pt x="321" y="18" on="0"/>
        <pt x="288" y="28" on="0"/>
        <pt x="279" y="31" on="1"/>
        <pt x="231" y="46" on="1"/>
        <pt x="217" y="50" on="0"/>
        <pt x="186" y="60" on="0"/>
        <pt x="169" y="66" on="1"/>
        <pt x="107" y="87" on="0"/>
        <pt x="19" y="190" on="0"/>
        <pt x="19" y="269" on="1"/>
        <pt x="19" y="348" on="0"/>
        <pt x="62" y="401" on="1"/>
        <pt x="7" y="461" on="0"/>
        <pt x="7" y="544" on="1"/>
        <pt x="7" y="647" on="0"/>
        <pt x="152" y="756" on="0"/>
        <pt x="264" y="756" on="1"/>
        <pt x="344" y="756" on="0"/>
        <pt x="465" y="689" on="0"/>
        <pt x="489" y="644" on="1"/>
        <pt x="540" y="644" on="1"/>
        <pt x="540" y="477" on="1"/>
        <pt x="372" y="477" on="1"/>
        <pt x="443" y="455" on="0"/>
        <pt x="533" y="366" on="0"/>
        <pt x="533" y="278" on="1"/>
        <pt x="533" y="199" on="0"/>
        <pt x="496" y="140" on="1"/>
      </contour>
      <contour>
        <pt x="304" y="495" on="0"/>
        <pt x="349" y="484" on="1"/>
        <pt x="349" y="500" on="1"/>
        <pt x="348" y="500" on="1"/>
        <pt x="349" y="515" on="1"/>
        <pt x="349" y="516" on="1"/>
        <pt x="352" y="547" on="0"/>
        <pt x="301" y="597" on="0"/>
        <pt x="266" y="597" on="1"/>
        <pt x="206" y="597" on="0"/>
        <pt x="206" y="556" on="1"/>
        <pt x="206" y="531" on="0"/>
        <pt x="235" y="513" on="0"/>
        <pt x="265" y="506" on="1"/>
        <pt x="294" y="498" on="1"/>
      </contour>
      <contour>
        <pt x="329" y="231" on="0"/>
        <pt x="329" y="263" on="1"/>
        <pt x="329" y="280" on="0"/>
        <pt x="307" y="296" on="0"/>
        <pt x="279" y="306" on="0"/>
        <pt x="273" y="308" on="1"/>
        <pt x="274" y="308" on="1"/>
        <pt x="274" y="309" on="1"/>
        <pt x="257" y="316" on="1"/>
        <pt x="240" y="314" on="0"/>
        <pt x="218" y="300" on="0"/>
        <pt x="218" y="280" on="1"/>
        <pt x="218" y="244" on="0"/>
        <pt x="258" y="234" on="1"/>
        <pt x="302" y="220" on="0"/>
        <pt x="308" y="218" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 69 values pushed */
          53 50 2 6 7 72 48 32 3 2 6 13 1 3 2 3 74 0 5 0 6 2 5 6 101
          0 2 0 1 0 2 1 101 0 7 7 4 95 0 4 4 28 75 0 3 3 0 95 0 0
          0 25 0 76 58 56 43 42 41 40 38 36 35 17 18 37 8 7 24
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="semicolon" xMin="-37" yMin="-182" xMax="220" yMax="539">
      <component glyphName="dotaccent" x="0" y="-220" flags="0x4"/>
      <component glyphName="comma" x="-47" y="0" flags="0x0"/>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          0 1
          PUSHW[ ]	/* 1 value pushed */
          -220
          PUSHB[ ]	/* 1 value pushed */
          51
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="seven" xMin="20" yMin="0" xMax="581" yMax="740">
      <contour>
        <pt x="170" y="152" on="1"/>
        <pt x="260" y="341" on="0"/>
        <pt x="358" y="567" on="1"/>
        <pt x="176" y="567" on="1"/>
        <pt x="176" y="474" on="1"/>
        <pt x="20" y="474" on="1"/>
        <pt x="20" y="740" on="1"/>
        <pt x="581" y="740" on="1"/>
        <pt x="581" y="617" on="1"/>
        <pt x="462" y="364" on="0"/>
        <pt x="358" y="152" on="1"/>
        <pt x="401" y="152" on="1"/>
        <pt x="401" y="0" on="1"/>
        <pt x="120" y="0" on="1"/>
        <pt x="120" y="152" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          8 1 0 2 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          14
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 30 values pushed */
          0 1 0 3 0 1 112 0 0 0 2 93 0 2 2 20 75 6 5 2 3 3 4 93 0
          4 4 21 4 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 31 values pushed */
          0 1 0 3 0 1 3 126 0 0 0 2 93 0 2 2 20 75 6 5 2 3 3 4 93
          0 4 4 21 4 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          0 0 0 14 0 14 17 19 17 17 18 7 7 25
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="six" xMin="27" yMin="-6" xMax="536" yMax="741">
      <contour>
        <pt x="318" y="481" on="1"/>
        <pt x="328" y="476" on="0"/>
        <pt x="351" y="469" on="1"/>
        <pt x="432" y="448" on="0"/>
        <pt x="536" y="319" on="0"/>
        <pt x="536" y="238" on="1"/>
        <pt x="536" y="172" on="0"/>
        <pt x="467" y="60" on="0"/>
        <pt x="350" y="-6" on="0"/>
        <pt x="280" y="-6" on="1"/>
        <pt x="211" y="-6" on="0"/>
        <pt x="95" y="59" on="0"/>
        <pt x="27" y="170" on="0"/>
        <pt x="27" y="235" on="1"/>
        <pt x="27" y="280" on="0"/>
        <pt x="57" y="354" on="0"/>
        <pt x="88" y="408" on="1"/>
        <pt x="272" y="741" on="1"/>
        <pt x="464" y="741" on="1"/>
      </contour>
      <contour>
        <pt x="258" y="316" on="0"/>
        <pt x="217" y="301" on="0"/>
        <pt x="204" y="287" on="1"/>
        <pt x="190" y="264" on="0"/>
        <pt x="190" y="238" on="1"/>
        <pt x="190" y="223" on="0"/>
        <pt x="208" y="186" on="0"/>
        <pt x="248" y="158" on="0"/>
        <pt x="281" y="158" on="1"/>
        <pt x="315" y="158" on="0"/>
        <pt x="372" y="200" on="0"/>
        <pt x="372" y="237" on="1"/>
        <pt x="372" y="270" on="0"/>
        <pt x="319" y="316" on="0"/>
        <pt x="281" y="316" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          10
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 22 values pushed */
          4 1 3 3 1 93 0 1 1 20 75 0 2 2 0 95 0 0 0 32 0 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 22 values pushed */
          4 1 3 3 1 93 0 1 1 20 75 0 2 2 0 95 0 0 0 21 0 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 22 values pushed */
          4 1 3 3 1 93 0 1 1 20 75 0 2 2 0 95 0 0 0 32 0 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 12 values pushed */
          19 19 19 33 19 32 40 23 40 5 7 23
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="slash" xMin="24" yMin="0" xMax="448" yMax="760">
      <contour>
        <pt x="308" y="760" on="1"/>
        <pt x="448" y="760" on="1"/>
        <pt x="167" y="0" on="1"/>
        <pt x="24" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 16 values pushed */
          0 0 0 22 75 0 1 1 21 1 76 17 16 2 7 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="space"/><!-- contains no outline data -->

    <TTGlyph name="sterling" xMin="21" yMin="-1" xMax="528" yMax="712">
      <contour>
        <pt x="54" y="409" on="1"/>
        <pt x="49" y="445" on="0"/>
        <pt x="50" y="500" on="1"/>
        <pt x="51" y="520" on="0"/>
        <pt x="57" y="549" on="1"/>
        <pt x="77" y="625" on="0"/>
        <pt x="200" y="712" on="0"/>
        <pt x="280" y="712" on="1"/>
        <pt x="393" y="712" on="0"/>
        <pt x="515" y="600" on="0"/>
        <pt x="528" y="482" on="1"/>
        <pt x="335" y="476" on="1"/>
        <pt x="331" y="546" on="0"/>
        <pt x="284" y="546" on="1"/>
        <pt x="266" y="546" on="0"/>
        <pt x="241" y="519" on="0"/>
        <pt x="241" y="488" on="1"/>
        <pt x="241" y="467" on="0"/>
        <pt x="247" y="438" on="0"/>
        <pt x="259" y="409" on="1"/>
        <pt x="388" y="409" on="1"/>
        <pt x="388" y="271" on="1"/>
        <pt x="314" y="271" on="1"/>
        <pt x="314" y="265" on="1"/>
        <pt x="314" y="259" on="0"/>
        <pt x="312" y="245" on="1"/>
        <pt x="308" y="191" on="0"/>
        <pt x="308" y="174" on="1"/>
        <pt x="308" y="159" on="0"/>
        <pt x="309" y="152" on="1"/>
        <pt x="503" y="152" on="1"/>
        <pt x="503" y="-1" on="1"/>
        <pt x="46" y="-1" on="1"/>
        <pt x="46" y="152" on="1"/>
        <pt x="133" y="152" on="1"/>
        <pt x="121" y="176" on="0"/>
        <pt x="114" y="225" on="0"/>
        <pt x="113" y="230" on="1"/>
        <pt x="111" y="236" on="0"/>
        <pt x="102" y="262" on="0"/>
        <pt x="98" y="271" on="1"/>
        <pt x="21" y="271" on="1"/>
        <pt x="21" y="409" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          18
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 38 values pushed */
          0 1 2 3 2 1 112 0 0 0 2 1 0 2 103 10 9 2 3 8 1 4 5 3 4
          101 7 1 5 5 6 93 0 6 6 21 6 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 39 values pushed */
          0 1 2 3 2 1 3 126 0 0 0 2 1 0 2 103 10 9 2 3 8 1 4 5 3
          4 101 7 1 5 5 6 93 0 6 6 21 6 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 18 values pushed */
          0 0 0 42 0 42 22 17 17 38 17 21 33 18 38 11 7 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="t" xMin="-2" yMin="-12" xMax="355" yMax="710">
      <contour>
        <pt x="337" y="506" on="1"/>
        <pt x="337" y="359" on="1"/>
        <pt x="242" y="359" on="1"/>
        <pt x="241" y="173" on="1"/>
        <pt x="241" y="142" on="0"/>
        <pt x="258" y="120" on="0"/>
        <pt x="276" y="120" on="1"/>
        <pt x="299" y="120" on="0"/>
        <pt x="330" y="130" on="0"/>
        <pt x="334" y="131" on="1"/>
        <pt x="355" y="25" on="1"/>
        <pt x="300" y="-12" on="0"/>
        <pt x="221" y="-12" on="1"/>
        <pt x="182" y="-12" on="0"/>
        <pt x="110" y="28" on="0"/>
        <pt x="66" y="104" on="0"/>
        <pt x="66" y="154" on="1"/>
        <pt x="68" y="359" on="1"/>
        <pt x="-2" y="359" on="1"/>
        <pt x="-2" y="506" on="1"/>
        <pt x="68" y="506" on="1"/>
        <pt x="69" y="627" on="1"/>
        <pt x="244" y="710" on="1"/>
        <pt x="243" y="506" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 11 values pushed */
          10 1 2 1 1 74 22 21 2 4 72
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 24 values pushed */
          3 1 0 0 4 93 6 5 2 4 4 23 75 0 1 1 2 95 0 2 2 29 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 22 values pushed */
          6 5 2 4 3 1 0 1 4 0 101 0 1 1 2 95 0 2 2 29 2 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          0 0 0 23 0 23 17 20 36 35 17 7 7 25
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="thorn" xMin="9" yMin="-230" xMax="621" yMax="770">
      <contour>
        <pt x="251" y="770" on="1"/>
        <pt x="251" y="618" on="1"/>
        <pt x="250" y="618" on="1"/>
        <pt x="250" y="509" on="1"/>
        <pt x="305" y="529" on="0"/>
        <pt x="341" y="529" on="1"/>
        <pt x="420" y="529" on="0"/>
        <pt x="548" y="454" on="0"/>
        <pt x="621" y="330" on="0"/>
        <pt x="621" y="258" on="1"/>
        <pt x="621" y="187" on="0"/>
        <pt x="553" y="65" on="0"/>
        <pt x="431" y="-8" on="0"/>
        <pt x="356" y="-8" on="1"/>
        <pt x="298" y="-8" on="0"/>
        <pt x="250" y="9" on="1"/>
        <pt x="250" y="-78" on="1"/>
        <pt x="372" y="-78" on="1"/>
        <pt x="372" y="-230" on="1"/>
        <pt x="9" y="-230" on="1"/>
        <pt x="9" y="-78" on="1"/>
        <pt x="79" y="-78" on="1"/>
        <pt x="79" y="618" on="1"/>
        <pt x="9" y="618" on="1"/>
        <pt x="9" y="770" on="1"/>
      </contour>
      <contour>
        <pt x="285" y="365" on="0"/>
        <pt x="250" y="312" on="1"/>
        <pt x="250" y="206" on="1"/>
        <pt x="265" y="180" on="0"/>
        <pt x="315" y="150" on="0"/>
        <pt x="343" y="150" on="1"/>
        <pt x="389" y="150" on="0"/>
        <pt x="453" y="214" on="0"/>
        <pt x="453" y="258" on="1"/>
        <pt x="453" y="304" on="0"/>
        <pt x="389" y="365" on="0"/>
        <pt x="343" y="365" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 15 values pushed */
          3 1 8 0 27 26 2 7 8 15 1 1 7 3 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          10
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 44 values pushed */
          0 5 5 6 93 9 1 6 6 22 75 10 1 8 8 0 95 0 0 0 31 75 0 7 7
          1 95 0 1 1 29 75 4 1 2 2 3 93 0 3 3 25 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 44 values pushed */
          0 5 5 6 93 9 1 6 6 22 75 10 1 8 8 0 95 0 0 0 31 75 0 7 7
          1 95 0 1 1 32 75 4 1 2 2 3 93 0 3 3 25 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          14
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 44 values pushed */
          0 5 5 6 93 9 1 6 6 22 75 10 1 8 8 0 95 0 0 0 31 75 0 7 7
          1 95 0 1 1 29 75 4 1 2 2 3 93 0 3 3 25 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 44 values pushed */
          0 5 5 6 93 9 1 6 6 22 75 10 1 8 8 0 95 0 0 0 31 75 0 7 7
          1 95 0 1 1 32 75 4 1 2 2 3 93 0 3 3 25 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 42 values pushed */
          0 0 10 1 8 7 0 8 103 0 5 5 6 93 9 1 6 6 22 75 0 7 7 1 95
          0 1 1 32 75 4 1 2 2 3 93 0 3 3 25 3 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 40 values pushed */
          9 1 6 0 5 0 6 5 101 0 0 10 1 8 7 0 8 103 0 7 7 1 95 0 1
          1 32 75 4 1 2 2 3 93 0 3 3 25 3 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 23 values pushed */
          25 25 0 0 25 36 25 35 31 29 0 24 0 24 17 17 17 18 38 36 11 7 26
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="three" xMin="3" yMin="-10" xMax="531" yMax="758">
      <contour>
        <pt x="346" y="549" on="0"/>
        <pt x="299" y="590" on="0"/>
        <pt x="267" y="590" on="1"/>
        <pt x="235" y="590" on="0"/>
        <pt x="189" y="553" on="0"/>
        <pt x="189" y="520" on="1"/>
        <pt x="189" y="504" on="1"/>
        <pt x="16" y="505" on="1"/>
        <pt x="15" y="573" on="0"/>
        <pt x="76" y="689" on="0"/>
        <pt x="191" y="758" on="0"/>
        <pt x="267" y="758" on="1"/>
        <pt x="335" y="758" on="0"/>
        <pt x="451" y="696" on="0"/>
        <pt x="519" y="593" on="0"/>
        <pt x="519" y="533" on="1"/>
        <pt x="519" y="489" on="0"/>
        <pt x="484" y="414" on="0"/>
        <pt x="457" y="389" on="1"/>
        <pt x="488" y="368" on="0"/>
        <pt x="531" y="281" on="0"/>
        <pt x="531" y="232" on="1"/>
        <pt x="531" y="168" on="0"/>
        <pt x="462" y="57" on="0"/>
        <pt x="341" y="-10" on="0"/>
        <pt x="267" y="-10" on="1"/>
        <pt x="193" y="-10" on="0"/>
        <pt x="72" y="54" on="0"/>
        <pt x="3" y="164" on="0"/>
        <pt x="3" y="229" on="1"/>
        <pt x="3" y="240" on="1"/>
        <pt x="3" y="251" on="0"/>
        <pt x="4" y="259" on="1"/>
        <pt x="178" y="259" on="1"/>
        <pt x="175" y="158" on="0"/>
        <pt x="267" y="158" on="1"/>
        <pt x="305" y="158" on="0"/>
        <pt x="356" y="201" on="0"/>
        <pt x="356" y="231" on="1"/>
        <pt x="356" y="264" on="0"/>
        <pt x="310" y="306" on="0"/>
        <pt x="267" y="306" on="1"/>
        <pt x="190" y="306" on="1"/>
        <pt x="190" y="460" on="1"/>
        <pt x="272" y="460" on="1"/>
        <pt x="307" y="460" on="0"/>
        <pt x="346" y="495" on="0"/>
        <pt x="346" y="523" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          18 1 6 7 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 45 values pushed */
          0 1 0 7 0 1 7 126 0 4 6 5 6 4 5 126 0 7 0 6 4 7 6 101 0
          0 0 2 95 0 2 2 22 75 0 5 5 3 95 0 3 3 29 3 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 45 values pushed */
          0 1 0 7 0 1 7 126 0 4 6 5 6 4 5 126 0 7 0 6 4 7 6 101 0
          0 0 2 95 0 2 2 22 75 0 5 5 3 95 0 3 3 32 3 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 11 values pushed */
          33 36 33 22 44 35 19 33 8 7 28
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="threequarters" xMin="274" yMin="-30" xMax="1074" yMax="770">
      <component glyphName="fraction" x="390" y="0" flags="0x0"/>
      <component glyphName="uni2084" x="-40" y="0" flags="0x0"/>
      <component glyphName="uni00B3" x="242" y="-23" flags="0x4"/>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          2 1
          PUSHW[ ]	/* 1 value pushed */
          -23
          PUSHB[ ]	/* 1 value pushed */
          51
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="tilde" xMin="-9" yMin="570" xMax="447" yMax="733">
      <contour>
        <pt x="158" y="733" on="0"/>
        <pt x="191" y="722" on="0"/>
        <pt x="221" y="710" on="1"/>
        <pt x="248" y="699" on="0"/>
        <pt x="276" y="690" on="0"/>
        <pt x="290" y="690" on="1"/>
        <pt x="314" y="690" on="0"/>
        <pt x="348" y="704" on="0"/>
        <pt x="363" y="721" on="1"/>
        <pt x="447" y="681" on="1"/>
        <pt x="429" y="634" on="0"/>
        <pt x="349" y="570" on="0"/>
        <pt x="303" y="570" on="1"/>
        <pt x="279" y="570" on="0"/>
        <pt x="238" y="581" on="0"/>
        <pt x="212" y="592" on="1"/>
        <pt x="166" y="611" on="0"/>
        <pt x="138" y="611" on="1"/>
        <pt x="120" y="611" on="0"/>
        <pt x="94" y="598" on="0"/>
        <pt x="76" y="584" on="0"/>
        <pt x="73" y="582" on="1"/>
        <pt x="-9" y="619" on="1"/>
        <pt x="0" y="653" on="0"/>
        <pt x="53" y="705" on="0"/>
        <pt x="117" y="733" on="0"/>
        <pt x="141" y="733" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          6 100
          WCVTP[ ]	/* WriteCVTInPixels */
          NPUSHB[ ]	/* 48 values pushed */
          8 1 0 3 22 9 2 2 0 2 74 0 0 2 1 0 87 4 1 3 0 2 1 3 2
          103 0 0 0 1 95 0 1 0 1 79 0 0 0 26 0 25 35 37 36 5 7 23
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          6 0
          WCVTP[ ]	/* WriteCVTInPixels */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="two" xMin="64" yMin="0" xMax="570" yMax="752">
      <contour>
        <pt x="323" y="404" on="1"/>
        <pt x="387" y="461" on="0"/>
        <pt x="387" y="523" on="1"/>
        <pt x="387" y="547" on="0"/>
        <pt x="350" y="586" on="0"/>
        <pt x="318" y="586" on="1"/>
        <pt x="275" y="586" on="0"/>
        <pt x="234" y="536" on="0"/>
        <pt x="232" y="500" on="1"/>
        <pt x="64" y="500" on="1"/>
        <pt x="64" y="580" on="0"/>
        <pt x="130" y="693" on="0"/>
        <pt x="247" y="752" on="0"/>
        <pt x="320" y="752" on="1"/>
        <pt x="386" y="752" on="0"/>
        <pt x="500" y="700" on="0"/>
        <pt x="570" y="597" on="0"/>
        <pt x="570" y="523" on="1"/>
        <pt x="570" y="448" on="0"/>
        <pt x="512" y="384" on="1"/>
        <pt x="308" y="173" on="1"/>
        <pt x="569" y="173" on="1"/>
        <pt x="569" y="0" on="1"/>
        <pt x="69" y="0" on="1"/>
        <pt x="69" y="147" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 43 values pushed */
          24 1 4 3 1 74 0 1 0 3 0 1 3 126 0 0 0 2 95 0 2 2 28 75 0
          3 3 4 93 0 4 4 21 4 76 17 22 35 18 36 5 7 25
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="u" xMin="17" yMin="-5" xMax="670" yMax="506">
      <contour>
        <pt x="607" y="506" on="1"/>
        <pt x="607" y="152" on="1"/>
        <pt x="670" y="152" on="1"/>
        <pt x="670" y="0" on="1"/>
        <pt x="432" y="0" on="1"/>
        <pt x="432" y="42" on="1"/>
        <pt x="385" y="-5" on="0"/>
        <pt x="298" y="-5" on="1"/>
        <pt x="238" y="-5" on="0"/>
        <pt x="140" y="46" on="0"/>
        <pt x="82" y="146" on="0"/>
        <pt x="82" y="218" on="1"/>
        <pt x="82" y="354" on="1"/>
        <pt x="17" y="354" on="1"/>
        <pt x="17" y="506" on="1"/>
        <pt x="263" y="506" on="1"/>
        <pt x="263" y="214" on="1"/>
        <pt x="263" y="167" on="0"/>
        <pt x="312" y="119" on="0"/>
        <pt x="352" y="119" on="1"/>
        <pt x="381" y="119" on="0"/>
        <pt x="422" y="161" on="0"/>
        <pt x="426" y="195" on="1"/>
        <pt x="426" y="354" on="1"/>
        <pt x="341" y="354" on="1"/>
        <pt x="341" y="506" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 10 values pushed */
          22 1 0 3 5 1 1 5 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 36 values pushed */
          6 1 3 3 4 93 8 7 2 4 4 23 75 0 0 0 1 95 2 1 1 1 21 75 0
          5 5 1 95 2 1 1 1 21 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          46
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 34 values pushed */
          8 7 2 4 6 1 3 0 4 3 101 0 0 0 1 95 2 1 1 1 21 75 0 5 5
          1 95 2 1 1 1 21 1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 32 values pushed */
          8 7 2 4 6 1 3 0 4 3 101 0 0 0 1 93 0 1 1 21 75 0 5 5 2
          95 0 2 2 21 2 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 16 values pushed */
          0 0 0 25 0 25 19 35 17 20 34 17 17 9 7 27
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uacute" xMin="17" yMin="-5" xMax="670" yMax="729">
      <contour>
        <pt x="386" y="729" on="1"/>
        <pt x="560" y="729" on="1"/>
        <pt x="560" y="716" on="1"/>
        <pt x="410" y="575" on="1"/>
        <pt x="280" y="575" on="1"/>
      </contour>
      <contour>
        <pt x="607" y="506" on="1"/>
        <pt x="607" y="152" on="1"/>
        <pt x="670" y="152" on="1"/>
        <pt x="670" y="0" on="1"/>
        <pt x="432" y="0" on="1"/>
        <pt x="432" y="42" on="1"/>
        <pt x="385" y="-5" on="0"/>
        <pt x="298" y="-5" on="1"/>
        <pt x="238" y="-5" on="0"/>
        <pt x="140" y="46" on="0"/>
        <pt x="82" y="146" on="0"/>
        <pt x="82" y="218" on="1"/>
        <pt x="82" y="354" on="1"/>
        <pt x="17" y="354" on="1"/>
        <pt x="17" y="506" on="1"/>
        <pt x="263" y="506" on="1"/>
        <pt x="263" y="214" on="1"/>
        <pt x="263" y="167" on="0"/>
        <pt x="312" y="119" on="0"/>
        <pt x="352" y="119" on="1"/>
        <pt x="381" y="119" on="0"/>
        <pt x="422" y="161" on="0"/>
        <pt x="426" y="195" on="1"/>
        <pt x="426" y="354" on="1"/>
        <pt x="341" y="354" on="1"/>
        <pt x="341" y="506" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 14 values pushed */
          2 1 1 0 27 1 2 5 10 1 3 7 3 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 46 values pushed */
          0 1 1 0 93 0 0 0 20 75 8 1 5 5 6 93 10 9 2 6 6 23 75 0 2
          2 3 95 4 1 3 3 21 75 0 7 7 3 95 4 1 3 3 21 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          45
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 44 values pushed */
          10 9 2 6 8 1 5 2 6 5 101 0 1 1 0 93 0 0 0 20 75 0 2 2 3
          95 4 1 3 3 21 75 0 7 7 3 95 4 1 3 3 21 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          46
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 42 values pushed */
          0 0 0 1 6 0 1 101 10 9 2 6 8 1 5 2 6 5 101 0 2 2 3 95 4
          1 3 3 21 75 0 7 7 3 95 4 1 3 3 21 3 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 40 values pushed */
          0 0 0 1 6 0 1 101 10 9 2 6 8 1 5 2 6 5 101 0 2 2 3 93 0
          3 3 21 75 0 7 7 4 95 0 4 4 21 4 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 18 values pushed */
          5 5 5 30 5 30 19 35 17 20 34 17 18 18 16 11 7 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ucircumflex" xMin="17" yMin="-5" xMax="670" yMax="735">
      <contour>
        <pt x="272" y="574" on="1"/>
        <pt x="344" y="649" on="1"/>
        <pt x="419" y="574" on="1"/>
        <pt x="556" y="574" on="1"/>
        <pt x="418" y="735" on="1"/>
        <pt x="270" y="735" on="1"/>
        <pt x="133" y="574" on="1"/>
      </contour>
      <contour>
        <pt x="607" y="506" on="1"/>
        <pt x="607" y="152" on="1"/>
        <pt x="670" y="152" on="1"/>
        <pt x="670" y="0" on="1"/>
        <pt x="432" y="0" on="1"/>
        <pt x="432" y="42" on="1"/>
        <pt x="385" y="-5" on="0"/>
        <pt x="298" y="-5" on="1"/>
        <pt x="238" y="-5" on="0"/>
        <pt x="140" y="46" on="0"/>
        <pt x="82" y="146" on="0"/>
        <pt x="82" y="218" on="1"/>
        <pt x="82" y="354" on="1"/>
        <pt x="17" y="354" on="1"/>
        <pt x="17" y="506" on="1"/>
        <pt x="263" y="506" on="1"/>
        <pt x="263" y="214" on="1"/>
        <pt x="263" y="167" on="0"/>
        <pt x="312" y="119" on="0"/>
        <pt x="352" y="119" on="1"/>
        <pt x="381" y="119" on="0"/>
        <pt x="422" y="161" on="0"/>
        <pt x="426" y="195" on="1"/>
        <pt x="426" y="354" on="1"/>
        <pt x="341" y="354" on="1"/>
        <pt x="341" y="506" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 14 values pushed */
          1 1 0 1 29 1 3 6 12 1 4 8 3 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          18
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 49 values pushed */
          0 1 0 1 131 11 2 2 0 7 7 0 110 9 1 6 6 7 93 12 10 2 7 7 23
          75 0 3 3 4 95 5 1 4 4 21 75 0 8 8 4 95 5 1 4 4 21 4 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 48 values pushed */
          0 1 0 1 131 11 2 2 0 7 0 131 9 1 6 6 7 93 12 10 2 7 7 23 75
          0 3 3 4 95 5 1 4 4 21 75 0 8 8 4 95 5 1 4 4 21 4 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          46
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 46 values pushed */
          0 1 0 1 131 11 2 2 0 7 0 131 12 10 2 7 9 1 6 3 7 6 102 0 3
          3 4 95 5 1 4 4 21 75 0 8 8 4 95 5 1 4 4 21 4 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 44 values pushed */
          0 1 0 1 131 11 2 2 0 7 0 131 12 10 2 7 9 1 6 3 7 6 102 0 3
          3 4 93 0 4 4 21 75 0 8 8 5 95 0 5 5 21 5 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 31 values pushed */
          7 7 0 0 7 32 7 32 31 30 27 25 22 21 20 19 15 13 11 10 9 8 0 6 0
          6 17 18 13 7 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="udieresis" xMin="17" yMin="-5" xMax="670" yMax="748">
      <contour>
        <pt x="113" y="692" on="0"/>
        <pt x="168" y="748" on="0"/>
        <pt x="208" y="748" on="1"/>
        <pt x="247" y="748" on="0"/>
        <pt x="302" y="692" on="0"/>
        <pt x="302" y="652" on="1"/>
        <pt x="302" y="613" on="0"/>
        <pt x="247" y="557" on="0"/>
        <pt x="208" y="557" on="1"/>
        <pt x="168" y="557" on="0"/>
        <pt x="113" y="613" on="0"/>
        <pt x="113" y="652" on="1"/>
      </contour>
      <contour>
        <pt x="351" y="692" on="0"/>
        <pt x="406" y="748" on="0"/>
        <pt x="446" y="748" on="1"/>
        <pt x="485" y="748" on="0"/>
        <pt x="540" y="692" on="0"/>
        <pt x="540" y="652" on="1"/>
        <pt x="540" y="613" on="0"/>
        <pt x="485" y="557" on="0"/>
        <pt x="446" y="557" on="1"/>
        <pt x="406" y="557" on="0"/>
        <pt x="351" y="613" on="0"/>
        <pt x="351" y="652" on="1"/>
      </contour>
      <contour>
        <pt x="607" y="506" on="1"/>
        <pt x="607" y="152" on="1"/>
        <pt x="670" y="152" on="1"/>
        <pt x="670" y="0" on="1"/>
        <pt x="432" y="0" on="1"/>
        <pt x="432" y="42" on="1"/>
        <pt x="385" y="-5" on="0"/>
        <pt x="298" y="-5" on="1"/>
        <pt x="238" y="-5" on="0"/>
        <pt x="140" y="46" on="0"/>
        <pt x="82" y="146" on="0"/>
        <pt x="82" y="218" on="1"/>
        <pt x="82" y="354" on="1"/>
        <pt x="17" y="354" on="1"/>
        <pt x="17" y="506" on="1"/>
        <pt x="263" y="506" on="1"/>
        <pt x="263" y="214" on="1"/>
        <pt x="263" y="167" on="0"/>
        <pt x="312" y="119" on="0"/>
        <pt x="352" y="119" on="1"/>
        <pt x="381" y="119" on="0"/>
        <pt x="422" y="161" on="0"/>
        <pt x="426" y="195" on="1"/>
        <pt x="426" y="354" on="1"/>
        <pt x="341" y="354" on="1"/>
        <pt x="341" y="506" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 10 values pushed */
          46 1 4 7 29 1 5 9 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 48 values pushed */
          3 1 1 1 0 95 2 1 0 0 28 75 10 1 7 7 8 93 12 11 2 8 8 23 75
          0 4 4 5 95 6 1 5 5 21 75 0 9 9 5 95 6 1 5 5 21 5 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          46
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 46 values pushed */
          12 11 2 8 10 1 7 4 8 7 101 3 1 1 1 0 95 2 1 0 0 28 75 0 4
          4 5 95 6 1 5 5 21 75 0 9 9 5 95 6 1 5 5 21 5 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 44 values pushed */
          12 11 2 8 10 1 7 4 8 7 101 3 1 1 1 0 95 2 1 0 0 28 75 0 4
          4 5 93 0 5 5 21 75 0 9 9 6 95 0 6 6 21 6 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 22 values pushed */
          24 24 24 49 24 49 48 47 44 42 17 20 34 17 20 36 36 36 33 13 7 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ugrave" xMin="17" yMin="-5" xMax="670" yMax="729">
      <contour>
        <pt x="409" y="575" on="1"/>
        <pt x="311" y="729" on="1"/>
        <pt x="138" y="729" on="1"/>
        <pt x="138" y="716" on="1"/>
        <pt x="282" y="575" on="1"/>
      </contour>
      <contour>
        <pt x="607" y="506" on="1"/>
        <pt x="607" y="152" on="1"/>
        <pt x="670" y="152" on="1"/>
        <pt x="670" y="0" on="1"/>
        <pt x="432" y="0" on="1"/>
        <pt x="432" y="42" on="1"/>
        <pt x="385" y="-5" on="0"/>
        <pt x="298" y="-5" on="1"/>
        <pt x="238" y="-5" on="0"/>
        <pt x="140" y="46" on="0"/>
        <pt x="82" y="146" on="0"/>
        <pt x="82" y="218" on="1"/>
        <pt x="82" y="354" on="1"/>
        <pt x="17" y="354" on="1"/>
        <pt x="17" y="506" on="1"/>
        <pt x="263" y="506" on="1"/>
        <pt x="263" y="214" on="1"/>
        <pt x="263" y="167" on="0"/>
        <pt x="312" y="119" on="0"/>
        <pt x="352" y="119" on="1"/>
        <pt x="381" y="119" on="0"/>
        <pt x="422" y="161" on="0"/>
        <pt x="426" y="195" on="1"/>
        <pt x="426" y="354" on="1"/>
        <pt x="341" y="354" on="1"/>
        <pt x="341" y="506" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 14 values pushed */
          3 1 1 0 27 1 2 5 10 1 3 7 3 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          18
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 48 values pushed */
          0 0 1 0 131 10 1 1 6 6 1 110 8 1 5 5 6 93 11 9 2 6 6 23 75
          0 2 2 3 95 4 1 3 3 21 75 0 7 7 3 95 4 1 3 3 21 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 47 values pushed */
          0 0 1 0 131 10 1 1 6 1 131 8 1 5 5 6 93 11 9 2 6 6 23 75 0
          2 2 3 95 4 1 3 3 21 75 0 7 7 3 95 4 1 3 3 21 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          46
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 45 values pushed */
          0 0 1 0 131 10 1 1 6 1 131 11 9 2 6 8 1 5 2 6 5 102 0 2 2
          3 95 4 1 3 3 21 75 0 7 7 3 95 4 1 3 3 21 3 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 43 values pushed */
          0 0 1 0 131 10 1 1 6 1 131 11 9 2 6 8 1 5 2 6 5 102 0 2 2
          3 93 0 3 3 21 75 0 7 7 4 95 0 4 4 21 4 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 30 values pushed */
          5 5 0 0 5 30 5 30 29 28 25 23 20 19 18 17 13 11 9 8 7 6 0 4 0
          4 17 12 7 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="underscore" xMin="0" yMin="-185" xMax="500" yMax="-33">
      <contour>
        <pt x="0" y="-33" on="1"/>
        <pt x="500" y="-33" on="1"/>
        <pt x="500" y="-185" on="1"/>
        <pt x="0" y="-185" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          6 100
          WCVTP[ ]	/* WriteCVTInPixels */
          NPUSHB[ ]	/* 21 values pushed */
          0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 17 16 2 7 22
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          6 0
          WCVTP[ ]	/* WriteCVTInPixels */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni00B2" xMin="43" yMin="411" xMax="342" yMax="771">
      <contour>
        <pt x="179" y="606" on="1"/>
        <pt x="206" y="625" on="0"/>
        <pt x="202" y="640" on="0"/>
        <pt x="202" y="641" on="1"/>
        <pt x="202" y="651" on="0"/>
        <pt x="188" y="651" on="1"/>
        <pt x="178" y="651" on="0"/>
        <pt x="170" y="641" on="0"/>
        <pt x="171" y="630" on="0"/>
        <pt x="171" y="628" on="1"/>
        <pt x="44" y="628" on="1"/>
        <pt x="43" y="701" on="0"/>
        <pt x="126" y="771" on="0"/>
        <pt x="198" y="771" on="1"/>
        <pt x="233" y="771" on="0"/>
        <pt x="299" y="746" on="0"/>
        <pt x="342" y="693" on="0"/>
        <pt x="342" y="654" on="1"/>
        <pt x="342" y="624" on="0"/>
        <pt x="320" y="591" on="0"/>
        <pt x="296" y="573" on="1"/>
        <pt x="232" y="526" on="1"/>
        <pt x="342" y="526" on="1"/>
        <pt x="342" y="411" on="1"/>
        <pt x="47" y="411" on="1"/>
        <pt x="47" y="521" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          25 1 4 3 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          10
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 22 values pushed */
          1 1 0 0 2 95 0 2 2 70 75 0 4 4 3 93 0 3 3 63 4 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          26
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 28 values pushed */
          0 0 2 1 1 0 112 0 1 1 2 96 0 2 2 70 75 0 4 4 3 93 0 3 3
          63 4 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 25 values pushed */
          0 0 2 1 1 0 112 0 3 0 4 3 4 97 0 1 1 2 96 0 2 2 70 1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 31 values pushed */
          0 0 2 1 1 0 112 0 2 0 1 3 2 1 101 0 3 4 4 3 85 0 3 3 4
          93 0 4 3 4 77
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 8 values pushed */
          17 23 34 34 36 5 9 25
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni00B3" xMin="32" yMin="407" xMax="338" yMax="772">
      <contour>
        <pt x="199" y="647" on="1"/>
        <pt x="199" y="654" on="0"/>
        <pt x="195" y="661" on="0"/>
        <pt x="188" y="661" on="1"/>
        <pt x="174" y="661" on="0"/>
        <pt x="163" y="648" on="0"/>
        <pt x="163" y="631" on="1"/>
        <pt x="41" y="631" on="1"/>
        <pt x="37" y="694" on="0"/>
        <pt x="112" y="772" on="0"/>
        <pt x="188" y="772" on="1"/>
        <pt x="224" y="772" on="0"/>
        <pt x="290" y="740" on="0"/>
        <pt x="330" y="684" on="0"/>
        <pt x="330" y="651" on="1"/>
        <pt x="330" y="628" on="0"/>
        <pt x="316" y="600" on="0"/>
        <pt x="315" y="598" on="1"/>
        <pt x="325" y="587" on="0"/>
        <pt x="338" y="546" on="0"/>
        <pt x="338" y="528" on="1"/>
        <pt x="338" y="498" on="0"/>
        <pt x="299" y="442" on="0"/>
        <pt x="229" y="407" on="0"/>
        <pt x="187" y="407" on="1"/>
        <pt x="110" y="407" on="0"/>
        <pt x="32" y="486" on="0"/>
        <pt x="32" y="547" on="1"/>
        <pt x="154" y="547" on="1"/>
        <pt x="152" y="534" on="0"/>
        <pt x="167" y="510" on="0"/>
        <pt x="182" y="510" on="1"/>
        <pt x="195" y="510" on="0"/>
        <pt x="207" y="527" on="0"/>
        <pt x="207" y="535" on="1"/>
        <pt x="207" y="536" on="1"/>
        <pt x="207" y="551" on="0"/>
        <pt x="185" y="551" on="1"/>
        <pt x="127" y="551" on="1"/>
        <pt x="127" y="620" on="1"/>
        <pt x="192" y="620" on="1"/>
        <pt x="197" y="620" on="0"/>
        <pt x="199" y="629" on="0"/>
        <pt x="199" y="640" on="0"/>
        <pt x="199" y="643" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          10
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 38 values pushed */
          0 0 2 1 1 0 112 0 7 0 6 4 7 6 103 0 4 0 3 4 3 99 0 1 1
          2 96 0 2 2 62 75 0 5 5 63 5 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 38 values pushed */
          0 0 2 1 1 0 112 0 7 0 6 4 7 6 103 0 4 0 3 4 3 99 0 1 1
          2 96 0 2 2 70 75 0 5 5 63 5 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          33
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 40 values pushed */
          0 0 2 1 1 0 112 0 5 4 3 4 5 112 0 7 0 6 4 7 6 103 0 4 0
          3 4 3 99 0 1 1 2 96 0 2 2 70 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 41 values pushed */
          0 0 2 1 1 0 112 0 5 4 3 4 5 3 126 0 7 0 6 4 7 6 103 0 4
          0 3 4 3 99 0 1 1 2 96 0 2 2 70 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          45
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 42 values pushed */
          0 0 2 1 2 0 1 126 0 5 4 3 4 5 3 126 0 7 0 6 4 7 6 103 0
          4 0 3 4 3 99 0 1 1 2 96 0 2 2 70 1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 48 values pushed */
          0 0 2 1 2 0 1 126 0 5 4 3 4 5 3 126 0 2 0 1 7 2 1 101 0
          7 0 6 4 7 6 103 0 4 5 3 4 85 0 4 4 3 95 0 3 4 3 79
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 11 values pushed */
          17 36 34 18 44 34 18 34 8 9 28
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni00B5" xMin="74" yMin="-230" xMax="670" yMax="508">
      <contour>
        <pt x="670" y="152" on="1"/>
        <pt x="670" y="0" on="1"/>
        <pt x="432" y="0" on="1"/>
        <pt x="432" y="42" on="1"/>
        <pt x="385" y="-5" on="0"/>
        <pt x="298" y="-5" on="1"/>
        <pt x="280" y="-5" on="0"/>
        <pt x="260" y="-2" on="1"/>
        <pt x="260" y="-230" on="1"/>
        <pt x="74" y="-230" on="1"/>
        <pt x="74" y="508" on="1"/>
        <pt x="294" y="508" on="1"/>
        <pt x="263" y="506" on="1"/>
        <pt x="263" y="214" on="1"/>
        <pt x="263" y="167" on="0"/>
        <pt x="312" y="119" on="0"/>
        <pt x="352" y="119" on="1"/>
        <pt x="381" y="119" on="0"/>
        <pt x="422" y="161" on="0"/>
        <pt x="426" y="195" on="1"/>
        <pt x="426" y="506" on="1"/>
        <pt x="607" y="506" on="1"/>
        <pt x="607" y="152" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          46
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 14 values pushed */
          19 1 7 4 3 1 0 5 7 1 2 0 3 74
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 14 values pushed */
          19 1 7 4 3 1 0 5 7 1 1 0 3 74
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 40 values pushed */
          0 4 4 3 93 6 1 3 3 23 75 8 1 7 7 0 96 1 1 0 0 21 75 0 5
          5 0 95 1 1 0 0 21 75 0 2 2 25 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          46
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 38 values pushed */
          6 1 3 0 4 7 3 4 101 8 1 7 7 0 96 1 1 0 0 21 75 0 5 5 0
          95 1 1 0 0 21 75 0 2 2 25 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 36 values pushed */
          6 1 3 0 4 7 3 4 101 8 1 7 7 0 94 0 0 0 21 75 0 5 5 1 95
          0 1 1 21 75 0 2 2 25 2 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 16 values pushed */
          0 0 0 22 0 22 19 35 16 17 18 34 17 9 7 27
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni00B9" xMin="18" yMin="410" xMax="271" yMax="770">
      <contour>
        <pt x="18" y="519" on="1"/>
        <pt x="90" y="519" on="1"/>
        <pt x="90" y="607" on="1"/>
        <pt x="21" y="576" on="1"/>
        <pt x="21" y="706" on="1"/>
        <pt x="141" y="770" on="1"/>
        <pt x="205" y="770" on="1"/>
        <pt x="205" y="519" on="1"/>
        <pt x="271" y="519" on="1"/>
        <pt x="271" y="410" on="1"/>
        <pt x="18" y="410" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 8 values pushed */
          4 3 2 3 0 1 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 17 values pushed */
          0 1 1 62 75 0 3 3 0 93 2 1 0 0 63 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 14 values pushed */
          2 1 0 0 3 0 3 98 0 1 1 62 1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 23 values pushed */
          0 1 0 1 131 2 1 0 3 3 0 85 2 1 0 0 3 94 0 3 0 3 78
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          17 17 20 16 4 9 24
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni2074" xMin="10" yMin="410" xMax="358" yMax="783">
      <contour>
        <pt x="309" y="584" on="1"/>
        <pt x="358" y="584" on="1"/>
        <pt x="358" y="492" on="1"/>
        <pt x="309" y="492" on="1"/>
        <pt x="309" y="410" on="1"/>
        <pt x="195" y="410" on="1"/>
        <pt x="195" y="492" on="1"/>
        <pt x="11" y="492" on="1"/>
        <pt x="10" y="589" on="1"/>
        <pt x="147" y="783" on="1"/>
        <pt x="274" y="783" on="1"/>
        <pt x="195" y="672" on="1"/>
        <pt x="309" y="669" on="1"/>
      </contour>
      <contour>
        <pt x="133" y="584" on="1"/>
        <pt x="195" y="584" on="1"/>
        <pt x="195" y="672" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 10 values pushed */
          15 1 5 4 8 1 0 5 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          22
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 23 values pushed */
          6 1 0 3 1 1 2 0 1 102 0 5 0 2 5 2 97 0 4 4 62 4 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 31 values pushed */
          0 4 5 4 131 0 5 0 2 5 85 6 1 0 3 1 1 2 0 1 102 0 5 5 2
          93 0 2 5 2 77
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 10 values pushed */
          17 17 18 17 17 17 16 7 9 27
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni2082" xMin="799" yMin="0" xMax="1096" yMax="366">
      <contour>
        <pt x="935" y="205" on="1"/>
        <pt x="960" y="224" on="0"/>
        <pt x="960" y="235" on="1"/>
        <pt x="960" y="244" on="0"/>
        <pt x="954" y="249" on="0"/>
        <pt x="946" y="249" on="1"/>
        <pt x="934" y="249" on="0"/>
        <pt x="924" y="233" on="0"/>
        <pt x="924" y="224" on="1"/>
        <pt x="800" y="224" on="1"/>
        <pt x="799" y="296" on="0"/>
        <pt x="882" y="366" on="0"/>
        <pt x="952" y="366" on="1"/>
        <pt x="1009" y="366" on="0"/>
        <pt x="1096" y="307" on="0"/>
        <pt x="1096" y="245" on="1"/>
        <pt x="1096" y="229" on="0"/>
        <pt x="1087" y="207" on="0"/>
        <pt x="1074" y="195" on="0"/>
        <pt x="1077" y="199" on="1"/>
        <pt x="983" y="125" on="1"/>
        <pt x="1096" y="125" on="1"/>
        <pt x="1096" y="0" on="1"/>
        <pt x="804" y="0" on="1"/>
        <pt x="804" y="107" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          24 1 4 3 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          10
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 20 values pushed */
          0 2 1 1 0 3 2 0 103 0 3 3 4 93 0 4 4 41 4 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          49
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 26 values pushed */
          0 0 2 1 1 0 112 0 2 0 1 3 2 1 101 0 3 3 4 93 0 4 4 41 4
          76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 27 values pushed */
          0 0 2 1 2 0 1 126 0 2 0 1 3 2 1 101 0 3 3 4 93 0 4 4 41
          4 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 26 values pushed */
          0 0 2 1 1 0 112 0 2 0 1 3 2 1 101 0 3 3 4 93 0 4 4 41 4
          76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 8 values pushed */
          17 23 34 18 36 5 8 25
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni2084" xMin="760" yMin="0" xMax="1114" yMax="374">
      <contour>
        <pt x="760" y="178" on="1"/>
        <pt x="897" y="374" on="1"/>
        <pt x="1014" y="374" on="1"/>
        <pt x="874" y="173" on="1"/>
        <pt x="954" y="173" on="1"/>
        <pt x="954" y="255" on="1"/>
        <pt x="1064" y="255" on="1"/>
        <pt x="1064" y="173" on="1"/>
        <pt x="1114" y="173" on="1"/>
        <pt x="1114" y="87" on="1"/>
        <pt x="1064" y="87" on="1"/>
        <pt x="1064" y="0" on="1"/>
        <pt x="954" y="0" on="1"/>
        <pt x="954" y="87" on="1"/>
        <pt x="761" y="87" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 42 values pushed */
          0 1 1 2 1 74 0 0 2 0 131 3 1 1 6 1 4 5 1 4 102 0 2 2 5
          93 0 5 5 41 5 76 17 17 17 17 17 17 17 7 8 27
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni2215" xMin="-103" yMin="-30" xMax="485" yMax="570">
      <contour>
        <pt x="350" y="570" on="1"/>
        <pt x="485" y="570" on="1"/>
        <pt x="36" y="-30" on="1"/>
        <pt x="-103" y="-30" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          2 0 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="v" xMin="20" yMin="0" xMax="626" yMax="506">
      <contour>
        <pt x="20" y="506" on="1"/>
        <pt x="321" y="506" on="1"/>
        <pt x="321" y="354" on="1"/>
        <pt x="249" y="354" on="1"/>
        <pt x="321" y="184" on="1"/>
        <pt x="389" y="354" on="1"/>
        <pt x="325" y="354" on="1"/>
        <pt x="325" y="506" on="1"/>
        <pt x="626" y="506" on="1"/>
        <pt x="626" y="354" on="1"/>
        <pt x="551" y="354" on="1"/>
        <pt x="401" y="0" on="1"/>
        <pt x="232" y="0" on="1"/>
        <pt x="82" y="354" on="1"/>
        <pt x="20" y="354" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          4 1 5 1 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 20 values pushed */
          6 4 2 3 1 1 0 93 3 1 0 0 23 75 0 5 5 21 5 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 18 values pushed */
          3 1 0 6 4 2 3 1 5 0 1 101 0 5 5 21 5 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 10 values pushed */
          17 17 17 17 18 17 16 7 7 27
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="w" xMin="30" yMin="0" xMax="962" yMax="506">
      <contour>
        <pt x="30" y="506" on="1"/>
        <pt x="331" y="506" on="1"/>
        <pt x="331" y="354" on="1"/>
        <pt x="262" y="354" on="1"/>
        <pt x="304" y="225" on="1"/>
        <pt x="402" y="506" on="1"/>
        <pt x="569" y="506" on="1"/>
        <pt x="670" y="203" on="1"/>
        <pt x="724" y="354" on="1"/>
        <pt x="661" y="354" on="1"/>
        <pt x="661" y="506" on="1"/>
        <pt x="962" y="506" on="1"/>
        <pt x="962" y="354" on="1"/>
        <pt x="885" y="354" on="1"/>
        <pt x="752" y="0" on="1"/>
        <pt x="583" y="0" on="1"/>
        <pt x="482" y="294" on="1"/>
        <pt x="481" y="294" on="1"/>
        <pt x="375" y="0" on="1"/>
        <pt x="212" y="0" on="1"/>
        <pt x="92" y="354" on="1"/>
        <pt x="30" y="354" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 8 values pushed */
          16 7 4 3 6 1 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 22 values pushed */
          8 5 3 3 1 1 0 93 4 2 2 0 0 23 75 7 1 6 6 21 6 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 20 values pushed */
          4 2 2 0 8 5 3 3 1 6 0 1 101 7 1 6 6 21 6 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 12 values pushed */
          17 19 17 17 17 18 18 17 16 9 7 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="x" xMin="33" yMin="0" xMax="598" yMax="506">
      <contour>
        <pt x="365" y="152" on="1"/>
        <pt x="343" y="166" on="0"/>
        <pt x="315" y="189" on="1"/>
        <pt x="260" y="152" on="1"/>
        <pt x="296" y="152" on="1"/>
        <pt x="296" y="0" on="1"/>
        <pt x="33" y="0" on="1"/>
        <pt x="33" y="152" on="1"/>
        <pt x="86" y="152" on="1"/>
        <pt x="202" y="255" on="1"/>
        <pt x="132" y="319" on="0"/>
        <pt x="96" y="354" on="1"/>
        <pt x="34" y="354" on="1"/>
        <pt x="34" y="506" on="1"/>
        <pt x="297" y="506" on="1"/>
        <pt x="297" y="354" on="1"/>
        <pt x="273" y="354" on="1"/>
        <pt x="278" y="352" on="0"/>
        <pt x="309" y="326" on="0"/>
        <pt x="319" y="326" on="1"/>
        <pt x="357" y="350" on="0"/>
        <pt x="362" y="354" on="1"/>
        <pt x="335" y="354" on="1"/>
        <pt x="335" y="506" on="1"/>
        <pt x="598" y="506" on="1"/>
        <pt x="598" y="354" on="1"/>
        <pt x="537" y="354" on="1"/>
        <pt x="430" y="256" on="1"/>
        <pt x="428" y="258" on="0"/>
        <pt x="498" y="194" on="1"/>
        <pt x="544" y="152" on="1"/>
        <pt x="598" y="152" on="1"/>
        <pt x="598" y="0" on="1"/>
        <pt x="335" y="0" on="1"/>
        <pt x="335" y="152" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 8 values pushed */
          27 9 2 3 0 6 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 38 values pushed */
          0 6 3 0 3 6 0 126 9 7 5 3 3 3 4 93 8 1 4 4 23 75 13 12 10
          2 4 0 0 1 93 11 1 1 1 21 1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 36 values pushed */
          0 6 3 0 3 6 0 126 8 1 4 9 7 5 3 3 6 4 3 101 13 12 10 2 4
          0 0 1 93 11 1 1 1 21 1 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 24 values pushed */
          0 0 0 34 0 34 33 32 31 30 26 25 17 18 18 17 17 19 17 17 19 14 7 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="y" xMin="28" yMin="-230" xMax="609" yMax="506">
      <contour>
        <pt x="28" y="506" on="1"/>
        <pt x="296" y="506" on="1"/>
        <pt x="296" y="354" on="1"/>
        <pt x="265" y="354" on="1"/>
        <pt x="322" y="212" on="1"/>
        <pt x="378" y="354" on="1"/>
        <pt x="341" y="354" on="1"/>
        <pt x="341" y="506" on="1"/>
        <pt x="609" y="506" on="1"/>
        <pt x="609" y="354" on="1"/>
        <pt x="553" y="354" on="1"/>
        <pt x="366" y="-78" on="1"/>
        <pt x="461" y="-78" on="1"/>
        <pt x="461" y="-230" on="1"/>
        <pt x="108" y="-230" on="1"/>
        <pt x="108" y="-78" on="1"/>
        <pt x="205" y="-78" on="1"/>
        <pt x="237" y="3" on="1"/>
        <pt x="83" y="354" on="1"/>
        <pt x="28" y="354" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 7 values pushed */
          17 4 2 5 1 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 26 values pushed */
          8 4 2 3 1 1 0 93 3 1 0 0 23 75 7 1 5 5 6 93 0 6 6 25 6
          76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 24 values pushed */
          3 1 0 8 4 2 3 1 5 0 1 101 7 1 5 5 6 93 0 6 6 25 6 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 12 values pushed */
          18 17 17 17 17 17 18 17 16 9 7 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="yacute" xMin="28" yMin="-230" xMax="609" yMax="729">
      <contour>
        <pt x="375" y="729" on="1"/>
        <pt x="549" y="729" on="1"/>
        <pt x="549" y="716" on="1"/>
        <pt x="399" y="575" on="1"/>
        <pt x="269" y="575" on="1"/>
      </contour>
      <contour>
        <pt x="28" y="506" on="1"/>
        <pt x="296" y="506" on="1"/>
        <pt x="296" y="354" on="1"/>
        <pt x="265" y="354" on="1"/>
        <pt x="322" y="212" on="1"/>
        <pt x="378" y="354" on="1"/>
        <pt x="341" y="354" on="1"/>
        <pt x="341" y="506" on="1"/>
        <pt x="609" y="506" on="1"/>
        <pt x="609" y="354" on="1"/>
        <pt x="553" y="354" on="1"/>
        <pt x="366" y="-78" on="1"/>
        <pt x="461" y="-78" on="1"/>
        <pt x="461" y="-230" on="1"/>
        <pt x="108" y="-230" on="1"/>
        <pt x="108" y="-78" on="1"/>
        <pt x="205" y="-78" on="1"/>
        <pt x="237" y="3" on="1"/>
        <pt x="83" y="354" on="1"/>
        <pt x="28" y="354" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 11 values pushed */
          2 1 1 0 22 9 2 7 3 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 36 values pushed */
          0 1 1 0 93 0 0 0 20 75 10 6 4 3 3 3 2 93 5 1 2 2 23 75 9
          1 7 7 8 93 0 8 8 25 8 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          45
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 34 values pushed */
          5 1 2 10 6 4 3 3 7 2 3 101 0 1 1 0 93 0 0 0 20 75 9 1 7
          7 8 93 0 8 8 25 8 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 32 values pushed */
          0 0 0 1 2 0 1 101 5 1 2 10 6 4 3 3 7 2 3 101 9 1 7 7 8
          93 0 8 8 25 8 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 16 values pushed */
          24 23 21 20 17 17 17 17 18 17 17 18 16 11 7 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ydieresis" xMin="28" yMin="-230" xMax="609" yMax="748">
      <contour>
        <pt x="102" y="692" on="0"/>
        <pt x="157" y="748" on="0"/>
        <pt x="197" y="748" on="1"/>
        <pt x="236" y="748" on="0"/>
        <pt x="291" y="692" on="0"/>
        <pt x="291" y="652" on="1"/>
        <pt x="291" y="613" on="0"/>
        <pt x="236" y="557" on="0"/>
        <pt x="197" y="557" on="1"/>
        <pt x="157" y="557" on="0"/>
        <pt x="102" y="613" on="0"/>
        <pt x="102" y="652" on="1"/>
      </contour>
      <contour>
        <pt x="339" y="692" on="0"/>
        <pt x="394" y="748" on="0"/>
        <pt x="434" y="748" on="1"/>
        <pt x="473" y="748" on="0"/>
        <pt x="528" y="692" on="0"/>
        <pt x="528" y="652" on="1"/>
        <pt x="528" y="613" on="0"/>
        <pt x="473" y="557" on="0"/>
        <pt x="434" y="557" on="1"/>
        <pt x="394" y="557" on="0"/>
        <pt x="339" y="613" on="0"/>
        <pt x="339" y="652" on="1"/>
      </contour>
      <contour>
        <pt x="28" y="506" on="1"/>
        <pt x="296" y="506" on="1"/>
        <pt x="296" y="354" on="1"/>
        <pt x="265" y="354" on="1"/>
        <pt x="322" y="212" on="1"/>
        <pt x="378" y="354" on="1"/>
        <pt x="341" y="354" on="1"/>
        <pt x="341" y="506" on="1"/>
        <pt x="609" y="506" on="1"/>
        <pt x="609" y="354" on="1"/>
        <pt x="553" y="354" on="1"/>
        <pt x="366" y="-78" on="1"/>
        <pt x="461" y="-78" on="1"/>
        <pt x="461" y="-230" on="1"/>
        <pt x="108" y="-230" on="1"/>
        <pt x="108" y="-78" on="1"/>
        <pt x="205" y="-78" on="1"/>
        <pt x="237" y="3" on="1"/>
        <pt x="83" y="354" on="1"/>
        <pt x="28" y="354" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 7 values pushed */
          41 28 2 9 5 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 38 values pushed */
          3 1 1 1 0 95 2 1 0 0 28 75 12 8 6 3 5 5 4 93 7 1 4 4 23
          75 11 1 9 9 10 93 0 10 10 25 10 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 36 values pushed */
          7 1 4 12 8 6 3 5 9 4 5 101 3 1 1 1 0 95 2 1 0 0 28 75 11
          1 9 9 10 93 0 10 10 25 10 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 20 values pushed */
          43 42 40 39 38 37 36 35 17 17 18 17 19 36 36 36 33 13 7 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="yen" xMin="22" yMin="0" xMax="757" yMax="740">
      <contour>
        <pt x="757" y="740" on="1"/>
        <pt x="757" y="588" on="1"/>
        <pt x="705" y="588" on="1"/>
        <pt x="600" y="467" on="1"/>
        <pt x="673" y="467" on="1"/>
        <pt x="673" y="321" on="1"/>
        <pt x="481" y="321" on="1"/>
        <pt x="481" y="307" on="1"/>
        <pt x="673" y="307" on="1"/>
        <pt x="673" y="161" on="1"/>
        <pt x="481" y="161" on="1"/>
        <pt x="481" y="152" on="1"/>
        <pt x="576" y="152" on="1"/>
        <pt x="576" y="0" on="1"/>
        <pt x="214" y="0" on="1"/>
        <pt x="214" y="152" on="1"/>
        <pt x="301" y="152" on="1"/>
        <pt x="301" y="161" on="1"/>
        <pt x="109" y="161" on="1"/>
        <pt x="109" y="307" on="1"/>
        <pt x="301" y="307" on="1"/>
        <pt x="301" y="321" on="1"/>
        <pt x="109" y="321" on="1"/>
        <pt x="109" y="467" on="1"/>
        <pt x="191" y="467" on="1"/>
        <pt x="123" y="547" on="0"/>
        <pt x="90" y="588" on="1"/>
        <pt x="22" y="588" on="1"/>
        <pt x="22" y="740" on="1"/>
        <pt x="367" y="740" on="1"/>
        <pt x="367" y="588" on="1"/>
        <pt x="309" y="588" on="1"/>
        <pt x="392" y="470" on="1"/>
        <pt x="452" y="548" on="0"/>
        <pt x="480" y="588" on="1"/>
        <pt x="413" y="588" on="1"/>
        <pt x="413" y="740" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 85 values pushed */
          32 1 1 0 1 74 11 1 1 10 1 2 3 1 2 101 9 1 3 8 1 4 5 3 4
          101 15 14 12 3 0 0 13 93 17 16 2 13 13 20 75 7 1 5 5 6 93 0 6 6
          21 6 76 0 0 0 36 0 36 35 34 31 30 29 28 27 26 24 23 22 21 20 19 17 17
          17 17 17 17 17 17 17 18 7 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="z" xMin="26" yMin="0" xMax="521" yMax="506">
      <contour>
        <pt x="49" y="89" on="1"/>
        <pt x="241" y="357" on="1"/>
        <pt x="166" y="357" on="1"/>
        <pt x="166" y="279" on="1"/>
        <pt x="26" y="279" on="1"/>
        <pt x="26" y="506" on="1"/>
        <pt x="498" y="506" on="1"/>
        <pt x="498" y="407" on="1"/>
        <pt x="291" y="151" on="1"/>
        <pt x="381" y="151" on="1"/>
        <pt x="381" y="252" on="1"/>
        <pt x="521" y="252" on="1"/>
        <pt x="521" y="0" on="1"/>
        <pt x="49" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 10 values pushed */
          7 1 0 2 0 1 5 3 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 34 values pushed */
          0 1 0 4 0 1 112 0 4 3 3 4 110 0 0 0 2 93 0 2 2 23 75 0 3
          3 5 94 0 5 5 21 5 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          16
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 35 values pushed */
          0 1 0 4 0 1 112 0 4 3 0 4 3 124 0 0 0 2 93 0 2 2 23 75 0
          3 3 5 94 0 5 5 21 5 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 36 values pushed */
          0 1 0 4 0 1 4 126 0 4 3 0 4 3 124 0 0 0 2 93 0 2 2 23 75
          0 3 3 5 94 0 5 5 21 5 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 34 values pushed */
          0 1 0 4 0 1 4 126 0 4 3 0 4 3 124 0 2 0 0 1 2 0 101 0 3
          3 5 94 0 5 5 21 5 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 9 values pushed */
          17 17 18 17 17 17 6 7 26
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="zcaron" xMin="26" yMin="0" xMax="521" yMax="713">
      <component glyphName="z" x="0" y="0" flags="0x0"/>
      <component glyphName="caron" x="29" y="0" flags="0x0"/>
    </TTGlyph>

    <TTGlyph name="zcaron.001" xMin="26" yMin="0" xMax="521" yMax="713">
      <component glyphName="z" x="0" y="0" flags="0x0"/>
      <component glyphName="caron" x="29" y="0" flags="0x0"/>
    </TTGlyph>

    <TTGlyph name="zero" xMin="39" yMin="-6" xMax="623" yMax="748">
      <contour>
        <pt x="183" y="-6" on="0"/>
        <pt x="39" y="199" on="0"/>
        <pt x="39" y="368" on="1"/>
        <pt x="39" y="539" on="0"/>
        <pt x="181" y="748" on="0"/>
        <pt x="332" y="748" on="1"/>
        <pt x="481" y="748" on="0"/>
        <pt x="623" y="541" on="0"/>
        <pt x="623" y="372" on="1"/>
        <pt x="623" y="204" on="0"/>
        <pt x="479" y="-6" on="0"/>
        <pt x="331" y="-6" on="1"/>
      </contour>
      <contour>
        <pt x="380" y="166" on="0"/>
        <pt x="428" y="216" on="0"/>
        <pt x="443" y="301" on="0"/>
        <pt x="443" y="372" on="1"/>
        <pt x="443" y="442" on="0"/>
        <pt x="429" y="527" on="0"/>
        <pt x="381" y="577" on="0"/>
        <pt x="332" y="577" on="1"/>
        <pt x="283" y="577" on="0"/>
        <pt x="233" y="527" on="0"/>
        <pt x="218" y="441" on="0"/>
        <pt x="218" y="372" on="1"/>
        <pt x="218" y="302" on="0"/>
        <pt x="233" y="216" on="0"/>
        <pt x="282" y="166" on="0"/>
        <pt x="331" y="166" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          10
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 23 values pushed */
          0 2 2 0 95 0 0 0 28 75 5 1 3 3 1 95 4 1 1 1 32 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 23 values pushed */
          0 2 2 0 95 0 0 0 28 75 5 1 3 3 1 95 4 1 1 1 21 1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 23 values pushed */
          0 2 2 0 95 0 0 0 28 75 5 1 3 3 1 95 4 1 1 1 32 1 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 18 values pushed */
          12 12 0 0 12 27 12 26 20 18 0 11 0 10 36 6 7 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

  </glyf>

  <name>
    <namerecord nameID="0" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Copyright (c) 2010 by Anton Koovit.
    </namerecord>
    <namerecord nameID="1" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Arvo_reg_MM_12b
    </namerecord>
    <namerecord nameID="2" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Arvo v.2
    </namerecord>
    <namerecord nameID="3" platformID="1" platEncID="0" langID="0x0" unicode="True">
      1.000;KORK;Arvo_reg_MM_12b-Arvov.2
    </namerecord>
    <namerecord nameID="4" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Arvo_reg_MM_12b Arvo v.2
    </namerecord>
    <namerecord nameID="5" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Version 1.000
    </namerecord>
    <namerecord nameID="6" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Arvo_reg_MM_12b-Arvov.2
    </namerecord>
    <namerecord nameID="7" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Copyright (c) 2010 by Anton Koovit. 
    </namerecord>
    <namerecord nameID="8" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Anton Koovit
    </namerecord>
    <namerecord nameID="9" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Anton Koovit
    </namerecord>
    <namerecord nameID="10" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Copyright (c) 2010 by Anton Koovit. 
All rights reserved under SIL openfont License 1.1 
    </namerecord>
    <namerecord nameID="11" platformID="1" platEncID="0" langID="0x0" unicode="True">
      google.com
    </namerecord>
    <namerecord nameID="12" platformID="1" platEncID="0" langID="0x0" unicode="True">
      anton.korkork.com
    </namerecord>
    <namerecord nameID="13" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Arvo roman regular can be used under SIL openfont License 1.1 For conditions of use, modification and resale read carefully full Open Font License text. No warranty, no liabilty.
    </namerecord>
    <namerecord nameID="14" platformID="1" platEncID="0" langID="0x0" unicode="True">
      anton.korkork.com/Arvo/OFL.htm
    </namerecord>
    <namerecord nameID="0" platformID="3" platEncID="1" langID="0x409">
      Copyright (c) 2010 by Anton Koovit.
    </namerecord>
    <namerecord nameID="1" platformID="3" platEncID="1" langID="0x409">
      Arvo_reg_MM_12b Arvo v.2
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x409">
      Regular
    </namerecord>
    <namerecord nameID="3" platformID="3" platEncID="1" langID="0x409">
      1.000;KORK;Arvo_reg_MM_12b-Arvov.2
    </namerecord>
    <namerecord nameID="4" platformID="3" platEncID="1" langID="0x409">
      Arvo_reg_MM_12b Arvo v.2
    </namerecord>
    <namerecord nameID="5" platformID="3" platEncID="1" langID="0x409">
      Version 1.000
    </namerecord>
    <namerecord nameID="6" platformID="3" platEncID="1" langID="0x409">
      Arvo_reg_MM_12b-Arvov.2
    </namerecord>
    <namerecord nameID="7" platformID="3" platEncID="1" langID="0x409">
      Copyright (c) 2010 by Anton Koovit. 
    </namerecord>
    <namerecord nameID="8" platformID="3" platEncID="1" langID="0x409">
      Anton Koovit
    </namerecord>
    <namerecord nameID="9" platformID="3" platEncID="1" langID="0x409">
      Anton Koovit
    </namerecord>
    <namerecord nameID="10" platformID="3" platEncID="1" langID="0x409">
      Copyright (c) 2010 by Anton Koovit. 
All rights reserved under SIL openfont License 1.1 
    </namerecord>
    <namerecord nameID="11" platformID="3" platEncID="1" langID="0x409">
      google.com
    </namerecord>
    <namerecord nameID="12" platformID="3" platEncID="1" langID="0x409">
      anton.korkork.com
    </namerecord>
    <namerecord nameID="13" platformID="3" platEncID="1" langID="0x409">
      Arvo roman regular can be used under SIL openfont License 1.1 For conditions of use, modification and resale read carefully full Open Font License text. No warranty, no liabilty.
    </namerecord>
    <namerecord nameID="14" platformID="3" platEncID="1" langID="0x409">
      anton.korkork.com/Arvo/OFL.htm
    </namerecord>
    <namerecord nameID="16" platformID="3" platEncID="1" langID="0x409">
      Arvo_reg_MM_12b
    </namerecord>
    <namerecord nameID="17" platformID="3" platEncID="1" langID="0x409">
      Arvo v.2
    </namerecord>
  </name>

  <post>
    <formatType value="2.0"/>
    <italicAngle value="0.0"/>
    <underlinePosition value="-75"/>
    <underlineThickness value="50"/>
    <isFixedPitch value="0"/>
    <minMemType42 value="0"/>
    <maxMemType42 value="0"/>
    <minMemType1 value="0"/>
    <maxMemType1 value="0"/>
    <psNames>
      <!-- This file uses unique glyph names based on the information
           found in the 'post' table. Since these names might not be unique,
           we have to invent artificial names in case of clashes. In order to
           be able to retain the original information, we need a name to
           ps name mapping for those cases where they differ. That's what
           you see below.
            -->
    </psNames>
    <extraNames>
      <!-- following are the name that are not taken from the standard Mac glyph order -->
      <psName name="ccaron.001"/>
      <psName name="scaron.001"/>
      <psName name="zcaron.001"/>
      <psName name="uni2082"/>
      <psName name="uni2084"/>
      <psName name="uni00B9"/>
      <psName name="uni00B2"/>
      <psName name="uni00B3"/>
      <psName name="uni2074"/>
      <psName name="uni2215"/>
      <psName name="uni00B5"/>
    </extraNames>
  </post>

  <gasp>
    <gaspRange rangeMaxPPEM="65535" rangeGaspBehavior="15"/>
  </gasp>

  <GDEF>
    <Version value="1.0"/>
    <GlyphClassDef Format="2">
    </GlyphClassDef>
  </GDEF>

  <GPOS>
    <Version value="1.0"/>
    <ScriptList>
      <!-- ScriptCount=1 -->
      <ScriptRecord index="0">
        <ScriptTag value="DFLT"/>
        <Script>
          <DefaultLangSys>
            <ReqFeatureIndex value="65535"/>
            <!-- FeatureCount=1 -->
            <FeatureIndex index="0" value="0"/>
          </DefaultLangSys>
          <!-- LangSysCount=0 -->
        </Script>
      </ScriptRecord>
    </ScriptList>
    <FeatureList>
      <!-- FeatureCount=1 -->
      <FeatureRecord index="0">
        <FeatureTag value="kern"/>
        <Feature>
          <!-- LookupCount=1 -->
          <LookupListIndex index="0" value="0"/>
        </Feature>
      </FeatureRecord>
    </FeatureList>
    <LookupList>
      <!-- LookupCount=1 -->
      <Lookup index="0">
        <!-- LookupType=2 -->
        <LookupFlag value="8"/>
        <!-- SubTableCount=1 -->
        <PairPos index="0" Format="1">
          <Coverage Format="1">
            <Glyph value="P"/>
            <Glyph value="T"/>
          </Coverage>
          <ValueFormat1 value="4"/>
          <ValueFormat2 value="0"/>
          <!-- PairSetCount=2 -->
          <PairSet index="0">
            <!-- PairValueCount=1 -->
            <PairValueRecord index="0">
              <SecondGlyph value="period"/>
              <Value1 XAdvance="72"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="1">
            <!-- PairValueCount=1 -->
            <PairValueRecord index="0">
              <SecondGlyph value="period"/>
              <Value1 XAdvance="54"/>
            </PairValueRecord>
          </PairSet>
        </PairPos>
      </Lookup>
    </LookupList>
  </GPOS>

  <GSUB>
    <Version value="1.0"/>
  </GSUB>

  <DSIG>
    <!-- note that the Digital Signature will be invalid after recompilation! -->
    <tableHeader flag="0x0" numSigs="0" version="1"/>
  </DSIG>

</ttFont>
